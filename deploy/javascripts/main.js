if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3058";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5088__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__5087 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5087) : cljs.core.into_array.call(null, G__5087);
      }());
    };
    var G__5088 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__5089__i = 0, G__5089__a = new Array(arguments.length - 0);
        while (G__5089__i < G__5089__a.length) {
          G__5089__a[G__5089__i] = arguments[G__5089__i + 0];
          ++G__5089__i;
        }
        args = new cljs.core.IndexedSeq(G__5089__a, 0);
      }
      return G__5088__delegate.call(this, args);
    };
    G__5088.cljs$lang$maxFixedArity = 0;
    G__5088.cljs$lang$applyTo = function(arglist__5090) {
      var args = cljs.core.seq(arglist__5090);
      return G__5088__delegate(args);
    };
    G__5088.cljs$core$IFn$_invoke$arity$variadic = G__5088__delegate;
    return G__5088;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__5092 = x;
  return goog.isString(G__5092);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__5094 = x__$1;
    return goog.typeOf(G__5094);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4060__auto__ = ty;
    if (cljs.core.truth_(and__4060__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4060__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__5096 = obj;
    return goog.typeOf(G__5096);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__5098 = Symbol;
  return goog.typeOf(G__5098);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var cljs$core$make_array = null;
  var cljs$core$make_array__1 = function(size) {
    return new Array(size);
  };
  var cljs$core$make_array__2 = function(type, size) {
    return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  cljs$core$make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return cljs$core$make_array__1.call(this, type);
      case 2:
        return cljs$core$make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
  cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
  return cljs$core$make_array;
}();
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4959__auto___5100 = len;
  var i_5101 = 0;
  while (true) {
    if (i_5101 < n__4959__auto___5100) {
      new_arr[i_5101] = arr[i_5101];
      var G__5102 = i_5101 + 1;
      i_5101 = G__5102;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__5103 = i + 1;
      i = G__5103;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var cljs$core$aget = null;
  var cljs$core$aget__2 = function(array, i) {
    return array[i];
  };
  var cljs$core$aget__3 = function() {
    var G__5112__delegate = function(array, i, idxs) {
      var G__5109 = cljs$core$aget;
      var G__5110 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__5111 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5109, G__5110, G__5111) : cljs.core.apply.call(null, G__5109, G__5110, G__5111);
    };
    var G__5112 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__5113__i = 0, G__5113__a = new Array(arguments.length - 2);
        while (G__5113__i < G__5113__a.length) {
          G__5113__a[G__5113__i] = arguments[G__5113__i + 2];
          ++G__5113__i;
        }
        idxs = new cljs.core.IndexedSeq(G__5113__a, 0);
      }
      return G__5112__delegate.call(this, array, i, idxs);
    };
    G__5112.cljs$lang$maxFixedArity = 2;
    G__5112.cljs$lang$applyTo = function(arglist__5114) {
      var array = cljs.core.first(arglist__5114);
      arglist__5114 = cljs.core.next(arglist__5114);
      var i = cljs.core.first(arglist__5114);
      var idxs = cljs.core.rest(arglist__5114);
      return G__5112__delegate(array, i, idxs);
    };
    G__5112.cljs$core$IFn$_invoke$arity$variadic = G__5112__delegate;
    return G__5112;
  }();
  cljs$core$aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$aget__2.call(this, array, i);
      default:
        var G__5115 = null;
        if (arguments.length > 2) {
          var G__5116__i = 0, G__5116__a = new Array(arguments.length - 2);
          while (G__5116__i < G__5116__a.length) {
            G__5116__a[G__5116__i] = arguments[G__5116__i + 2];
            ++G__5116__i;
          }
          G__5115 = new cljs.core.IndexedSeq(G__5116__a, 0);
        }
        return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__5115);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$aget.cljs$lang$maxFixedArity = 2;
  cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
  cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
  cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$aget;
}();
cljs.core.aset = function() {
  var cljs$core$aset = null;
  var cljs$core$aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var cljs$core$aset__4 = function() {
    var G__5125__delegate = function(array, idx, idx2, idxv) {
      var G__5121 = cljs$core$aset;
      var G__5122 = array[idx];
      var G__5123 = idx2;
      var G__5124 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5121, G__5122, G__5123, G__5124) : cljs.core.apply.call(null, G__5121, G__5122, G__5123, G__5124);
    };
    var G__5125 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__5126__i = 0, G__5126__a = new Array(arguments.length - 3);
        while (G__5126__i < G__5126__a.length) {
          G__5126__a[G__5126__i] = arguments[G__5126__i + 3];
          ++G__5126__i;
        }
        idxv = new cljs.core.IndexedSeq(G__5126__a, 0);
      }
      return G__5125__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5125.cljs$lang$maxFixedArity = 3;
    G__5125.cljs$lang$applyTo = function(arglist__5127) {
      var array = cljs.core.first(arglist__5127);
      arglist__5127 = cljs.core.next(arglist__5127);
      var idx = cljs.core.first(arglist__5127);
      arglist__5127 = cljs.core.next(arglist__5127);
      var idx2 = cljs.core.first(arglist__5127);
      var idxv = cljs.core.rest(arglist__5127);
      return G__5125__delegate(array, idx, idx2, idxv);
    };
    G__5125.cljs$core$IFn$_invoke$arity$variadic = G__5125__delegate;
    return G__5125;
  }();
  cljs$core$aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$aset__3.call(this, array, idx, idx2);
      default:
        var G__5128 = null;
        if (arguments.length > 3) {
          var G__5129__i = 0, G__5129__a = new Array(arguments.length - 3);
          while (G__5129__i < G__5129__a.length) {
            G__5129__a[G__5129__i] = arguments[G__5129__i + 3];
            ++G__5129__i;
          }
          G__5128 = new cljs.core.IndexedSeq(G__5129__a, 0);
        }
        return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__5128);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$aset.cljs$lang$maxFixedArity = 3;
  cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
  cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
  cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$aset;
}();
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var cljs$core$into_array = null;
  var cljs$core$into_array__1 = function(aseq) {
    return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var cljs$core$into_array__2 = function(type, aseq) {
    var G__5135 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__5136 = [];
    var G__5137 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5135, G__5136, G__5137) : cljs.core.reduce.call(null, G__5135, G__5136, G__5137);
  };
  cljs$core$into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$into_array__1.call(this, type);
      case 2:
        return cljs$core$into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
  cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
  return cljs$core$into_array;
}();
cljs.core.js_invoke = function() {
  var cljs$core$js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var cljs$core$js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__5138__i = 0, G__5138__a = new Array(arguments.length - 2);
      while (G__5138__i < G__5138__a.length) {
        G__5138__a[G__5138__i] = arguments[G__5138__i + 2];
        ++G__5138__i;
      }
      args = new cljs.core.IndexedSeq(G__5138__a, 0);
    }
    return cljs$core$js_invoke__delegate.call(this, obj, s, args);
  };
  cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
  cljs$core$js_invoke.cljs$lang$applyTo = function(arglist__5139) {
    var obj = cljs.core.first(arglist__5139);
    arglist__5139 = cljs.core.next(arglist__5139);
    var s = cljs.core.first(arglist__5139);
    var args = cljs.core.rest(arglist__5139);
    return cljs$core$js_invoke__delegate(obj, s, args);
  };
  cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
  return cljs$core$js_invoke;
}();
cljs.core.Fn = function() {
  var obj5141 = {};
  return obj5141;
}();
cljs.core.IFn = function() {
  var obj5143 = {};
  return obj5143;
}();
cljs.core._invoke = function() {
  var cljs$core$_invoke = null;
  var cljs$core$_invoke__1 = function(this$) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5189 = x__4716__auto__;
          return goog.typeOf(G__5189);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var cljs$core$_invoke__2 = function(this$, a) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5191 = x__4716__auto__;
          return goog.typeOf(G__5191);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var cljs$core$_invoke__3 = function(this$, a, b) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5193 = x__4716__auto__;
          return goog.typeOf(G__5193);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var cljs$core$_invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5195 = x__4716__auto__;
          return goog.typeOf(G__5195);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var cljs$core$_invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5197 = x__4716__auto__;
          return goog.typeOf(G__5197);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var cljs$core$_invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5199 = x__4716__auto__;
          return goog.typeOf(G__5199);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var cljs$core$_invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5201 = x__4716__auto__;
          return goog.typeOf(G__5201);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var cljs$core$_invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5203 = x__4716__auto__;
          return goog.typeOf(G__5203);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var cljs$core$_invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5205 = x__4716__auto__;
          return goog.typeOf(G__5205);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var cljs$core$_invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5207 = x__4716__auto__;
          return goog.typeOf(G__5207);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var cljs$core$_invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5209 = x__4716__auto__;
          return goog.typeOf(G__5209);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var cljs$core$_invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5211 = x__4716__auto__;
          return goog.typeOf(G__5211);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var cljs$core$_invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5213 = x__4716__auto__;
          return goog.typeOf(G__5213);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var cljs$core$_invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5215 = x__4716__auto__;
          return goog.typeOf(G__5215);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var cljs$core$_invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5217 = x__4716__auto__;
          return goog.typeOf(G__5217);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var cljs$core$_invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5219 = x__4716__auto__;
          return goog.typeOf(G__5219);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var cljs$core$_invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5221 = x__4716__auto__;
          return goog.typeOf(G__5221);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var cljs$core$_invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5223 = x__4716__auto__;
          return goog.typeOf(G__5223);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var cljs$core$_invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5225 = x__4716__auto__;
          return goog.typeOf(G__5225);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var cljs$core$_invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5227 = x__4716__auto__;
          return goog.typeOf(G__5227);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var cljs$core$_invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5229 = x__4716__auto__;
          return goog.typeOf(G__5229);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var cljs$core$_invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__4060__auto__ = this$;
      if (and__4060__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4716__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4072__auto__ = cljs.core._invoke[function() {
          var G__5231 = x__4716__auto__;
          return goog.typeOf(G__5231);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._invoke["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  cljs$core$_invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return cljs$core$_invoke__1.call(this, this$);
      case 2:
        return cljs$core$_invoke__2.call(this, this$, a);
      case 3:
        return cljs$core$_invoke__3.call(this, this$, a, b);
      case 4:
        return cljs$core$_invoke__4.call(this, this$, a, b, c);
      case 5:
        return cljs$core$_invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return cljs$core$_invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return cljs$core$_invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return cljs$core$_invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return cljs$core$_invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return cljs$core$_invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return cljs$core$_invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return cljs$core$_invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return cljs$core$_invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return cljs$core$_invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return cljs$core$_invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return cljs$core$_invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return cljs$core$_invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return cljs$core$_invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return cljs$core$_invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return cljs$core$_invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return cljs$core$_invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return cljs$core$_invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
  return cljs$core$_invoke;
}();
cljs.core.ICloneable = function() {
  var obj5233 = {};
  return obj5233;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4060__auto__ = value;
    if (and__4060__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4716__auto__ = value == null ? null : value;
    return function() {
      var or__4072__auto__ = cljs.core._clone[function() {
        var G__5237 = x__4716__auto__;
        return goog.typeOf(G__5237);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._clone["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5239 = {};
  return obj5239;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._count[function() {
        var G__5243 = x__4716__auto__;
        return goog.typeOf(G__5243);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._count["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5245 = {};
  return obj5245;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._empty[function() {
        var G__5249 = x__4716__auto__;
        return goog.typeOf(G__5249);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._empty["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5251 = {};
  return obj5251;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._conj[function() {
        var G__5255 = x__4716__auto__;
        return goog.typeOf(G__5255);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._conj["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5257 = {};
  return obj5257;
}();
cljs.core._nth = function() {
  var cljs$core$_nth = null;
  var cljs$core$_nth__2 = function(coll, n) {
    if (function() {
      var and__4060__auto__ = coll;
      if (and__4060__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4716__auto__ = coll == null ? null : coll;
      return function() {
        var or__4072__auto__ = cljs.core._nth[function() {
          var G__5263 = x__4716__auto__;
          return goog.typeOf(G__5263);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._nth["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var cljs$core$_nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__4060__auto__ = coll;
      if (and__4060__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4716__auto__ = coll == null ? null : coll;
      return function() {
        var or__4072__auto__ = cljs.core._nth[function() {
          var G__5265 = x__4716__auto__;
          return goog.typeOf(G__5265);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._nth["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  cljs$core$_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_nth__2.call(this, coll, n);
      case 3:
        return cljs$core$_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
  cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
  return cljs$core$_nth;
}();
cljs.core.ASeq = function() {
  var obj5267 = {};
  return obj5267;
}();
cljs.core.ISeq = function() {
  var obj5269 = {};
  return obj5269;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._first[function() {
        var G__5273 = x__4716__auto__;
        return goog.typeOf(G__5273);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._first["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._rest[function() {
        var G__5277 = x__4716__auto__;
        return goog.typeOf(G__5277);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._rest["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5279 = {};
  return obj5279;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._next[function() {
        var G__5283 = x__4716__auto__;
        return goog.typeOf(G__5283);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._next["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5285 = {};
  return obj5285;
}();
cljs.core._lookup = function() {
  var cljs$core$_lookup = null;
  var cljs$core$_lookup__2 = function(o, k) {
    if (function() {
      var and__4060__auto__ = o;
      if (and__4060__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4716__auto__ = o == null ? null : o;
      return function() {
        var or__4072__auto__ = cljs.core._lookup[function() {
          var G__5291 = x__4716__auto__;
          return goog.typeOf(G__5291);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._lookup["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var cljs$core$_lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__4060__auto__ = o;
      if (and__4060__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4716__auto__ = o == null ? null : o;
      return function() {
        var or__4072__auto__ = cljs.core._lookup[function() {
          var G__5293 = x__4716__auto__;
          return goog.typeOf(G__5293);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._lookup["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  cljs$core$_lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_lookup__2.call(this, o, k);
      case 3:
        return cljs$core$_lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
  cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
  return cljs$core$_lookup;
}();
cljs.core.IAssociative = function() {
  var obj5295 = {};
  return obj5295;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__5299 = x__4716__auto__;
        return goog.typeOf(G__5299);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._assoc[function() {
        var G__5303 = x__4716__auto__;
        return goog.typeOf(G__5303);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._assoc["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5305 = {};
  return obj5305;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._dissoc[function() {
        var G__5309 = x__4716__auto__;
        return goog.typeOf(G__5309);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._dissoc["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5311 = {};
  return obj5311;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._key[function() {
        var G__5315 = x__4716__auto__;
        return goog.typeOf(G__5315);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._key["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._val[function() {
        var G__5319 = x__4716__auto__;
        return goog.typeOf(G__5319);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._val["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5321 = {};
  return obj5321;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._disjoin[function() {
        var G__5325 = x__4716__auto__;
        return goog.typeOf(G__5325);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._disjoin["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5327 = {};
  return obj5327;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._peek[function() {
        var G__5331 = x__4716__auto__;
        return goog.typeOf(G__5331);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._peek["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._pop[function() {
        var G__5335 = x__4716__auto__;
        return goog.typeOf(G__5335);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._pop["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5337 = {};
  return obj5337;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._assoc_n[function() {
        var G__5341 = x__4716__auto__;
        return goog.typeOf(G__5341);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5343 = {};
  return obj5343;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._deref[function() {
        var G__5347 = x__4716__auto__;
        return goog.typeOf(G__5347);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._deref["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5349 = {};
  return obj5349;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._deref_with_timeout[function() {
        var G__5353 = x__4716__auto__;
        return goog.typeOf(G__5353);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5355 = {};
  return obj5355;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._meta[function() {
        var G__5359 = x__4716__auto__;
        return goog.typeOf(G__5359);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._meta["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5361 = {};
  return obj5361;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._with_meta[function() {
        var G__5365 = x__4716__auto__;
        return goog.typeOf(G__5365);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._with_meta["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5367 = {};
  return obj5367;
}();
cljs.core._reduce = function() {
  var cljs$core$_reduce = null;
  var cljs$core$_reduce__2 = function(coll, f) {
    if (function() {
      var and__4060__auto__ = coll;
      if (and__4060__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4716__auto__ = coll == null ? null : coll;
      return function() {
        var or__4072__auto__ = cljs.core._reduce[function() {
          var G__5373 = x__4716__auto__;
          return goog.typeOf(G__5373);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._reduce["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var cljs$core$_reduce__3 = function(coll, f, start) {
    if (function() {
      var and__4060__auto__ = coll;
      if (and__4060__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4716__auto__ = coll == null ? null : coll;
      return function() {
        var or__4072__auto__ = cljs.core._reduce[function() {
          var G__5375 = x__4716__auto__;
          return goog.typeOf(G__5375);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._reduce["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  cljs$core$_reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_reduce__2.call(this, coll, f);
      case 3:
        return cljs$core$_reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
  cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
  return cljs$core$_reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5377 = {};
  return obj5377;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._kv_reduce[function() {
        var G__5381 = x__4716__auto__;
        return goog.typeOf(G__5381);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5383 = {};
  return obj5383;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._equiv[function() {
        var G__5387 = x__4716__auto__;
        return goog.typeOf(G__5387);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._equiv["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5389 = {};
  return obj5389;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._hash[function() {
        var G__5393 = x__4716__auto__;
        return goog.typeOf(G__5393);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._hash["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5395 = {};
  return obj5395;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._seq[function() {
        var G__5399 = x__4716__auto__;
        return goog.typeOf(G__5399);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._seq["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5401 = {};
  return obj5401;
}();
cljs.core.IList = function() {
  var obj5403 = {};
  return obj5403;
}();
cljs.core.IRecord = function() {
  var obj5405 = {};
  return obj5405;
}();
cljs.core.IReversible = function() {
  var obj5407 = {};
  return obj5407;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._rseq[function() {
        var G__5411 = x__4716__auto__;
        return goog.typeOf(G__5411);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._rseq["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5413 = {};
  return obj5413;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._sorted_seq[function() {
        var G__5417 = x__4716__auto__;
        return goog.typeOf(G__5417);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._sorted_seq_from[function() {
        var G__5421 = x__4716__auto__;
        return goog.typeOf(G__5421);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._entry_key[function() {
        var G__5425 = x__4716__auto__;
        return goog.typeOf(G__5425);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._entry_key["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._comparator[function() {
        var G__5429 = x__4716__auto__;
        return goog.typeOf(G__5429);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._comparator["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5431 = {};
  return obj5431;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4060__auto__ = writer;
    if (and__4060__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4716__auto__ = writer == null ? null : writer;
    return function() {
      var or__4072__auto__ = cljs.core._write[function() {
        var G__5435 = x__4716__auto__;
        return goog.typeOf(G__5435);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._write["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4060__auto__ = writer;
    if (and__4060__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4716__auto__ = writer == null ? null : writer;
    return function() {
      var or__4072__auto__ = cljs.core._flush[function() {
        var G__5439 = x__4716__auto__;
        return goog.typeOf(G__5439);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._flush["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5441 = {};
  return obj5441;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._pr_writer[function() {
        var G__5445 = x__4716__auto__;
        return goog.typeOf(G__5445);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5447 = {};
  return obj5447;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4060__auto__ = d;
    if (and__4060__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4716__auto__ = d == null ? null : d;
    return function() {
      var or__4072__auto__ = cljs.core._realized_QMARK_[function() {
        var G__5451 = x__4716__auto__;
        return goog.typeOf(G__5451);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5453 = {};
  return obj5453;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4060__auto__ = this$;
    if (and__4060__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4716__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4072__auto__ = cljs.core._notify_watches[function() {
        var G__5457 = x__4716__auto__;
        return goog.typeOf(G__5457);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4060__auto__ = this$;
    if (and__4060__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4716__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4072__auto__ = cljs.core._add_watch[function() {
        var G__5461 = x__4716__auto__;
        return goog.typeOf(G__5461);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._add_watch["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4060__auto__ = this$;
    if (and__4060__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4716__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4072__auto__ = cljs.core._remove_watch[function() {
        var G__5465 = x__4716__auto__;
        return goog.typeOf(G__5465);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5467 = {};
  return obj5467;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._as_transient[function() {
        var G__5471 = x__4716__auto__;
        return goog.typeOf(G__5471);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._as_transient["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5473 = {};
  return obj5473;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4060__auto__ = tcoll;
    if (and__4060__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4716__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4072__auto__ = cljs.core._conj_BANG_[function() {
        var G__5477 = x__4716__auto__;
        return goog.typeOf(G__5477);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4060__auto__ = tcoll;
    if (and__4060__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4716__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4072__auto__ = cljs.core._persistent_BANG_[function() {
        var G__5481 = x__4716__auto__;
        return goog.typeOf(G__5481);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5483 = {};
  return obj5483;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4060__auto__ = tcoll;
    if (and__4060__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4716__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4072__auto__ = cljs.core._assoc_BANG_[function() {
        var G__5487 = x__4716__auto__;
        return goog.typeOf(G__5487);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5489 = {};
  return obj5489;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4060__auto__ = tcoll;
    if (and__4060__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4716__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4072__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__5493 = x__4716__auto__;
        return goog.typeOf(G__5493);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5495 = {};
  return obj5495;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4060__auto__ = tcoll;
    if (and__4060__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4716__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4072__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__5499 = x__4716__auto__;
        return goog.typeOf(G__5499);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4060__auto__ = tcoll;
    if (and__4060__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4716__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4072__auto__ = cljs.core._pop_BANG_[function() {
        var G__5503 = x__4716__auto__;
        return goog.typeOf(G__5503);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5505 = {};
  return obj5505;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4060__auto__ = tcoll;
    if (and__4060__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4716__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4072__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__5509 = x__4716__auto__;
        return goog.typeOf(G__5509);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5511 = {};
  return obj5511;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4060__auto__ = x;
    if (and__4060__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4716__auto__ = x == null ? null : x;
    return function() {
      var or__4072__auto__ = cljs.core._compare[function() {
        var G__5515 = x__4716__auto__;
        return goog.typeOf(G__5515);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._compare["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5517 = {};
  return obj5517;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._drop_first[function() {
        var G__5521 = x__4716__auto__;
        return goog.typeOf(G__5521);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._drop_first["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5523 = {};
  return obj5523;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._chunked_first[function() {
        var G__5527 = x__4716__auto__;
        return goog.typeOf(G__5527);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._chunked_rest[function() {
        var G__5531 = x__4716__auto__;
        return goog.typeOf(G__5531);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5533 = {};
  return obj5533;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._chunked_next[function() {
        var G__5537 = x__4716__auto__;
        return goog.typeOf(G__5537);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5539 = {};
  return obj5539;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4060__auto__ = x;
    if (and__4060__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4716__auto__ = x == null ? null : x;
    return function() {
      var or__4072__auto__ = cljs.core._name[function() {
        var G__5543 = x__4716__auto__;
        return goog.typeOf(G__5543);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._name["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4060__auto__ = x;
    if (and__4060__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4716__auto__ = x == null ? null : x;
    return function() {
      var or__4072__auto__ = cljs.core._namespace[function() {
        var G__5547 = x__4716__auto__;
        return goog.typeOf(G__5547);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._namespace["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5549 = {};
  return obj5549;
}();
cljs.core.IReset = function() {
  var obj5551 = {};
  return obj5551;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._reset_BANG_[function() {
        var G__5555 = x__4716__auto__;
        return goog.typeOf(G__5555);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5557 = {};
  return obj5557;
}();
cljs.core._swap_BANG_ = function() {
  var cljs$core$_swap_BANG_ = null;
  var cljs$core$_swap_BANG___2 = function(o, f) {
    if (function() {
      var and__4060__auto__ = o;
      if (and__4060__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4716__auto__ = o == null ? null : o;
      return function() {
        var or__4072__auto__ = cljs.core._swap_BANG_[function() {
          var G__5567 = x__4716__auto__;
          return goog.typeOf(G__5567);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var cljs$core$_swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__4060__auto__ = o;
      if (and__4060__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4716__auto__ = o == null ? null : o;
      return function() {
        var or__4072__auto__ = cljs.core._swap_BANG_[function() {
          var G__5569 = x__4716__auto__;
          return goog.typeOf(G__5569);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var cljs$core$_swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__4060__auto__ = o;
      if (and__4060__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4716__auto__ = o == null ? null : o;
      return function() {
        var or__4072__auto__ = cljs.core._swap_BANG_[function() {
          var G__5571 = x__4716__auto__;
          return goog.typeOf(G__5571);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var cljs$core$_swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__4060__auto__ = o;
      if (and__4060__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__4060__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4716__auto__ = o == null ? null : o;
      return function() {
        var or__4072__auto__ = cljs.core._swap_BANG_[function() {
          var G__5573 = x__4716__auto__;
          return goog.typeOf(G__5573);
        }()];
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4072__auto____$1) {
            return or__4072__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  cljs$core$_swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_swap_BANG___2.call(this, o, f);
      case 3:
        return cljs$core$_swap_BANG___3.call(this, o, f, a);
      case 4:
        return cljs$core$_swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return cljs$core$_swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
  return cljs$core$_swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj5575 = {};
  return obj5575;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4060__auto__ = o;
    if (and__4060__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4716__auto__ = o == null ? null : o;
    return function() {
      var or__4072__auto__ = cljs.core._vreset_BANG_[function() {
        var G__5579 = x__4716__auto__;
        return goog.typeOf(G__5579);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj5581 = {};
  return obj5581;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4060__auto__ = coll;
    if (and__4060__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4716__auto__ = coll == null ? null : coll;
    return function() {
      var or__4072__auto__ = cljs.core._iterator[function() {
        var G__5585 = x__4716__auto__;
        return goog.typeOf(G__5585);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._iterator["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__5588 = 4294967295;
  var G__5589 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5588, G__5589) : Math.imul.call(null, G__5588, G__5589);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__5592 = a;
    var G__5593 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5592, G__5593) : Math.imul.call(null, G__5592, G__5593);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__5594 = i + 2;
        var G__5595 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__5594;
        h1 = G__5595;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj5597 = {};
  return obj5597;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__5598 = i + 1;
          var G__5599 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__5598;
          hash = G__5599;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5603 = {};
      return obj5603;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__5606 = o;
    if (G__5606) {
      var bit__4746__auto__ = G__5606.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4746__auto__ || G__5606.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__5607 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5607) : Math.floor.call(null, G__5607);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4060__auto__ = cljs.core.not(a.ns);
      if (and__4060__auto__) {
        return b.ns;
      } else {
        return and__4060__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__5614 = a.ns;
            var G__5615 = b.ns;
            return goog.array.defaultCompare(G__5614, G__5615);
          }();
          if (0 === nsc) {
            var G__5616 = a.name;
            var G__5617 = b.name;
            return goog.array.defaultCompare(G__5616, G__5617);
          } else {
            return nsc;
          }
        }
      } else {
        var G__5618 = a.name;
        var G__5619 = b.name;
        return goog.array.defaultCompare(G__5618, G__5619);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4493__auto__ = self__._hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5621 = null;
  var G__5621__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__5621__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__5621 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5621__2.call(this, self__, coll);
      case 3:
        return G__5621__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5621.cljs$core$IFn$_invoke$arity$2 = G__5621__2;
  G__5621.cljs$core$IFn$_invoke$arity$3 = G__5621__3;
  return G__5621;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5620) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5620)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var cljs$core$symbol = null;
  var cljs$core$symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var cljs$core$symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  cljs$core$symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return cljs$core$symbol__1.call(this, ns);
      case 2:
        return cljs$core$symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
  cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
  return cljs$core$symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__5669 = null;
  var G__5669__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__5669__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__5669__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__5669__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__5669__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__5669__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__5669__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__5669__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__5669__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__5669__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__5669__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__5669__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__5669__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__5669__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__5669__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__5669__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__5669__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__5669__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__5669__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__5669__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__5669__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__5669__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5625 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__5626 = a;
    var G__5627 = b;
    var G__5628 = c;
    var G__5629 = d;
    var G__5630 = e;
    var G__5631 = f;
    var G__5632 = g;
    var G__5633 = h;
    var G__5634 = i;
    var G__5635 = j;
    var G__5636 = k;
    var G__5637 = l;
    var G__5638 = m;
    var G__5639 = n;
    var G__5640 = o;
    var G__5641 = p;
    var G__5642 = q;
    var G__5643 = r;
    var G__5644 = s;
    var G__5645 = t;
    var G__5646 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5625, G__5626, G__5627, G__5628, G__5629, G__5630, G__5631, G__5632, G__5633, G__5634, G__5635, G__5636, G__5637, G__5638, G__5639, G__5640, G__5641, G__5642, G__5643, G__5644, G__5645, G__5646) : cljs.core.apply.call(null, G__5625, G__5626, G__5627, G__5628, G__5629, G__5630, G__5631, G__5632, G__5633, G__5634, G__5635, G__5636, G__5637, G__5638, G__5639, G__5640, G__5641, G__5642, G__5643, 
    G__5644, G__5645, G__5646);
  };
  G__5669 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__5669__1.call(this, self__);
      case 2:
        return G__5669__2.call(this, self__, a);
      case 3:
        return G__5669__3.call(this, self__, a, b);
      case 4:
        return G__5669__4.call(this, self__, a, b, c);
      case 5:
        return G__5669__5.call(this, self__, a, b, c, d);
      case 6:
        return G__5669__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__5669__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__5669__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__5669__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__5669__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__5669__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__5669__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__5669__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__5669__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__5669__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__5669__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__5669__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__5669__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__5669__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__5669__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__5669__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__5669__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5669.cljs$core$IFn$_invoke$arity$1 = G__5669__1;
  G__5669.cljs$core$IFn$_invoke$arity$2 = G__5669__2;
  G__5669.cljs$core$IFn$_invoke$arity$3 = G__5669__3;
  G__5669.cljs$core$IFn$_invoke$arity$4 = G__5669__4;
  G__5669.cljs$core$IFn$_invoke$arity$5 = G__5669__5;
  G__5669.cljs$core$IFn$_invoke$arity$6 = G__5669__6;
  G__5669.cljs$core$IFn$_invoke$arity$7 = G__5669__7;
  G__5669.cljs$core$IFn$_invoke$arity$8 = G__5669__8;
  G__5669.cljs$core$IFn$_invoke$arity$9 = G__5669__9;
  G__5669.cljs$core$IFn$_invoke$arity$10 = G__5669__10;
  G__5669.cljs$core$IFn$_invoke$arity$11 = G__5669__11;
  G__5669.cljs$core$IFn$_invoke$arity$12 = G__5669__12;
  G__5669.cljs$core$IFn$_invoke$arity$13 = G__5669__13;
  G__5669.cljs$core$IFn$_invoke$arity$14 = G__5669__14;
  G__5669.cljs$core$IFn$_invoke$arity$15 = G__5669__15;
  G__5669.cljs$core$IFn$_invoke$arity$16 = G__5669__16;
  G__5669.cljs$core$IFn$_invoke$arity$17 = G__5669__17;
  G__5669.cljs$core$IFn$_invoke$arity$18 = G__5669__18;
  G__5669.cljs$core$IFn$_invoke$arity$19 = G__5669__19;
  G__5669.cljs$core$IFn$_invoke$arity$20 = G__5669__20;
  G__5669.cljs$core$IFn$_invoke$arity$21 = G__5669__21;
  G__5669.cljs$core$IFn$_invoke$arity$22 = G__5669__22;
  return G__5669;
}();
cljs.core.Var.prototype.apply = function(self__, args5624) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5624)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__5647 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__5648 = a;
  var G__5649 = b;
  var G__5650 = c;
  var G__5651 = d;
  var G__5652 = e;
  var G__5653 = f;
  var G__5654 = g;
  var G__5655 = h;
  var G__5656 = i;
  var G__5657 = j;
  var G__5658 = k;
  var G__5659 = l;
  var G__5660 = m;
  var G__5661 = n;
  var G__5662 = o;
  var G__5663 = p;
  var G__5664 = q;
  var G__5665 = r;
  var G__5666 = s;
  var G__5667 = t;
  var G__5668 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5647, G__5648, G__5649, G__5650, G__5651, G__5652, G__5653, G__5654, G__5655, G__5656, G__5657, G__5658, G__5659, G__5660, G__5661, G__5662, G__5663, G__5664, G__5665, G__5666, G__5667, G__5668) : cljs.core.apply.call(null, G__5647, G__5648, G__5649, G__5650, G__5651, G__5652, G__5653, G__5654, G__5655, G__5656, G__5657, G__5658, G__5659, G__5660, G__5661, G__5662, G__5663, G__5664, G__5665, 
  G__5666, G__5667, G__5668);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__5671 = x;
  if (G__5671) {
    var bit__4753__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4072__auto__ = bit__4753__auto__;
      if (cljs.core.truth_(or__4072__auto__)) {
        return or__4072__auto__;
      } else {
        return G__5671.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__5671.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5671);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5671);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__5673 = value;
  if (G__5673) {
    var bit__4753__auto__ = G__5673.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4753__auto__ || G__5673.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5673.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5673);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5673);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5675 = coll;
      if (G__5675) {
        var bit__4746__auto__ = G__5675.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4746__auto__ || G__5675.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5677 = coll;
      if (G__5677) {
        var bit__4746__auto__ = G__5677.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4746__auto__ || G__5677.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5679 = coll;
      if (G__5679) {
        var bit__4746__auto__ = G__5679.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4746__auto__ || G__5679.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5681 = coll;
      if (G__5681) {
        var bit__4746__auto__ = G__5681.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4746__auto__ || G__5681.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var cljs$core$_EQ_ = null;
  var cljs$core$_EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var cljs$core$_EQ___3 = function() {
    var G__5686__delegate = function(x, y, more) {
      while (true) {
        if (cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__5687 = y;
            var G__5688 = cljs.core.first(more);
            var G__5689 = cljs.core.next(more);
            x = G__5687;
            y = G__5688;
            more = G__5689;
            continue;
          } else {
            return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5686 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__5690__i = 0, G__5690__a = new Array(arguments.length - 2);
        while (G__5690__i < G__5690__a.length) {
          G__5690__a[G__5690__i] = arguments[G__5690__i + 2];
          ++G__5690__i;
        }
        more = new cljs.core.IndexedSeq(G__5690__a, 0);
      }
      return G__5686__delegate.call(this, x, y, more);
    };
    G__5686.cljs$lang$maxFixedArity = 2;
    G__5686.cljs$lang$applyTo = function(arglist__5691) {
      var x = cljs.core.first(arglist__5691);
      arglist__5691 = cljs.core.next(arglist__5691);
      var y = cljs.core.first(arglist__5691);
      var more = cljs.core.rest(arglist__5691);
      return G__5686__delegate(x, y, more);
    };
    G__5686.cljs$core$IFn$_invoke$arity$variadic = G__5686__delegate;
    return G__5686;
  }();
  cljs$core$_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_EQ___1.call(this, x);
      case 2:
        return cljs$core$_EQ___2.call(this, x, y);
      default:
        var G__5692 = null;
        if (arguments.length > 2) {
          var G__5693__i = 0, G__5693__a = new Array(arguments.length - 2);
          while (G__5693__i < G__5693__a.length) {
            G__5693__a[G__5693__i] = arguments[G__5693__i + 2];
            ++G__5693__i;
          }
          G__5692 = new cljs.core.IndexedSeq(G__5693__a, 0);
        }
        return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__5692);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__5694 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5694) : cljs.core.es6_iterator_seq.call(null, G__5694);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5695 = n + 1;
      var G__5696 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5697 = cljs.core.next(coll__$1);
      n = G__5695;
      hash_code = G__5696;
      coll__$1 = G__5697;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5698 = n + 1;
      var G__5699 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5700 = cljs.core.next(coll__$1);
      n = G__5698;
      hash_code = G__5699;
      coll__$1 = G__5700;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__5701 = o;
  return goog.getUid(G__5701);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__5703 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5703) : cljs.core.deref.call(null, G__5703);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var cljs$core$ci_reduce = null;
  var cljs$core$ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5710 = val;
            var G__5711 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5710, G__5711) : f.call(null, G__5710, G__5711);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5716 = nval;
            var G__5717 = n + 1;
            val = G__5716;
            n = G__5717;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var cljs$core$ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5712 = val__$1;
          var G__5713 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5712, G__5713) : f.call(null, G__5712, G__5713);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5718 = nval;
          var G__5719 = n + 1;
          val__$1 = G__5718;
          n = G__5719;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var cljs$core$ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5714 = val__$1;
          var G__5715 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5714, G__5715) : f.call(null, G__5714, G__5715);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5720 = nval;
          var G__5721 = n + 1;
          val__$1 = G__5720;
          n = G__5721;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return cljs$core$ci_reduce__2.call(this, cicoll, f);
      case 3:
        return cljs$core$ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return cljs$core$ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
  return cljs$core$ci_reduce;
}();
cljs.core.array_reduce = function() {
  var cljs$core$array_reduce = null;
  var cljs$core$array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5728 = val;
            var G__5729 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5728, G__5729) : f.call(null, G__5728, G__5729);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5734 = nval;
            var G__5735 = n + 1;
            val = G__5734;
            n = G__5735;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var cljs$core$array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5730 = val__$1;
          var G__5731 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5730, G__5731) : f.call(null, G__5730, G__5731);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5736 = nval;
          var G__5737 = n + 1;
          val__$1 = G__5736;
          n = G__5737;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var cljs$core$array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5732 = val__$1;
          var G__5733 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5732, G__5733) : f.call(null, G__5732, G__5733);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5738 = nval;
          var G__5739 = n + 1;
          val__$1 = G__5738;
          n = G__5739;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return cljs$core$array_reduce__2.call(this, arr, f);
      case 3:
        return cljs$core$array_reduce__3.call(this, arr, f, val);
      case 4:
        return cljs$core$array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
  return cljs$core$array_reduce;
}();
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__5741 = x;
  if (G__5741) {
    var bit__4753__auto__ = G__5741.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4753__auto__ || G__5741.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5741.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5741);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5741);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__5743 = x;
  if (G__5743) {
    var bit__4753__auto__ = G__5743.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4753__auto__ || G__5743.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5743.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5743);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5743);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5744 = coll__$1;
  var G__5745 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5744, G__5745) : cljs.core.equiv_sequential.call(null, G__5744, G__5745);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5746 = o;
  var G__5747 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5746, G__5747) : cljs.core.cons.call(null, G__5746, G__5747);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.prim_seq = function() {
  var cljs$core$prim_seq = null;
  var cljs$core$prim_seq__1 = function(prim) {
    return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var cljs$core$prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  cljs$core$prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return cljs$core$prim_seq__1.call(this, prim);
      case 2:
        return cljs$core$prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
  cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
  return cljs$core$prim_seq;
}();
cljs.core.array_seq = function() {
  var cljs$core$array_seq = null;
  var cljs$core$array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var cljs$core$array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  cljs$core$array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return cljs$core$array_seq__1.call(this, array);
      case 2:
        return cljs$core$array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
  cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
  return cljs$core$array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5750 = coll__$1;
  var G__5751 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5750, G__5751) : cljs.core.equiv_sequential.call(null, G__5750, G__5751);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__5752 = cljs.core.List.EMPTY;
  var G__5753 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5752, G__5753) : cljs.core.with_meta.call(null, G__5752, G__5753);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__5754 = f;
  var G__5755 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5754, G__5755) : cljs.core.seq_reduce.call(null, G__5754, G__5755);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__5756 = f;
  var G__5757 = start;
  var G__5758 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5756, G__5757, G__5758) : cljs.core.seq_reduce.call(null, G__5756, G__5757, G__5758);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5759 = o;
  var G__5760 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5759, G__5760) : cljs.core.cons.call(null, G__5759, G__5760);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__5761 = sn;
      s = G__5761;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var cljs$core$conj = null;
  var cljs$core$conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var cljs$core$conj__1 = function(coll) {
    return coll;
  };
  var cljs$core$conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var cljs$core$conj__3 = function() {
    var G__5766__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5767 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__5768 = cljs.core.first(xs);
          var G__5769 = cljs.core.next(xs);
          coll = G__5767;
          x = G__5768;
          xs = G__5769;
          continue;
        } else {
          return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__5766 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__5770__i = 0, G__5770__a = new Array(arguments.length - 2);
        while (G__5770__i < G__5770__a.length) {
          G__5770__a[G__5770__i] = arguments[G__5770__i + 2];
          ++G__5770__i;
        }
        xs = new cljs.core.IndexedSeq(G__5770__a, 0);
      }
      return G__5766__delegate.call(this, coll, x, xs);
    };
    G__5766.cljs$lang$maxFixedArity = 2;
    G__5766.cljs$lang$applyTo = function(arglist__5771) {
      var coll = cljs.core.first(arglist__5771);
      arglist__5771 = cljs.core.next(arglist__5771);
      var x = cljs.core.first(arglist__5771);
      var xs = cljs.core.rest(arglist__5771);
      return G__5766__delegate(coll, x, xs);
    };
    G__5766.cljs$core$IFn$_invoke$arity$variadic = G__5766__delegate;
    return G__5766;
  }();
  cljs$core$conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$conj__0.call(this);
      case 1:
        return cljs$core$conj__1.call(this, coll);
      case 2:
        return cljs$core$conj__2.call(this, coll, x);
      default:
        var G__5772 = null;
        if (arguments.length > 2) {
          var G__5773__i = 0, G__5773__a = new Array(arguments.length - 2);
          while (G__5773__i < G__5773__a.length) {
            G__5773__a[G__5773__i] = arguments[G__5773__i + 2];
            ++G__5773__i;
          }
          G__5772 = new cljs.core.IndexedSeq(G__5773__a, 0);
        }
        return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__5772);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$conj.cljs$lang$maxFixedArity = 2;
  cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$conj;
}();
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__5774 = cljs.core.next(s);
      var G__5775 = acc + 1;
      s = G__5774;
      acc = G__5775;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5777 = coll;
      if (G__5777) {
        var bit__4746__auto__ = G__5777.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4746__auto__ || G__5777.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var cljs$core$linear_traversal_nth = null;
  var cljs$core$linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5778 = cljs.core.next(coll);
              var G__5779 = n - 1;
              coll = G__5778;
              n = G__5779;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var cljs$core$linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5780 = cljs.core.next(coll);
              var G__5781 = n - 1;
              var G__5782 = not_found;
              coll = G__5780;
              n = G__5781;
              not_found = G__5782;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  cljs$core$linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return cljs$core$linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
  cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
  return cljs$core$linear_traversal_nth;
}();
cljs.core.nth = function() {
  var cljs$core$nth = null;
  var cljs$core$nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__5787 = coll;
          if (G__5787) {
            var bit__4746__auto__ = G__5787.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4746__auto__ || G__5787.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5788 = coll;
                  if (G__5788) {
                    var bit__4753__auto__ = G__5788.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4753__auto__ || G__5788.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5788.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5788);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5788);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var cljs$core$nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__5789 = coll;
          if (G__5789) {
            var bit__4746__auto__ = G__5789.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4746__auto__ || G__5789.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5790 = coll;
                  if (G__5790) {
                    var bit__4753__auto__ = G__5790.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4753__auto__ || G__5790.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5790.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5790);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5790);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  cljs$core$nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$nth__2.call(this, coll, n);
      case 3:
        return cljs$core$nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
  cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
  return cljs$core$nth;
}();
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__5791 = n__$1 - 1;
      var G__5792 = cljs.core.rest(xs);
      n__$1 = G__5791;
      xs = G__5792;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var cljs$core$get = null;
  var cljs$core$get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__5795 = o;
        if (G__5795) {
          var bit__4746__auto__ = G__5795.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4746__auto__ || G__5795.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var cljs$core$get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__5796 = o;
        if (G__5796) {
          var bit__4746__auto__ = G__5796.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4746__auto__ || G__5796.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  cljs$core$get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$get__2.call(this, o, k);
      case 3:
        return cljs$core$get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
  cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
  return cljs$core$get;
}();
cljs.core.assoc = function() {
  var cljs$core$assoc = null;
  var cljs$core$assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var cljs$core$assoc__4 = function() {
    var G__5800__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__5801 = ret;
          var G__5802 = cljs.core.first(kvs);
          var G__5803 = cljs.core.second(kvs);
          var G__5804 = cljs.core.nnext(kvs);
          coll = G__5801;
          k = G__5802;
          v = G__5803;
          kvs = G__5804;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__5800 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__5805__i = 0, G__5805__a = new Array(arguments.length - 3);
        while (G__5805__i < G__5805__a.length) {
          G__5805__a[G__5805__i] = arguments[G__5805__i + 3];
          ++G__5805__i;
        }
        kvs = new cljs.core.IndexedSeq(G__5805__a, 0);
      }
      return G__5800__delegate.call(this, coll, k, v, kvs);
    };
    G__5800.cljs$lang$maxFixedArity = 3;
    G__5800.cljs$lang$applyTo = function(arglist__5806) {
      var coll = cljs.core.first(arglist__5806);
      arglist__5806 = cljs.core.next(arglist__5806);
      var k = cljs.core.first(arglist__5806);
      arglist__5806 = cljs.core.next(arglist__5806);
      var v = cljs.core.first(arglist__5806);
      var kvs = cljs.core.rest(arglist__5806);
      return G__5800__delegate(coll, k, v, kvs);
    };
    G__5800.cljs$core$IFn$_invoke$arity$variadic = G__5800__delegate;
    return G__5800;
  }();
  cljs$core$assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$assoc__3.call(this, coll, k, v);
      default:
        var G__5807 = null;
        if (arguments.length > 3) {
          var G__5808__i = 0, G__5808__a = new Array(arguments.length - 3);
          while (G__5808__i < G__5808__a.length) {
            G__5808__a[G__5808__i] = arguments[G__5808__i + 3];
            ++G__5808__i;
          }
          G__5807 = new cljs.core.IndexedSeq(G__5808__a, 0);
        }
        return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__5807);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$assoc.cljs$lang$maxFixedArity = 3;
  cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
  cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
  cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$assoc;
}();
cljs.core.dissoc = function() {
  var cljs$core$dissoc = null;
  var cljs$core$dissoc__1 = function(coll) {
    return coll;
  };
  var cljs$core$dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var cljs$core$dissoc__3 = function() {
    var G__5811__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5812 = ret;
            var G__5813 = cljs.core.first(ks);
            var G__5814 = cljs.core.next(ks);
            coll = G__5812;
            k = G__5813;
            ks = G__5814;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5811 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__5815__i = 0, G__5815__a = new Array(arguments.length - 2);
        while (G__5815__i < G__5815__a.length) {
          G__5815__a[G__5815__i] = arguments[G__5815__i + 2];
          ++G__5815__i;
        }
        ks = new cljs.core.IndexedSeq(G__5815__a, 0);
      }
      return G__5811__delegate.call(this, coll, k, ks);
    };
    G__5811.cljs$lang$maxFixedArity = 2;
    G__5811.cljs$lang$applyTo = function(arglist__5816) {
      var coll = cljs.core.first(arglist__5816);
      arglist__5816 = cljs.core.next(arglist__5816);
      var k = cljs.core.first(arglist__5816);
      var ks = cljs.core.rest(arglist__5816);
      return G__5811__delegate(coll, k, ks);
    };
    G__5811.cljs$core$IFn$_invoke$arity$variadic = G__5811__delegate;
    return G__5811;
  }();
  cljs$core$dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$dissoc__1.call(this, coll);
      case 2:
        return cljs$core$dissoc__2.call(this, coll, k);
      default:
        var G__5817 = null;
        if (arguments.length > 2) {
          var G__5818__i = 0, G__5818__a = new Array(arguments.length - 2);
          while (G__5818__i < G__5818__a.length) {
            G__5818__a[G__5818__i] = arguments[G__5818__i + 2];
            ++G__5818__i;
          }
          G__5817 = new cljs.core.IndexedSeq(G__5818__a, 0);
        }
        return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__5817);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
  cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$dissoc;
}();
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4072__auto__ = function() {
    var G__5823 = f;
    return goog.isFunction(G__5823);
  }();
  if (cljs.core.truth_(or__4072__auto__)) {
    return or__4072__auto__;
  } else {
    var G__5824 = f;
    if (G__5824) {
      var bit__4753__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4072__auto____$1 = bit__4753__auto__;
        if (cljs.core.truth_(or__4072__auto____$1)) {
          return or__4072__auto____$1;
        } else {
          return G__5824.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__5824.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__5824);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__5824);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__6290 = null;
  var G__6290__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6290__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5826 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5826) : self__.afn.call(null, G__5826);
  };
  var G__6290__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5827 = a;
    var G__5828 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5827, G__5828) : self__.afn.call(null, G__5827, G__5828);
  };
  var G__6290__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5829 = a;
    var G__5830 = b;
    var G__5831 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5829, G__5830, G__5831) : self__.afn.call(null, G__5829, G__5830, G__5831);
  };
  var G__6290__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5832 = a;
    var G__5833 = b;
    var G__5834 = c;
    var G__5835 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5832, G__5833, G__5834, G__5835) : self__.afn.call(null, G__5832, G__5833, G__5834, G__5835);
  };
  var G__6290__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5836 = a;
    var G__5837 = b;
    var G__5838 = c;
    var G__5839 = d;
    var G__5840 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5836, G__5837, G__5838, G__5839, G__5840) : self__.afn.call(null, G__5836, G__5837, G__5838, G__5839, G__5840);
  };
  var G__6290__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5841 = a;
    var G__5842 = b;
    var G__5843 = c;
    var G__5844 = d;
    var G__5845 = e;
    var G__5846 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5841, G__5842, G__5843, G__5844, G__5845, G__5846) : self__.afn.call(null, G__5841, G__5842, G__5843, G__5844, G__5845, G__5846);
  };
  var G__6290__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5847 = a;
    var G__5848 = b;
    var G__5849 = c;
    var G__5850 = d;
    var G__5851 = e;
    var G__5852 = f;
    var G__5853 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5847, G__5848, G__5849, G__5850, G__5851, G__5852, G__5853) : self__.afn.call(null, G__5847, G__5848, G__5849, G__5850, G__5851, G__5852, G__5853);
  };
  var G__6290__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5854 = a;
    var G__5855 = b;
    var G__5856 = c;
    var G__5857 = d;
    var G__5858 = e;
    var G__5859 = f;
    var G__5860 = g;
    var G__5861 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5854, G__5855, G__5856, G__5857, G__5858, G__5859, G__5860, G__5861) : self__.afn.call(null, G__5854, G__5855, G__5856, G__5857, G__5858, G__5859, G__5860, G__5861);
  };
  var G__6290__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5862 = a;
    var G__5863 = b;
    var G__5864 = c;
    var G__5865 = d;
    var G__5866 = e;
    var G__5867 = f;
    var G__5868 = g;
    var G__5869 = h;
    var G__5870 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5862, G__5863, G__5864, G__5865, G__5866, G__5867, G__5868, G__5869, G__5870) : self__.afn.call(null, G__5862, G__5863, G__5864, G__5865, G__5866, G__5867, G__5868, G__5869, G__5870);
  };
  var G__6290__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5871 = a;
    var G__5872 = b;
    var G__5873 = c;
    var G__5874 = d;
    var G__5875 = e;
    var G__5876 = f;
    var G__5877 = g;
    var G__5878 = h;
    var G__5879 = i;
    var G__5880 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5871, G__5872, G__5873, G__5874, G__5875, G__5876, G__5877, G__5878, G__5879, G__5880) : self__.afn.call(null, G__5871, G__5872, G__5873, G__5874, G__5875, G__5876, G__5877, G__5878, G__5879, G__5880);
  };
  var G__6290__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5881 = a;
    var G__5882 = b;
    var G__5883 = c;
    var G__5884 = d;
    var G__5885 = e;
    var G__5886 = f;
    var G__5887 = g;
    var G__5888 = h;
    var G__5889 = i;
    var G__5890 = j;
    var G__5891 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5881, G__5882, G__5883, G__5884, G__5885, G__5886, G__5887, G__5888, G__5889, G__5890, G__5891) : self__.afn.call(null, G__5881, G__5882, G__5883, G__5884, G__5885, G__5886, G__5887, G__5888, G__5889, G__5890, G__5891);
  };
  var G__6290__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5892 = a;
    var G__5893 = b;
    var G__5894 = c;
    var G__5895 = d;
    var G__5896 = e;
    var G__5897 = f;
    var G__5898 = g;
    var G__5899 = h;
    var G__5900 = i;
    var G__5901 = j;
    var G__5902 = k;
    var G__5903 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5892, G__5893, G__5894, G__5895, G__5896, G__5897, G__5898, G__5899, G__5900, G__5901, G__5902, G__5903) : self__.afn.call(null, G__5892, G__5893, G__5894, G__5895, G__5896, G__5897, G__5898, G__5899, G__5900, G__5901, G__5902, G__5903);
  };
  var G__6290__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5904 = a;
    var G__5905 = b;
    var G__5906 = c;
    var G__5907 = d;
    var G__5908 = e;
    var G__5909 = f;
    var G__5910 = g;
    var G__5911 = h;
    var G__5912 = i;
    var G__5913 = j;
    var G__5914 = k;
    var G__5915 = l;
    var G__5916 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5904, G__5905, G__5906, G__5907, G__5908, G__5909, G__5910, G__5911, G__5912, G__5913, G__5914, G__5915, G__5916) : self__.afn.call(null, G__5904, G__5905, G__5906, G__5907, G__5908, G__5909, G__5910, G__5911, G__5912, G__5913, G__5914, G__5915, G__5916);
  };
  var G__6290__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5917 = a;
    var G__5918 = b;
    var G__5919 = c;
    var G__5920 = d;
    var G__5921 = e;
    var G__5922 = f;
    var G__5923 = g;
    var G__5924 = h;
    var G__5925 = i;
    var G__5926 = j;
    var G__5927 = k;
    var G__5928 = l;
    var G__5929 = m;
    var G__5930 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__5917, G__5918, G__5919, G__5920, G__5921, G__5922, G__5923, G__5924, G__5925, G__5926, G__5927, G__5928, G__5929, G__5930) : self__.afn.call(null, G__5917, G__5918, G__5919, G__5920, G__5921, G__5922, G__5923, G__5924, G__5925, G__5926, G__5927, G__5928, G__5929, G__5930);
  };
  var G__6290__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5931 = a;
    var G__5932 = b;
    var G__5933 = c;
    var G__5934 = d;
    var G__5935 = e;
    var G__5936 = f;
    var G__5937 = g;
    var G__5938 = h;
    var G__5939 = i;
    var G__5940 = j;
    var G__5941 = k;
    var G__5942 = l;
    var G__5943 = m;
    var G__5944 = n;
    var G__5945 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__5931, G__5932, G__5933, G__5934, G__5935, G__5936, G__5937, G__5938, G__5939, G__5940, G__5941, G__5942, G__5943, G__5944, G__5945) : self__.afn.call(null, G__5931, G__5932, G__5933, G__5934, G__5935, G__5936, G__5937, G__5938, G__5939, G__5940, G__5941, G__5942, G__5943, G__5944, G__5945);
  };
  var G__6290__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5946 = a;
    var G__5947 = b;
    var G__5948 = c;
    var G__5949 = d;
    var G__5950 = e;
    var G__5951 = f;
    var G__5952 = g;
    var G__5953 = h;
    var G__5954 = i;
    var G__5955 = j;
    var G__5956 = k;
    var G__5957 = l;
    var G__5958 = m;
    var G__5959 = n;
    var G__5960 = o;
    var G__5961 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__5946, G__5947, G__5948, G__5949, G__5950, G__5951, G__5952, G__5953, G__5954, G__5955, G__5956, G__5957, G__5958, G__5959, G__5960, G__5961) : self__.afn.call(null, G__5946, G__5947, G__5948, G__5949, G__5950, G__5951, G__5952, G__5953, G__5954, G__5955, G__5956, G__5957, G__5958, G__5959, G__5960, G__5961);
  };
  var G__6290__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5962 = a;
    var G__5963 = b;
    var G__5964 = c;
    var G__5965 = d;
    var G__5966 = e;
    var G__5967 = f;
    var G__5968 = g;
    var G__5969 = h;
    var G__5970 = i;
    var G__5971 = j;
    var G__5972 = k;
    var G__5973 = l;
    var G__5974 = m;
    var G__5975 = n;
    var G__5976 = o;
    var G__5977 = p;
    var G__5978 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__5962, G__5963, G__5964, G__5965, G__5966, G__5967, G__5968, G__5969, G__5970, G__5971, G__5972, G__5973, G__5974, G__5975, G__5976, G__5977, G__5978) : self__.afn.call(null, G__5962, G__5963, G__5964, G__5965, G__5966, G__5967, G__5968, G__5969, G__5970, G__5971, G__5972, G__5973, G__5974, G__5975, G__5976, G__5977, G__5978);
  };
  var G__6290__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5979 = a;
    var G__5980 = b;
    var G__5981 = c;
    var G__5982 = d;
    var G__5983 = e;
    var G__5984 = f;
    var G__5985 = g;
    var G__5986 = h;
    var G__5987 = i;
    var G__5988 = j;
    var G__5989 = k;
    var G__5990 = l;
    var G__5991 = m;
    var G__5992 = n;
    var G__5993 = o;
    var G__5994 = p;
    var G__5995 = q;
    var G__5996 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__5979, G__5980, G__5981, G__5982, G__5983, G__5984, G__5985, G__5986, G__5987, G__5988, G__5989, G__5990, G__5991, G__5992, G__5993, G__5994, G__5995, G__5996) : self__.afn.call(null, G__5979, G__5980, G__5981, G__5982, G__5983, G__5984, G__5985, G__5986, G__5987, G__5988, G__5989, G__5990, G__5991, G__5992, G__5993, G__5994, G__5995, G__5996);
  };
  var G__6290__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5997 = a;
    var G__5998 = b;
    var G__5999 = c;
    var G__6000 = d;
    var G__6001 = e;
    var G__6002 = f;
    var G__6003 = g;
    var G__6004 = h;
    var G__6005 = i;
    var G__6006 = j;
    var G__6007 = k;
    var G__6008 = l;
    var G__6009 = m;
    var G__6010 = n;
    var G__6011 = o;
    var G__6012 = p;
    var G__6013 = q;
    var G__6014 = r;
    var G__6015 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__5997, G__5998, G__5999, G__6000, G__6001, G__6002, G__6003, G__6004, G__6005, G__6006, G__6007, G__6008, G__6009, G__6010, G__6011, G__6012, G__6013, G__6014, G__6015) : self__.afn.call(null, G__5997, G__5998, G__5999, G__6000, G__6001, G__6002, G__6003, G__6004, G__6005, G__6006, G__6007, G__6008, G__6009, G__6010, G__6011, G__6012, G__6013, G__6014, G__6015);
  };
  var G__6290__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6016 = a;
    var G__6017 = b;
    var G__6018 = c;
    var G__6019 = d;
    var G__6020 = e;
    var G__6021 = f;
    var G__6022 = g;
    var G__6023 = h;
    var G__6024 = i;
    var G__6025 = j;
    var G__6026 = k;
    var G__6027 = l;
    var G__6028 = m;
    var G__6029 = n;
    var G__6030 = o;
    var G__6031 = p;
    var G__6032 = q;
    var G__6033 = r;
    var G__6034 = s;
    var G__6035 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6016, G__6017, G__6018, G__6019, G__6020, G__6021, G__6022, G__6023, G__6024, G__6025, G__6026, G__6027, G__6028, G__6029, G__6030, G__6031, G__6032, G__6033, G__6034, G__6035) : self__.afn.call(null, G__6016, G__6017, G__6018, G__6019, G__6020, G__6021, G__6022, G__6023, G__6024, G__6025, G__6026, G__6027, G__6028, G__6029, G__6030, G__6031, G__6032, G__6033, G__6034, G__6035);
  };
  var G__6290__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6036 = self__.afn;
    var G__6037 = a;
    var G__6038 = b;
    var G__6039 = c;
    var G__6040 = d;
    var G__6041 = e;
    var G__6042 = f;
    var G__6043 = g;
    var G__6044 = h;
    var G__6045 = i;
    var G__6046 = j;
    var G__6047 = k;
    var G__6048 = l;
    var G__6049 = m;
    var G__6050 = n;
    var G__6051 = o;
    var G__6052 = p;
    var G__6053 = q;
    var G__6054 = r;
    var G__6055 = s;
    var G__6056 = t;
    var G__6057 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6036, G__6037, G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044, G__6045, G__6046, G__6047, G__6048, G__6049, G__6050, G__6051, G__6052, G__6053, G__6054, G__6055, G__6056, G__6057) : cljs.core.apply.call(null, G__6036, G__6037, G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044, G__6045, G__6046, G__6047, G__6048, G__6049, G__6050, G__6051, G__6052, G__6053, G__6054, 
    G__6055, G__6056, G__6057);
  };
  G__6290 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6290__1.call(this, self__);
      case 2:
        return G__6290__2.call(this, self__, a);
      case 3:
        return G__6290__3.call(this, self__, a, b);
      case 4:
        return G__6290__4.call(this, self__, a, b, c);
      case 5:
        return G__6290__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6290__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6290__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6290__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6290__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6290__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6290__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6290__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6290__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6290__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6290__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6290__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6290__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6290__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6290__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6290__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6290__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6290__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6290.cljs$core$IFn$_invoke$arity$1 = G__6290__1;
  G__6290.cljs$core$IFn$_invoke$arity$2 = G__6290__2;
  G__6290.cljs$core$IFn$_invoke$arity$3 = G__6290__3;
  G__6290.cljs$core$IFn$_invoke$arity$4 = G__6290__4;
  G__6290.cljs$core$IFn$_invoke$arity$5 = G__6290__5;
  G__6290.cljs$core$IFn$_invoke$arity$6 = G__6290__6;
  G__6290.cljs$core$IFn$_invoke$arity$7 = G__6290__7;
  G__6290.cljs$core$IFn$_invoke$arity$8 = G__6290__8;
  G__6290.cljs$core$IFn$_invoke$arity$9 = G__6290__9;
  G__6290.cljs$core$IFn$_invoke$arity$10 = G__6290__10;
  G__6290.cljs$core$IFn$_invoke$arity$11 = G__6290__11;
  G__6290.cljs$core$IFn$_invoke$arity$12 = G__6290__12;
  G__6290.cljs$core$IFn$_invoke$arity$13 = G__6290__13;
  G__6290.cljs$core$IFn$_invoke$arity$14 = G__6290__14;
  G__6290.cljs$core$IFn$_invoke$arity$15 = G__6290__15;
  G__6290.cljs$core$IFn$_invoke$arity$16 = G__6290__16;
  G__6290.cljs$core$IFn$_invoke$arity$17 = G__6290__17;
  G__6290.cljs$core$IFn$_invoke$arity$18 = G__6290__18;
  G__6290.cljs$core$IFn$_invoke$arity$19 = G__6290__19;
  G__6290.cljs$core$IFn$_invoke$arity$20 = G__6290__20;
  G__6290.cljs$core$IFn$_invoke$arity$21 = G__6290__21;
  G__6290.cljs$core$IFn$_invoke$arity$22 = G__6290__22;
  return G__6290;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args5825) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5825)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__6058 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6058) : self__.afn.call(null, G__6058);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__6059 = a;
  var G__6060 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6059, G__6060) : self__.afn.call(null, G__6059, G__6060);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__6061 = a;
  var G__6062 = b;
  var G__6063 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6061, G__6062, G__6063) : self__.afn.call(null, G__6061, G__6062, G__6063);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__6064 = a;
  var G__6065 = b;
  var G__6066 = c;
  var G__6067 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6064, G__6065, G__6066, G__6067) : self__.afn.call(null, G__6064, G__6065, G__6066, G__6067);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__6068 = a;
  var G__6069 = b;
  var G__6070 = c;
  var G__6071 = d;
  var G__6072 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6068, G__6069, G__6070, G__6071, G__6072) : self__.afn.call(null, G__6068, G__6069, G__6070, G__6071, G__6072);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__6073 = a;
  var G__6074 = b;
  var G__6075 = c;
  var G__6076 = d;
  var G__6077 = e;
  var G__6078 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6073, G__6074, G__6075, G__6076, G__6077, G__6078) : self__.afn.call(null, G__6073, G__6074, G__6075, G__6076, G__6077, G__6078);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__6079 = a;
  var G__6080 = b;
  var G__6081 = c;
  var G__6082 = d;
  var G__6083 = e;
  var G__6084 = f;
  var G__6085 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6079, G__6080, G__6081, G__6082, G__6083, G__6084, G__6085) : self__.afn.call(null, G__6079, G__6080, G__6081, G__6082, G__6083, G__6084, G__6085);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__6086 = a;
  var G__6087 = b;
  var G__6088 = c;
  var G__6089 = d;
  var G__6090 = e;
  var G__6091 = f;
  var G__6092 = g;
  var G__6093 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6086, G__6087, G__6088, G__6089, G__6090, G__6091, G__6092, G__6093) : self__.afn.call(null, G__6086, G__6087, G__6088, G__6089, G__6090, G__6091, G__6092, G__6093);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__6094 = a;
  var G__6095 = b;
  var G__6096 = c;
  var G__6097 = d;
  var G__6098 = e;
  var G__6099 = f;
  var G__6100 = g;
  var G__6101 = h;
  var G__6102 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6094, G__6095, G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102) : self__.afn.call(null, G__6094, G__6095, G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__6103 = a;
  var G__6104 = b;
  var G__6105 = c;
  var G__6106 = d;
  var G__6107 = e;
  var G__6108 = f;
  var G__6109 = g;
  var G__6110 = h;
  var G__6111 = i;
  var G__6112 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110, G__6111, G__6112) : self__.afn.call(null, G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110, G__6111, G__6112);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__6113 = a;
  var G__6114 = b;
  var G__6115 = c;
  var G__6116 = d;
  var G__6117 = e;
  var G__6118 = f;
  var G__6119 = g;
  var G__6120 = h;
  var G__6121 = i;
  var G__6122 = j;
  var G__6123 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121, G__6122, G__6123) : self__.afn.call(null, G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121, G__6122, G__6123);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__6124 = a;
  var G__6125 = b;
  var G__6126 = c;
  var G__6127 = d;
  var G__6128 = e;
  var G__6129 = f;
  var G__6130 = g;
  var G__6131 = h;
  var G__6132 = i;
  var G__6133 = j;
  var G__6134 = k;
  var G__6135 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6124, G__6125, G__6126, G__6127, G__6128, G__6129, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135) : self__.afn.call(null, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__6136 = a;
  var G__6137 = b;
  var G__6138 = c;
  var G__6139 = d;
  var G__6140 = e;
  var G__6141 = f;
  var G__6142 = g;
  var G__6143 = h;
  var G__6144 = i;
  var G__6145 = j;
  var G__6146 = k;
  var G__6147 = l;
  var G__6148 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6136, G__6137, G__6138, G__6139, G__6140, G__6141, G__6142, G__6143, G__6144, G__6145, G__6146, G__6147, G__6148) : self__.afn.call(null, G__6136, G__6137, G__6138, G__6139, G__6140, G__6141, G__6142, G__6143, G__6144, G__6145, G__6146, G__6147, G__6148);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__6149 = a;
  var G__6150 = b;
  var G__6151 = c;
  var G__6152 = d;
  var G__6153 = e;
  var G__6154 = f;
  var G__6155 = g;
  var G__6156 = h;
  var G__6157 = i;
  var G__6158 = j;
  var G__6159 = k;
  var G__6160 = l;
  var G__6161 = m;
  var G__6162 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6149, G__6150, G__6151, G__6152, G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162) : self__.afn.call(null, G__6149, G__6150, G__6151, G__6152, G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__6163 = a;
  var G__6164 = b;
  var G__6165 = c;
  var G__6166 = d;
  var G__6167 = e;
  var G__6168 = f;
  var G__6169 = g;
  var G__6170 = h;
  var G__6171 = i;
  var G__6172 = j;
  var G__6173 = k;
  var G__6174 = l;
  var G__6175 = m;
  var G__6176 = n;
  var G__6177 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6163, G__6164, G__6165, G__6166, G__6167, G__6168, G__6169, G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177) : self__.afn.call(null, G__6163, G__6164, G__6165, G__6166, G__6167, G__6168, G__6169, G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__6178 = a;
  var G__6179 = b;
  var G__6180 = c;
  var G__6181 = d;
  var G__6182 = e;
  var G__6183 = f;
  var G__6184 = g;
  var G__6185 = h;
  var G__6186 = i;
  var G__6187 = j;
  var G__6188 = k;
  var G__6189 = l;
  var G__6190 = m;
  var G__6191 = n;
  var G__6192 = o;
  var G__6193 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6178, G__6179, G__6180, G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187, G__6188, G__6189, G__6190, G__6191, G__6192, G__6193) : self__.afn.call(null, G__6178, G__6179, G__6180, G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187, G__6188, G__6189, G__6190, G__6191, G__6192, G__6193);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__6194 = a;
  var G__6195 = b;
  var G__6196 = c;
  var G__6197 = d;
  var G__6198 = e;
  var G__6199 = f;
  var G__6200 = g;
  var G__6201 = h;
  var G__6202 = i;
  var G__6203 = j;
  var G__6204 = k;
  var G__6205 = l;
  var G__6206 = m;
  var G__6207 = n;
  var G__6208 = o;
  var G__6209 = p;
  var G__6210 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6194, G__6195, G__6196, G__6197, G__6198, G__6199, G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206, G__6207, G__6208, G__6209, G__6210) : self__.afn.call(null, G__6194, G__6195, G__6196, G__6197, G__6198, G__6199, G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206, G__6207, G__6208, G__6209, G__6210);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__6211 = a;
  var G__6212 = b;
  var G__6213 = c;
  var G__6214 = d;
  var G__6215 = e;
  var G__6216 = f;
  var G__6217 = g;
  var G__6218 = h;
  var G__6219 = i;
  var G__6220 = j;
  var G__6221 = k;
  var G__6222 = l;
  var G__6223 = m;
  var G__6224 = n;
  var G__6225 = o;
  var G__6226 = p;
  var G__6227 = q;
  var G__6228 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219, G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226, G__6227, G__6228) : self__.afn.call(null, G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219, G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226, G__6227, G__6228);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__6229 = a;
  var G__6230 = b;
  var G__6231 = c;
  var G__6232 = d;
  var G__6233 = e;
  var G__6234 = f;
  var G__6235 = g;
  var G__6236 = h;
  var G__6237 = i;
  var G__6238 = j;
  var G__6239 = k;
  var G__6240 = l;
  var G__6241 = m;
  var G__6242 = n;
  var G__6243 = o;
  var G__6244 = p;
  var G__6245 = q;
  var G__6246 = r;
  var G__6247 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, G__6239, G__6240, G__6241, G__6242, G__6243, G__6244, G__6245, G__6246, G__6247) : self__.afn.call(null, G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, G__6239, G__6240, G__6241, G__6242, G__6243, G__6244, G__6245, G__6246, G__6247);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__6248 = a;
  var G__6249 = b;
  var G__6250 = c;
  var G__6251 = d;
  var G__6252 = e;
  var G__6253 = f;
  var G__6254 = g;
  var G__6255 = h;
  var G__6256 = i;
  var G__6257 = j;
  var G__6258 = k;
  var G__6259 = l;
  var G__6260 = m;
  var G__6261 = n;
  var G__6262 = o;
  var G__6263 = p;
  var G__6264 = q;
  var G__6265 = r;
  var G__6266 = s;
  var G__6267 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6248, G__6249, G__6250, G__6251, G__6252, G__6253, G__6254, G__6255, G__6256, G__6257, G__6258, G__6259, G__6260, G__6261, G__6262, G__6263, G__6264, G__6265, G__6266, G__6267) : self__.afn.call(null, G__6248, G__6249, G__6250, G__6251, G__6252, G__6253, G__6254, G__6255, G__6256, G__6257, G__6258, G__6259, G__6260, G__6261, G__6262, G__6263, G__6264, G__6265, G__6266, G__6267);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6268 = self__.afn;
  var G__6269 = a;
  var G__6270 = b;
  var G__6271 = c;
  var G__6272 = d;
  var G__6273 = e;
  var G__6274 = f;
  var G__6275 = g;
  var G__6276 = h;
  var G__6277 = i;
  var G__6278 = j;
  var G__6279 = k;
  var G__6280 = l;
  var G__6281 = m;
  var G__6282 = n;
  var G__6283 = o;
  var G__6284 = p;
  var G__6285 = q;
  var G__6286 = r;
  var G__6287 = s;
  var G__6288 = t;
  var G__6289 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6268, G__6269, G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276, G__6277, G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284, G__6285, G__6286, G__6287, G__6288, G__6289) : cljs.core.apply.call(null, G__6268, G__6269, G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276, G__6277, G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284, G__6285, G__6286, 
  G__6287, G__6288, G__6289);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__6294 = o;
    if (G__6294) {
      var bit__4753__auto__ = G__6294.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4753__auto__ || G__6294.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6294.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6294);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6294);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4060__auto__ = !(o == null);
    if (and__4060__auto__) {
      var G__6298 = o;
      if (G__6298) {
        var bit__4753__auto__ = G__6298.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4753__auto__ || G__6298.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6298.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6298);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6298);
      }
    } else {
      return and__4060__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var cljs$core$disj = null;
  var cljs$core$disj__1 = function(coll) {
    return coll;
  };
  var cljs$core$disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var cljs$core$disj__3 = function() {
    var G__6301__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6302 = ret;
            var G__6303 = cljs.core.first(ks);
            var G__6304 = cljs.core.next(ks);
            coll = G__6302;
            k = G__6303;
            ks = G__6304;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6301 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6305__i = 0, G__6305__a = new Array(arguments.length - 2);
        while (G__6305__i < G__6305__a.length) {
          G__6305__a[G__6305__i] = arguments[G__6305__i + 2];
          ++G__6305__i;
        }
        ks = new cljs.core.IndexedSeq(G__6305__a, 0);
      }
      return G__6301__delegate.call(this, coll, k, ks);
    };
    G__6301.cljs$lang$maxFixedArity = 2;
    G__6301.cljs$lang$applyTo = function(arglist__6306) {
      var coll = cljs.core.first(arglist__6306);
      arglist__6306 = cljs.core.next(arglist__6306);
      var k = cljs.core.first(arglist__6306);
      var ks = cljs.core.rest(arglist__6306);
      return G__6301__delegate(coll, k, ks);
    };
    G__6301.cljs$core$IFn$_invoke$arity$variadic = G__6301__delegate;
    return G__6301;
  }();
  cljs$core$disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$disj__1.call(this, coll);
      case 2:
        return cljs$core$disj__2.call(this, coll, k);
      default:
        var G__6307 = null;
        if (arguments.length > 2) {
          var G__6308__i = 0, G__6308__a = new Array(arguments.length - 2);
          while (G__6308__i < G__6308__a.length) {
            G__6308__a[G__6308__i] = arguments[G__6308__i + 2];
            ++G__6308__i;
          }
          G__6307 = new cljs.core.IndexedSeq(G__6308__a, 0);
        }
        return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6307);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$disj.cljs$lang$maxFixedArity = 2;
  cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$disj;
}();
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6310 = x;
    if (G__6310) {
      var bit__4753__auto__ = G__6310.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4753__auto__ || G__6310.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6310.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6310);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6310);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6312 = x;
    if (G__6312) {
      var bit__4753__auto__ = G__6312.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4753__auto__ || G__6312.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6312.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6312);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6312);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__6314 = x;
  if (G__6314) {
    var bit__4753__auto__ = G__6314.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4753__auto__ || G__6314.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6314.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6314);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6314);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__6316 = x;
  if (G__6316) {
    var bit__4753__auto__ = G__6316.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4753__auto__ || G__6316.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6316.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6316);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6316);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__6318 = x;
  if (G__6318) {
    var bit__4753__auto__ = G__6318.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4753__auto__ || G__6318.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6318.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6318);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6318);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__6320 = x;
  if (G__6320) {
    var bit__4753__auto__ = G__6320.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4753__auto__ || G__6320.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6320.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6320);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6320);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6322 = x;
    if (G__6322) {
      var bit__4753__auto__ = G__6322.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4753__auto__ || G__6322.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6322.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6322);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6322);
    }
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__6324 = x;
  if (G__6324) {
    var bit__4753__auto__ = G__6324.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4753__auto__ || G__6324.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6324.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6324);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6324);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__6326 = x;
  if (G__6326) {
    var bit__4746__auto__ = G__6326.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4746__auto__ || G__6326.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var cljs$core$js_obj = null;
  var cljs$core$js_obj__0 = function() {
    var obj6332 = {};
    return obj6332;
  };
  var cljs$core$js_obj__1 = function() {
    var G__6335__delegate = function(keyvals) {
      var G__6333 = goog.object.create;
      var G__6334 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6333, G__6334) : cljs.core.apply.call(null, G__6333, G__6334);
    };
    var G__6335 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__6336__i = 0, G__6336__a = new Array(arguments.length - 0);
        while (G__6336__i < G__6336__a.length) {
          G__6336__a[G__6336__i] = arguments[G__6336__i + 0];
          ++G__6336__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__6336__a, 0);
      }
      return G__6335__delegate.call(this, keyvals);
    };
    G__6335.cljs$lang$maxFixedArity = 0;
    G__6335.cljs$lang$applyTo = function(arglist__6337) {
      var keyvals = cljs.core.seq(arglist__6337);
      return G__6335__delegate(keyvals);
    };
    G__6335.cljs$core$IFn$_invoke$arity$variadic = G__6335__delegate;
    return G__6335;
  }();
  cljs$core$js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$js_obj__0.call(this);
      default:
        var G__6338 = null;
        if (arguments.length > 0) {
          var G__6339__i = 0, G__6339__a = new Array(arguments.length - 0);
          while (G__6339__i < G__6339__a.length) {
            G__6339__a[G__6339__i] = arguments[G__6339__i + 0];
            ++G__6339__i;
          }
          G__6338 = new cljs.core.IndexedSeq(G__6339__a, 0);
        }
        return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6338);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
  cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
  cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
  cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$js_obj;
}();
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__6342_6344 = obj;
  var G__6343_6345 = function(G__6342_6344, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6342_6344, keys);
  goog.object.forEach(G__6342_6344, G__6343_6345);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6346 = i__$1 + 1;
      var G__6347 = j__$1 + 1;
      var G__6348 = len__$1 - 1;
      i__$1 = G__6346;
      j__$1 = G__6347;
      len__$1 = G__6348;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6349 = i__$1 - 1;
      var G__6350 = j__$1 - 1;
      var G__6351 = len__$1 - 1;
      i__$1 = G__6349;
      j__$1 = G__6350;
      len__$1 = G__6351;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6353 = {};
  return obj6353;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6355 = s;
    if (G__6355) {
      var bit__4753__auto__ = G__6355.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4753__auto__ || G__6355.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6355.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6355);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6355);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__6357 = s;
  if (G__6357) {
    var bit__4753__auto__ = G__6357.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4753__auto__ || G__6357.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6357.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6357);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6357);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4072__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4072__auto__) {
    return or__4072__auto__;
  } else {
    var G__6361 = f;
    if (G__6361) {
      var bit__4753__auto__ = G__6361.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4753__auto__ || G__6361.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6361.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6361);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6361);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__6374 = n;
    return isNaN(G__6374);
  }()) && !(n === Infinity) && function() {
    var G__6375 = n;
    return parseFloat(G__6375);
  }() === function() {
    var G__6376 = n;
    var G__6377 = 10;
    return parseInt(G__6376, G__6377);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var cljs$core$distinct_QMARK_ = null;
  var cljs$core$distinct_QMARK___1 = function(x) {
    return true;
  };
  var cljs$core$distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var cljs$core$distinct_QMARK___3 = function() {
    var G__6378__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__6379 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__6380 = etc;
              s = G__6379;
              xs = G__6380;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6378 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6381__i = 0, G__6381__a = new Array(arguments.length - 2);
        while (G__6381__i < G__6381__a.length) {
          G__6381__a[G__6381__i] = arguments[G__6381__i + 2];
          ++G__6381__i;
        }
        more = new cljs.core.IndexedSeq(G__6381__a, 0);
      }
      return G__6378__delegate.call(this, x, y, more);
    };
    G__6378.cljs$lang$maxFixedArity = 2;
    G__6378.cljs$lang$applyTo = function(arglist__6382) {
      var x = cljs.core.first(arglist__6382);
      arglist__6382 = cljs.core.next(arglist__6382);
      var y = cljs.core.first(arglist__6382);
      var more = cljs.core.rest(arglist__6382);
      return G__6378__delegate(x, y, more);
    };
    G__6378.cljs$core$IFn$_invoke$arity$variadic = G__6378__delegate;
    return G__6378;
  }();
  cljs$core$distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$distinct_QMARK___1.call(this, x);
      case 2:
        return cljs$core$distinct_QMARK___2.call(this, x, y);
      default:
        var G__6383 = null;
        if (arguments.length > 2) {
          var G__6384__i = 0, G__6384__a = new Array(arguments.length - 2);
          while (G__6384__i < G__6384__a.length) {
            G__6384__a[G__6384__i] = arguments[G__6384__i + 2];
            ++G__6384__i;
          }
          G__6383 = new cljs.core.IndexedSeq(G__6384__a, 0);
        }
        return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6383);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$distinct_QMARK_;
}();
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__6388 = x;
            if (G__6388) {
              var bit__4746__auto__ = G__6388.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4746__auto__ || G__6388.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__6389 = x;
            var G__6390 = y;
            return goog.array.defaultCompare(G__6389, G__6390);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var cljs$core$compare_indexed = null;
  var cljs$core$compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var cljs$core$compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6395 = xs;
        var G__6396 = ys;
        var G__6397 = len;
        var G__6398 = n + 1;
        xs = G__6395;
        ys = G__6396;
        len = G__6397;
        n = G__6398;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  cljs$core$compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$compare_indexed__2.call(this, xs, ys);
      case 4:
        return cljs$core$compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
  cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
  return cljs$core$compare_indexed;
}();
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__6403 = x;
        var G__6404 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6403, G__6404) : f.call(null, G__6403, G__6404);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__6405 = y;
            var G__6406 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6405, G__6406) : f.call(null, G__6405, G__6406);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var cljs$core$sort = null;
  var cljs$core$sort__1 = function(coll) {
    return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var cljs$core$sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__6412 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6412) : cljs.core.to_array.call(null, G__6412);
      }();
      var G__6413_6415 = a;
      var G__6414_6416 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__6413_6415, G__6414_6416);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  cljs$core$sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$sort__1.call(this, comp);
      case 2:
        return cljs$core$sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
  cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
  return cljs$core$sort;
}();
cljs.core.sort_by = function() {
  var cljs$core$sort_by = null;
  var cljs$core$sort_by__2 = function(keyfn, coll) {
    return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var cljs$core$sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__6422 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6422) : keyfn.call(null, G__6422);
      }(), function() {
        var G__6423 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6423) : keyfn.call(null, G__6423);
      }());
    }, coll);
  };
  cljs$core$sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$sort_by__2.call(this, keyfn, comp);
      case 3:
        return cljs$core$sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
  cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
  return cljs$core$sort_by;
}();
cljs.core.seq_reduce = function() {
  var cljs$core$seq_reduce = null;
  var cljs$core$seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__6429 = f;
      var G__6430 = cljs.core.first(s);
      var G__6431 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6429, G__6430, G__6431) : cljs.core.reduce.call(null, G__6429, G__6430, G__6431);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var cljs$core$seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__6432 = val__$1;
          var G__6433 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6432, G__6433) : f.call(null, G__6432, G__6433);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6434 = nval;
          var G__6435 = cljs.core.next(coll__$1);
          val__$1 = G__6434;
          coll__$1 = G__6435;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$seq_reduce__2.call(this, f, val);
      case 3:
        return cljs$core$seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
  cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
  return cljs$core$seq_reduce;
}();
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__6439 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6439) : cljs.core.to_array.call(null, G__6439);
  }();
  var G__6440_6442 = a;
  goog.array.shuffle(G__6440_6442);
  var G__6441 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6441) : cljs.core.vec.call(null, G__6441);
};
cljs.core.reduce = function() {
  var cljs$core$reduce = null;
  var cljs$core$reduce__2 = function(f, coll) {
    if (function() {
      var G__6445 = coll;
      if (G__6445) {
        var bit__4746__auto__ = G__6445.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4746__auto__ || G__6445.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var cljs$core$reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6446 = coll;
      if (G__6446) {
        var bit__4746__auto__ = G__6446.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4746__auto__ || G__6446.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  cljs$core$reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$reduce__2.call(this, f, val);
      case 3:
        return cljs$core$reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
  cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
  return cljs$core$reduce;
}();
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function() {
  var cljs$core$completing = null;
  var cljs$core$completing__1 = function(f) {
    return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var cljs$core$completing__2 = function(f, cf) {
    return function() {
      var G__6455 = null;
      var G__6455__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__6455__1 = function(x) {
        var G__6452 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6452) : cf.call(null, G__6452);
      };
      var G__6455__2 = function(x, y) {
        var G__6453 = x;
        var G__6454 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6453, G__6454) : f.call(null, G__6453, G__6454);
      };
      G__6455 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__6455__0.call(this);
          case 1:
            return G__6455__1.call(this, x);
          case 2:
            return G__6455__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6455.cljs$core$IFn$_invoke$arity$0 = G__6455__0;
      G__6455.cljs$core$IFn$_invoke$arity$1 = G__6455__1;
      G__6455.cljs$core$IFn$_invoke$arity$2 = G__6455__2;
      return G__6455;
    }();
  };
  cljs$core$completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return cljs$core$completing__1.call(this, f);
      case 2:
        return cljs$core$completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
  cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
  return cljs$core$completing;
}();
cljs.core.transduce = function() {
  var cljs$core$transduce = null;
  var cljs$core$transduce__3 = function(xform, f, coll) {
    return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var cljs$core$transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__6462 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6462) : xform.call(null, G__6462);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__6463 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6463) : f__$1.call(null, G__6463);
  };
  cljs$core$transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return cljs$core$transduce__3.call(this, xform, f, init);
      case 4:
        return cljs$core$transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
  cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
  return cljs$core$transduce;
}();
cljs.core._PLUS_ = function() {
  var cljs$core$_PLUS_ = null;
  var cljs$core$_PLUS___0 = function() {
    return 0;
  };
  var cljs$core$_PLUS___1 = function(x) {
    return x;
  };
  var cljs$core$_PLUS___2 = function(x, y) {
    return x + y;
  };
  var cljs$core$_PLUS___3 = function() {
    var G__6464__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_, x + y, more);
    };
    var G__6464 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6465__i = 0, G__6465__a = new Array(arguments.length - 2);
        while (G__6465__i < G__6465__a.length) {
          G__6465__a[G__6465__i] = arguments[G__6465__i + 2];
          ++G__6465__i;
        }
        more = new cljs.core.IndexedSeq(G__6465__a, 0);
      }
      return G__6464__delegate.call(this, x, y, more);
    };
    G__6464.cljs$lang$maxFixedArity = 2;
    G__6464.cljs$lang$applyTo = function(arglist__6466) {
      var x = cljs.core.first(arglist__6466);
      arglist__6466 = cljs.core.next(arglist__6466);
      var y = cljs.core.first(arglist__6466);
      var more = cljs.core.rest(arglist__6466);
      return G__6464__delegate(x, y, more);
    };
    G__6464.cljs$core$IFn$_invoke$arity$variadic = G__6464__delegate;
    return G__6464;
  }();
  cljs$core$_PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$_PLUS___0.call(this);
      case 1:
        return cljs$core$_PLUS___1.call(this, x);
      case 2:
        return cljs$core$_PLUS___2.call(this, x, y);
      default:
        var G__6467 = null;
        if (arguments.length > 2) {
          var G__6468__i = 0, G__6468__a = new Array(arguments.length - 2);
          while (G__6468__i < G__6468__a.length) {
            G__6468__a[G__6468__i] = arguments[G__6468__i + 2];
            ++G__6468__i;
          }
          G__6467 = new cljs.core.IndexedSeq(G__6468__a, 0);
        }
        return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6467);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
  cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_PLUS_;
}();
cljs.core._ = function() {
  var cljs$core$_ = null;
  var cljs$core$___1 = function(x) {
    return-x;
  };
  var cljs$core$___2 = function(x, y) {
    return x - y;
  };
  var cljs$core$___3 = function() {
    var G__6469__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_, x - y, more);
    };
    var G__6469 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6470__i = 0, G__6470__a = new Array(arguments.length - 2);
        while (G__6470__i < G__6470__a.length) {
          G__6470__a[G__6470__i] = arguments[G__6470__i + 2];
          ++G__6470__i;
        }
        more = new cljs.core.IndexedSeq(G__6470__a, 0);
      }
      return G__6469__delegate.call(this, x, y, more);
    };
    G__6469.cljs$lang$maxFixedArity = 2;
    G__6469.cljs$lang$applyTo = function(arglist__6471) {
      var x = cljs.core.first(arglist__6471);
      arglist__6471 = cljs.core.next(arglist__6471);
      var y = cljs.core.first(arglist__6471);
      var more = cljs.core.rest(arglist__6471);
      return G__6469__delegate(x, y, more);
    };
    G__6469.cljs$core$IFn$_invoke$arity$variadic = G__6469__delegate;
    return G__6469;
  }();
  cljs$core$_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$___1.call(this, x);
      case 2:
        return cljs$core$___2.call(this, x, y);
      default:
        var G__6472 = null;
        if (arguments.length > 2) {
          var G__6473__i = 0, G__6473__a = new Array(arguments.length - 2);
          while (G__6473__i < G__6473__a.length) {
            G__6473__a[G__6473__i] = arguments[G__6473__i + 2];
            ++G__6473__i;
          }
          G__6472 = new cljs.core.IndexedSeq(G__6473__a, 0);
        }
        return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6472);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_.cljs$lang$maxFixedArity = 2;
  cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
  cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
  cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
  cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_;
}();
cljs.core._STAR_ = function() {
  var cljs$core$_STAR_ = null;
  var cljs$core$_STAR___0 = function() {
    return 1;
  };
  var cljs$core$_STAR___1 = function(x) {
    return x;
  };
  var cljs$core$_STAR___2 = function(x, y) {
    return x * y;
  };
  var cljs$core$_STAR___3 = function() {
    var G__6474__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_, x * y, more);
    };
    var G__6474 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6475__i = 0, G__6475__a = new Array(arguments.length - 2);
        while (G__6475__i < G__6475__a.length) {
          G__6475__a[G__6475__i] = arguments[G__6475__i + 2];
          ++G__6475__i;
        }
        more = new cljs.core.IndexedSeq(G__6475__a, 0);
      }
      return G__6474__delegate.call(this, x, y, more);
    };
    G__6474.cljs$lang$maxFixedArity = 2;
    G__6474.cljs$lang$applyTo = function(arglist__6476) {
      var x = cljs.core.first(arglist__6476);
      arglist__6476 = cljs.core.next(arglist__6476);
      var y = cljs.core.first(arglist__6476);
      var more = cljs.core.rest(arglist__6476);
      return G__6474__delegate(x, y, more);
    };
    G__6474.cljs$core$IFn$_invoke$arity$variadic = G__6474__delegate;
    return G__6474;
  }();
  cljs$core$_STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$_STAR___0.call(this);
      case 1:
        return cljs$core$_STAR___1.call(this, x);
      case 2:
        return cljs$core$_STAR___2.call(this, x, y);
      default:
        var G__6477 = null;
        if (arguments.length > 2) {
          var G__6478__i = 0, G__6478__a = new Array(arguments.length - 2);
          while (G__6478__i < G__6478__a.length) {
            G__6478__a[G__6478__i] = arguments[G__6478__i + 2];
            ++G__6478__i;
          }
          G__6477 = new cljs.core.IndexedSeq(G__6478__a, 0);
        }
        return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6477);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
  cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_STAR_;
}();
cljs.core._SLASH_ = function() {
  var cljs$core$_SLASH_ = null;
  var cljs$core$_SLASH___1 = function(x) {
    return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var cljs$core$_SLASH___2 = function(x, y) {
    return x / y;
  };
  var cljs$core$_SLASH___3 = function() {
    var G__6483__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_, cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6483 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6484__i = 0, G__6484__a = new Array(arguments.length - 2);
        while (G__6484__i < G__6484__a.length) {
          G__6484__a[G__6484__i] = arguments[G__6484__i + 2];
          ++G__6484__i;
        }
        more = new cljs.core.IndexedSeq(G__6484__a, 0);
      }
      return G__6483__delegate.call(this, x, y, more);
    };
    G__6483.cljs$lang$maxFixedArity = 2;
    G__6483.cljs$lang$applyTo = function(arglist__6485) {
      var x = cljs.core.first(arglist__6485);
      arglist__6485 = cljs.core.next(arglist__6485);
      var y = cljs.core.first(arglist__6485);
      var more = cljs.core.rest(arglist__6485);
      return G__6483__delegate(x, y, more);
    };
    G__6483.cljs$core$IFn$_invoke$arity$variadic = G__6483__delegate;
    return G__6483;
  }();
  cljs$core$_SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_SLASH___1.call(this, x);
      case 2:
        return cljs$core$_SLASH___2.call(this, x, y);
      default:
        var G__6486 = null;
        if (arguments.length > 2) {
          var G__6487__i = 0, G__6487__a = new Array(arguments.length - 2);
          while (G__6487__i < G__6487__a.length) {
            G__6487__a[G__6487__i] = arguments[G__6487__i + 2];
            ++G__6487__i;
          }
          G__6486 = new cljs.core.IndexedSeq(G__6487__a, 0);
        }
        return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6486);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
  cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_SLASH_;
}();
cljs.core._LT_ = function() {
  var cljs$core$_LT_ = null;
  var cljs$core$_LT___1 = function(x) {
    return true;
  };
  var cljs$core$_LT___2 = function(x, y) {
    return x < y;
  };
  var cljs$core$_LT___3 = function() {
    var G__6488__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__6489 = y;
            var G__6490 = cljs.core.first(more);
            var G__6491 = cljs.core.next(more);
            x = G__6489;
            y = G__6490;
            more = G__6491;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6488 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6492__i = 0, G__6492__a = new Array(arguments.length - 2);
        while (G__6492__i < G__6492__a.length) {
          G__6492__a[G__6492__i] = arguments[G__6492__i + 2];
          ++G__6492__i;
        }
        more = new cljs.core.IndexedSeq(G__6492__a, 0);
      }
      return G__6488__delegate.call(this, x, y, more);
    };
    G__6488.cljs$lang$maxFixedArity = 2;
    G__6488.cljs$lang$applyTo = function(arglist__6493) {
      var x = cljs.core.first(arglist__6493);
      arglist__6493 = cljs.core.next(arglist__6493);
      var y = cljs.core.first(arglist__6493);
      var more = cljs.core.rest(arglist__6493);
      return G__6488__delegate(x, y, more);
    };
    G__6488.cljs$core$IFn$_invoke$arity$variadic = G__6488__delegate;
    return G__6488;
  }();
  cljs$core$_LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_LT___1.call(this, x);
      case 2:
        return cljs$core$_LT___2.call(this, x, y);
      default:
        var G__6494 = null;
        if (arguments.length > 2) {
          var G__6495__i = 0, G__6495__a = new Array(arguments.length - 2);
          while (G__6495__i < G__6495__a.length) {
            G__6495__a[G__6495__i] = arguments[G__6495__i + 2];
            ++G__6495__i;
          }
          G__6494 = new cljs.core.IndexedSeq(G__6495__a, 0);
        }
        return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6494);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
  cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_LT_;
}();
cljs.core._LT__EQ_ = function() {
  var cljs$core$_LT__EQ_ = null;
  var cljs$core$_LT__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var cljs$core$_LT__EQ___3 = function() {
    var G__6496__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__6497 = y;
            var G__6498 = cljs.core.first(more);
            var G__6499 = cljs.core.next(more);
            x = G__6497;
            y = G__6498;
            more = G__6499;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6496 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6500__i = 0, G__6500__a = new Array(arguments.length - 2);
        while (G__6500__i < G__6500__a.length) {
          G__6500__a[G__6500__i] = arguments[G__6500__i + 2];
          ++G__6500__i;
        }
        more = new cljs.core.IndexedSeq(G__6500__a, 0);
      }
      return G__6496__delegate.call(this, x, y, more);
    };
    G__6496.cljs$lang$maxFixedArity = 2;
    G__6496.cljs$lang$applyTo = function(arglist__6501) {
      var x = cljs.core.first(arglist__6501);
      arglist__6501 = cljs.core.next(arglist__6501);
      var y = cljs.core.first(arglist__6501);
      var more = cljs.core.rest(arglist__6501);
      return G__6496__delegate(x, y, more);
    };
    G__6496.cljs$core$IFn$_invoke$arity$variadic = G__6496__delegate;
    return G__6496;
  }();
  cljs$core$_LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_LT__EQ___1.call(this, x);
      case 2:
        return cljs$core$_LT__EQ___2.call(this, x, y);
      default:
        var G__6502 = null;
        if (arguments.length > 2) {
          var G__6503__i = 0, G__6503__a = new Array(arguments.length - 2);
          while (G__6503__i < G__6503__a.length) {
            G__6503__a[G__6503__i] = arguments[G__6503__i + 2];
            ++G__6503__i;
          }
          G__6502 = new cljs.core.IndexedSeq(G__6503__a, 0);
        }
        return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6502);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_LT__EQ_;
}();
cljs.core._GT_ = function() {
  var cljs$core$_GT_ = null;
  var cljs$core$_GT___1 = function(x) {
    return true;
  };
  var cljs$core$_GT___2 = function(x, y) {
    return x > y;
  };
  var cljs$core$_GT___3 = function() {
    var G__6504__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__6505 = y;
            var G__6506 = cljs.core.first(more);
            var G__6507 = cljs.core.next(more);
            x = G__6505;
            y = G__6506;
            more = G__6507;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6504 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6508__i = 0, G__6508__a = new Array(arguments.length - 2);
        while (G__6508__i < G__6508__a.length) {
          G__6508__a[G__6508__i] = arguments[G__6508__i + 2];
          ++G__6508__i;
        }
        more = new cljs.core.IndexedSeq(G__6508__a, 0);
      }
      return G__6504__delegate.call(this, x, y, more);
    };
    G__6504.cljs$lang$maxFixedArity = 2;
    G__6504.cljs$lang$applyTo = function(arglist__6509) {
      var x = cljs.core.first(arglist__6509);
      arglist__6509 = cljs.core.next(arglist__6509);
      var y = cljs.core.first(arglist__6509);
      var more = cljs.core.rest(arglist__6509);
      return G__6504__delegate(x, y, more);
    };
    G__6504.cljs$core$IFn$_invoke$arity$variadic = G__6504__delegate;
    return G__6504;
  }();
  cljs$core$_GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_GT___1.call(this, x);
      case 2:
        return cljs$core$_GT___2.call(this, x, y);
      default:
        var G__6510 = null;
        if (arguments.length > 2) {
          var G__6511__i = 0, G__6511__a = new Array(arguments.length - 2);
          while (G__6511__i < G__6511__a.length) {
            G__6511__a[G__6511__i] = arguments[G__6511__i + 2];
            ++G__6511__i;
          }
          G__6510 = new cljs.core.IndexedSeq(G__6511__a, 0);
        }
        return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6510);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
  cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_GT_;
}();
cljs.core._GT__EQ_ = function() {
  var cljs$core$_GT__EQ_ = null;
  var cljs$core$_GT__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var cljs$core$_GT__EQ___3 = function() {
    var G__6512__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__6513 = y;
            var G__6514 = cljs.core.first(more);
            var G__6515 = cljs.core.next(more);
            x = G__6513;
            y = G__6514;
            more = G__6515;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6512 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6516__i = 0, G__6516__a = new Array(arguments.length - 2);
        while (G__6516__i < G__6516__a.length) {
          G__6516__a[G__6516__i] = arguments[G__6516__i + 2];
          ++G__6516__i;
        }
        more = new cljs.core.IndexedSeq(G__6516__a, 0);
      }
      return G__6512__delegate.call(this, x, y, more);
    };
    G__6512.cljs$lang$maxFixedArity = 2;
    G__6512.cljs$lang$applyTo = function(arglist__6517) {
      var x = cljs.core.first(arglist__6517);
      arglist__6517 = cljs.core.next(arglist__6517);
      var y = cljs.core.first(arglist__6517);
      var more = cljs.core.rest(arglist__6517);
      return G__6512__delegate(x, y, more);
    };
    G__6512.cljs$core$IFn$_invoke$arity$variadic = G__6512__delegate;
    return G__6512;
  }();
  cljs$core$_GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_GT__EQ___1.call(this, x);
      case 2:
        return cljs$core$_GT__EQ___2.call(this, x, y);
      default:
        var G__6518 = null;
        if (arguments.length > 2) {
          var G__6519__i = 0, G__6519__a = new Array(arguments.length - 2);
          while (G__6519__i < G__6519__a.length) {
            G__6519__a[G__6519__i] = arguments[G__6519__i + 2];
            ++G__6519__i;
          }
          G__6518 = new cljs.core.IndexedSeq(G__6519__a, 0);
        }
        return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6518);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_GT__EQ_;
}();
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var cljs$core$max = null;
  var cljs$core$max__1 = function(x) {
    return x;
  };
  var cljs$core$max__2 = function(x, y) {
    var x__4389__auto__ = x;
    var y__4390__auto__ = y;
    return x__4389__auto__ > y__4390__auto__ ? x__4389__auto__ : y__4390__auto__;
  };
  var cljs$core$max__3 = function() {
    var G__6520__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max, function() {
        var x__4389__auto__ = x;
        var y__4390__auto__ = y;
        return x__4389__auto__ > y__4390__auto__ ? x__4389__auto__ : y__4390__auto__;
      }(), more);
    };
    var G__6520 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6521__i = 0, G__6521__a = new Array(arguments.length - 2);
        while (G__6521__i < G__6521__a.length) {
          G__6521__a[G__6521__i] = arguments[G__6521__i + 2];
          ++G__6521__i;
        }
        more = new cljs.core.IndexedSeq(G__6521__a, 0);
      }
      return G__6520__delegate.call(this, x, y, more);
    };
    G__6520.cljs$lang$maxFixedArity = 2;
    G__6520.cljs$lang$applyTo = function(arglist__6522) {
      var x = cljs.core.first(arglist__6522);
      arglist__6522 = cljs.core.next(arglist__6522);
      var y = cljs.core.first(arglist__6522);
      var more = cljs.core.rest(arglist__6522);
      return G__6520__delegate(x, y, more);
    };
    G__6520.cljs$core$IFn$_invoke$arity$variadic = G__6520__delegate;
    return G__6520;
  }();
  cljs$core$max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$max__1.call(this, x);
      case 2:
        return cljs$core$max__2.call(this, x, y);
      default:
        var G__6523 = null;
        if (arguments.length > 2) {
          var G__6524__i = 0, G__6524__a = new Array(arguments.length - 2);
          while (G__6524__i < G__6524__a.length) {
            G__6524__a[G__6524__i] = arguments[G__6524__i + 2];
            ++G__6524__i;
          }
          G__6523 = new cljs.core.IndexedSeq(G__6524__a, 0);
        }
        return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6523);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$max.cljs$lang$maxFixedArity = 2;
  cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
  cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
  cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
  cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$max;
}();
cljs.core.min = function() {
  var cljs$core$min = null;
  var cljs$core$min__1 = function(x) {
    return x;
  };
  var cljs$core$min__2 = function(x, y) {
    var x__4396__auto__ = x;
    var y__4397__auto__ = y;
    return x__4396__auto__ < y__4397__auto__ ? x__4396__auto__ : y__4397__auto__;
  };
  var cljs$core$min__3 = function() {
    var G__6525__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min, function() {
        var x__4396__auto__ = x;
        var y__4397__auto__ = y;
        return x__4396__auto__ < y__4397__auto__ ? x__4396__auto__ : y__4397__auto__;
      }(), more);
    };
    var G__6525 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6526__i = 0, G__6526__a = new Array(arguments.length - 2);
        while (G__6526__i < G__6526__a.length) {
          G__6526__a[G__6526__i] = arguments[G__6526__i + 2];
          ++G__6526__i;
        }
        more = new cljs.core.IndexedSeq(G__6526__a, 0);
      }
      return G__6525__delegate.call(this, x, y, more);
    };
    G__6525.cljs$lang$maxFixedArity = 2;
    G__6525.cljs$lang$applyTo = function(arglist__6527) {
      var x = cljs.core.first(arglist__6527);
      arglist__6527 = cljs.core.next(arglist__6527);
      var y = cljs.core.first(arglist__6527);
      var more = cljs.core.rest(arglist__6527);
      return G__6525__delegate(x, y, more);
    };
    G__6525.cljs$core$IFn$_invoke$arity$variadic = G__6525__delegate;
    return G__6525;
  }();
  cljs$core$min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$min__1.call(this, x);
      case 2:
        return cljs$core$min__2.call(this, x, y);
      default:
        var G__6528 = null;
        if (arguments.length > 2) {
          var G__6529__i = 0, G__6529__a = new Array(arguments.length - 2);
          while (G__6529__i < G__6529__a.length) {
            G__6529__a[G__6529__i] = arguments[G__6529__i + 2];
            ++G__6529__i;
          }
          G__6528 = new cljs.core.IndexedSeq(G__6529__a, 0);
        }
        return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6528);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$min.cljs$lang$maxFixedArity = 2;
  cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
  cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
  cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
  cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$min;
}();
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var cljs$core$unchecked_add = null;
  var cljs$core$unchecked_add__0 = function() {
    return 0;
  };
  var cljs$core$unchecked_add__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var cljs$core$unchecked_add__3 = function() {
    var G__6530__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add, x + y, more);
    };
    var G__6530 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6531__i = 0, G__6531__a = new Array(arguments.length - 2);
        while (G__6531__i < G__6531__a.length) {
          G__6531__a[G__6531__i] = arguments[G__6531__i + 2];
          ++G__6531__i;
        }
        more = new cljs.core.IndexedSeq(G__6531__a, 0);
      }
      return G__6530__delegate.call(this, x, y, more);
    };
    G__6530.cljs$lang$maxFixedArity = 2;
    G__6530.cljs$lang$applyTo = function(arglist__6532) {
      var x = cljs.core.first(arglist__6532);
      arglist__6532 = cljs.core.next(arglist__6532);
      var y = cljs.core.first(arglist__6532);
      var more = cljs.core.rest(arglist__6532);
      return G__6530__delegate(x, y, more);
    };
    G__6530.cljs$core$IFn$_invoke$arity$variadic = G__6530__delegate;
    return G__6530;
  }();
  cljs$core$unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_add__0.call(this);
      case 1:
        return cljs$core$unchecked_add__1.call(this, x);
      case 2:
        return cljs$core$unchecked_add__2.call(this, x, y);
      default:
        var G__6533 = null;
        if (arguments.length > 2) {
          var G__6534__i = 0, G__6534__a = new Array(arguments.length - 2);
          while (G__6534__i < G__6534__a.length) {
            G__6534__a[G__6534__i] = arguments[G__6534__i + 2];
            ++G__6534__i;
          }
          G__6533 = new cljs.core.IndexedSeq(G__6534__a, 0);
        }
        return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6533);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var cljs$core$unchecked_add_int = null;
  var cljs$core$unchecked_add_int__0 = function() {
    return 0;
  };
  var cljs$core$unchecked_add_int__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var cljs$core$unchecked_add_int__3 = function() {
    var G__6535__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int, x + y, more);
    };
    var G__6535 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6536__i = 0, G__6536__a = new Array(arguments.length - 2);
        while (G__6536__i < G__6536__a.length) {
          G__6536__a[G__6536__i] = arguments[G__6536__i + 2];
          ++G__6536__i;
        }
        more = new cljs.core.IndexedSeq(G__6536__a, 0);
      }
      return G__6535__delegate.call(this, x, y, more);
    };
    G__6535.cljs$lang$maxFixedArity = 2;
    G__6535.cljs$lang$applyTo = function(arglist__6537) {
      var x = cljs.core.first(arglist__6537);
      arglist__6537 = cljs.core.next(arglist__6537);
      var y = cljs.core.first(arglist__6537);
      var more = cljs.core.rest(arglist__6537);
      return G__6535__delegate(x, y, more);
    };
    G__6535.cljs$core$IFn$_invoke$arity$variadic = G__6535__delegate;
    return G__6535;
  }();
  cljs$core$unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_add_int__0.call(this);
      case 1:
        return cljs$core$unchecked_add_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_add_int__2.call(this, x, y);
      default:
        var G__6538 = null;
        if (arguments.length > 2) {
          var G__6539__i = 0, G__6539__a = new Array(arguments.length - 2);
          while (G__6539__i < G__6539__a.length) {
            G__6539__a[G__6539__i] = arguments[G__6539__i + 2];
            ++G__6539__i;
          }
          G__6538 = new cljs.core.IndexedSeq(G__6539__a, 0);
        }
        return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6538);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_add_int;
}();
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var cljs$core$unchecked_divide_int = null;
  var cljs$core$unchecked_divide_int__1 = function(x) {
    return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var cljs$core$unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var cljs$core$unchecked_divide_int__3 = function() {
    var G__6544__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int, cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6544 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6545__i = 0, G__6545__a = new Array(arguments.length - 2);
        while (G__6545__i < G__6545__a.length) {
          G__6545__a[G__6545__i] = arguments[G__6545__i + 2];
          ++G__6545__i;
        }
        more = new cljs.core.IndexedSeq(G__6545__a, 0);
      }
      return G__6544__delegate.call(this, x, y, more);
    };
    G__6544.cljs$lang$maxFixedArity = 2;
    G__6544.cljs$lang$applyTo = function(arglist__6546) {
      var x = cljs.core.first(arglist__6546);
      arglist__6546 = cljs.core.next(arglist__6546);
      var y = cljs.core.first(arglist__6546);
      var more = cljs.core.rest(arglist__6546);
      return G__6544__delegate(x, y, more);
    };
    G__6544.cljs$core$IFn$_invoke$arity$variadic = G__6544__delegate;
    return G__6544;
  }();
  cljs$core$unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_divide_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_divide_int__2.call(this, x, y);
      default:
        var G__6547 = null;
        if (arguments.length > 2) {
          var G__6548__i = 0, G__6548__a = new Array(arguments.length - 2);
          while (G__6548__i < G__6548__a.length) {
            G__6548__a[G__6548__i] = arguments[G__6548__i + 2];
            ++G__6548__i;
          }
          G__6547 = new cljs.core.IndexedSeq(G__6548__a, 0);
        }
        return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6547);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_divide_int;
}();
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var cljs$core$unchecked_multiply = null;
  var cljs$core$unchecked_multiply__0 = function() {
    return 1;
  };
  var cljs$core$unchecked_multiply__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var cljs$core$unchecked_multiply__3 = function() {
    var G__6549__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply, x * y, more);
    };
    var G__6549 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6550__i = 0, G__6550__a = new Array(arguments.length - 2);
        while (G__6550__i < G__6550__a.length) {
          G__6550__a[G__6550__i] = arguments[G__6550__i + 2];
          ++G__6550__i;
        }
        more = new cljs.core.IndexedSeq(G__6550__a, 0);
      }
      return G__6549__delegate.call(this, x, y, more);
    };
    G__6549.cljs$lang$maxFixedArity = 2;
    G__6549.cljs$lang$applyTo = function(arglist__6551) {
      var x = cljs.core.first(arglist__6551);
      arglist__6551 = cljs.core.next(arglist__6551);
      var y = cljs.core.first(arglist__6551);
      var more = cljs.core.rest(arglist__6551);
      return G__6549__delegate(x, y, more);
    };
    G__6549.cljs$core$IFn$_invoke$arity$variadic = G__6549__delegate;
    return G__6549;
  }();
  cljs$core$unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_multiply__0.call(this);
      case 1:
        return cljs$core$unchecked_multiply__1.call(this, x);
      case 2:
        return cljs$core$unchecked_multiply__2.call(this, x, y);
      default:
        var G__6552 = null;
        if (arguments.length > 2) {
          var G__6553__i = 0, G__6553__a = new Array(arguments.length - 2);
          while (G__6553__i < G__6553__a.length) {
            G__6553__a[G__6553__i] = arguments[G__6553__i + 2];
            ++G__6553__i;
          }
          G__6552 = new cljs.core.IndexedSeq(G__6553__a, 0);
        }
        return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6552);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var cljs$core$unchecked_multiply_int = null;
  var cljs$core$unchecked_multiply_int__0 = function() {
    return 1;
  };
  var cljs$core$unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var cljs$core$unchecked_multiply_int__3 = function() {
    var G__6554__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int, x * y, more);
    };
    var G__6554 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6555__i = 0, G__6555__a = new Array(arguments.length - 2);
        while (G__6555__i < G__6555__a.length) {
          G__6555__a[G__6555__i] = arguments[G__6555__i + 2];
          ++G__6555__i;
        }
        more = new cljs.core.IndexedSeq(G__6555__a, 0);
      }
      return G__6554__delegate.call(this, x, y, more);
    };
    G__6554.cljs$lang$maxFixedArity = 2;
    G__6554.cljs$lang$applyTo = function(arglist__6556) {
      var x = cljs.core.first(arglist__6556);
      arglist__6556 = cljs.core.next(arglist__6556);
      var y = cljs.core.first(arglist__6556);
      var more = cljs.core.rest(arglist__6556);
      return G__6554__delegate(x, y, more);
    };
    G__6554.cljs$core$IFn$_invoke$arity$variadic = G__6554__delegate;
    return G__6554;
  }();
  cljs$core$unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_multiply_int__0.call(this);
      case 1:
        return cljs$core$unchecked_multiply_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__6557 = null;
        if (arguments.length > 2) {
          var G__6558__i = 0, G__6558__a = new Array(arguments.length - 2);
          while (G__6558__i < G__6558__a.length) {
            G__6558__a[G__6558__i] = arguments[G__6558__i + 2];
            ++G__6558__i;
          }
          G__6557 = new cljs.core.IndexedSeq(G__6558__a, 0);
        }
        return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6557);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__6561 = x;
  var G__6562 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6561, G__6562) : cljs.core.mod.call(null, G__6561, G__6562);
};
cljs.core.unchecked_subtract = function() {
  var cljs$core$unchecked_subtract = null;
  var cljs$core$unchecked_subtract__1 = function(x) {
    return-x;
  };
  var cljs$core$unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var cljs$core$unchecked_subtract__3 = function() {
    var G__6563__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract, x - y, more);
    };
    var G__6563 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6564__i = 0, G__6564__a = new Array(arguments.length - 2);
        while (G__6564__i < G__6564__a.length) {
          G__6564__a[G__6564__i] = arguments[G__6564__i + 2];
          ++G__6564__i;
        }
        more = new cljs.core.IndexedSeq(G__6564__a, 0);
      }
      return G__6563__delegate.call(this, x, y, more);
    };
    G__6563.cljs$lang$maxFixedArity = 2;
    G__6563.cljs$lang$applyTo = function(arglist__6565) {
      var x = cljs.core.first(arglist__6565);
      arglist__6565 = cljs.core.next(arglist__6565);
      var y = cljs.core.first(arglist__6565);
      var more = cljs.core.rest(arglist__6565);
      return G__6563__delegate(x, y, more);
    };
    G__6563.cljs$core$IFn$_invoke$arity$variadic = G__6563__delegate;
    return G__6563;
  }();
  cljs$core$unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_subtract__1.call(this, x);
      case 2:
        return cljs$core$unchecked_subtract__2.call(this, x, y);
      default:
        var G__6566 = null;
        if (arguments.length > 2) {
          var G__6567__i = 0, G__6567__a = new Array(arguments.length - 2);
          while (G__6567__i < G__6567__a.length) {
            G__6567__a[G__6567__i] = arguments[G__6567__i + 2];
            ++G__6567__i;
          }
          G__6566 = new cljs.core.IndexedSeq(G__6567__a, 0);
        }
        return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6566);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var cljs$core$unchecked_subtract_int = null;
  var cljs$core$unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var cljs$core$unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var cljs$core$unchecked_subtract_int__3 = function() {
    var G__6568__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int, x - y, more);
    };
    var G__6568 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6569__i = 0, G__6569__a = new Array(arguments.length - 2);
        while (G__6569__i < G__6569__a.length) {
          G__6569__a[G__6569__i] = arguments[G__6569__i + 2];
          ++G__6569__i;
        }
        more = new cljs.core.IndexedSeq(G__6569__a, 0);
      }
      return G__6568__delegate.call(this, x, y, more);
    };
    G__6568.cljs$lang$maxFixedArity = 2;
    G__6568.cljs$lang$applyTo = function(arglist__6570) {
      var x = cljs.core.first(arglist__6570);
      arglist__6570 = cljs.core.next(arglist__6570);
      var y = cljs.core.first(arglist__6570);
      var more = cljs.core.rest(arglist__6570);
      return G__6568__delegate(x, y, more);
    };
    G__6568.cljs$core$IFn$_invoke$arity$variadic = G__6568__delegate;
    return G__6568;
  }();
  cljs$core$unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_subtract_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__6571 = null;
        if (arguments.length > 2) {
          var G__6572__i = 0, G__6572__a = new Array(arguments.length - 2);
          while (G__6572__i < G__6572__a.length) {
            G__6572__a[G__6572__i] = arguments[G__6572__i + 2];
            ++G__6572__i;
          }
          G__6571 = new cljs.core.IndexedSeq(G__6572__a, 0);
        }
        return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6571);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_subtract_int;
}();
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__6575 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6575) : Math.floor.call(null, G__6575);
  } else {
    var G__6576 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6576) : Math.ceil.call(null, G__6576);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var cljs$core$bit_xor = null;
  var cljs$core$bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var cljs$core$bit_xor__3 = function() {
    var G__6577__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor, x ^ y, more);
    };
    var G__6577 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6578__i = 0, G__6578__a = new Array(arguments.length - 2);
        while (G__6578__i < G__6578__a.length) {
          G__6578__a[G__6578__i] = arguments[G__6578__i + 2];
          ++G__6578__i;
        }
        more = new cljs.core.IndexedSeq(G__6578__a, 0);
      }
      return G__6577__delegate.call(this, x, y, more);
    };
    G__6577.cljs$lang$maxFixedArity = 2;
    G__6577.cljs$lang$applyTo = function(arglist__6579) {
      var x = cljs.core.first(arglist__6579);
      arglist__6579 = cljs.core.next(arglist__6579);
      var y = cljs.core.first(arglist__6579);
      var more = cljs.core.rest(arglist__6579);
      return G__6577__delegate(x, y, more);
    };
    G__6577.cljs$core$IFn$_invoke$arity$variadic = G__6577__delegate;
    return G__6577;
  }();
  cljs$core$bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_xor__2.call(this, x, y);
      default:
        var G__6580 = null;
        if (arguments.length > 2) {
          var G__6581__i = 0, G__6581__a = new Array(arguments.length - 2);
          while (G__6581__i < G__6581__a.length) {
            G__6581__a[G__6581__i] = arguments[G__6581__i + 2];
            ++G__6581__i;
          }
          G__6580 = new cljs.core.IndexedSeq(G__6581__a, 0);
        }
        return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6580);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
  cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
  cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_xor;
}();
cljs.core.bit_and = function() {
  var cljs$core$bit_and = null;
  var cljs$core$bit_and__2 = function(x, y) {
    return x & y;
  };
  var cljs$core$bit_and__3 = function() {
    var G__6582__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and, x & y, more);
    };
    var G__6582 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6583__i = 0, G__6583__a = new Array(arguments.length - 2);
        while (G__6583__i < G__6583__a.length) {
          G__6583__a[G__6583__i] = arguments[G__6583__i + 2];
          ++G__6583__i;
        }
        more = new cljs.core.IndexedSeq(G__6583__a, 0);
      }
      return G__6582__delegate.call(this, x, y, more);
    };
    G__6582.cljs$lang$maxFixedArity = 2;
    G__6582.cljs$lang$applyTo = function(arglist__6584) {
      var x = cljs.core.first(arglist__6584);
      arglist__6584 = cljs.core.next(arglist__6584);
      var y = cljs.core.first(arglist__6584);
      var more = cljs.core.rest(arglist__6584);
      return G__6582__delegate(x, y, more);
    };
    G__6582.cljs$core$IFn$_invoke$arity$variadic = G__6582__delegate;
    return G__6582;
  }();
  cljs$core$bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_and__2.call(this, x, y);
      default:
        var G__6585 = null;
        if (arguments.length > 2) {
          var G__6586__i = 0, G__6586__a = new Array(arguments.length - 2);
          while (G__6586__i < G__6586__a.length) {
            G__6586__a[G__6586__i] = arguments[G__6586__i + 2];
            ++G__6586__i;
          }
          G__6585 = new cljs.core.IndexedSeq(G__6586__a, 0);
        }
        return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6585);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
  cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
  cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_and;
}();
cljs.core.bit_or = function() {
  var cljs$core$bit_or = null;
  var cljs$core$bit_or__2 = function(x, y) {
    return x | y;
  };
  var cljs$core$bit_or__3 = function() {
    var G__6587__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or, x | y, more);
    };
    var G__6587 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6588__i = 0, G__6588__a = new Array(arguments.length - 2);
        while (G__6588__i < G__6588__a.length) {
          G__6588__a[G__6588__i] = arguments[G__6588__i + 2];
          ++G__6588__i;
        }
        more = new cljs.core.IndexedSeq(G__6588__a, 0);
      }
      return G__6587__delegate.call(this, x, y, more);
    };
    G__6587.cljs$lang$maxFixedArity = 2;
    G__6587.cljs$lang$applyTo = function(arglist__6589) {
      var x = cljs.core.first(arglist__6589);
      arglist__6589 = cljs.core.next(arglist__6589);
      var y = cljs.core.first(arglist__6589);
      var more = cljs.core.rest(arglist__6589);
      return G__6587__delegate(x, y, more);
    };
    G__6587.cljs$core$IFn$_invoke$arity$variadic = G__6587__delegate;
    return G__6587;
  }();
  cljs$core$bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_or__2.call(this, x, y);
      default:
        var G__6590 = null;
        if (arguments.length > 2) {
          var G__6591__i = 0, G__6591__a = new Array(arguments.length - 2);
          while (G__6591__i < G__6591__a.length) {
            G__6591__a[G__6591__i] = arguments[G__6591__i + 2];
            ++G__6591__i;
          }
          G__6590 = new cljs.core.IndexedSeq(G__6591__a, 0);
        }
        return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6590);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
  cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
  cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_or;
}();
cljs.core.bit_and_not = function() {
  var cljs$core$bit_and_not = null;
  var cljs$core$bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var cljs$core$bit_and_not__3 = function() {
    var G__6592__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not, x & ~y, more);
    };
    var G__6592 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6593__i = 0, G__6593__a = new Array(arguments.length - 2);
        while (G__6593__i < G__6593__a.length) {
          G__6593__a[G__6593__i] = arguments[G__6593__i + 2];
          ++G__6593__i;
        }
        more = new cljs.core.IndexedSeq(G__6593__a, 0);
      }
      return G__6592__delegate.call(this, x, y, more);
    };
    G__6592.cljs$lang$maxFixedArity = 2;
    G__6592.cljs$lang$applyTo = function(arglist__6594) {
      var x = cljs.core.first(arglist__6594);
      arglist__6594 = cljs.core.next(arglist__6594);
      var y = cljs.core.first(arglist__6594);
      var more = cljs.core.rest(arglist__6594);
      return G__6592__delegate(x, y, more);
    };
    G__6592.cljs$core$IFn$_invoke$arity$variadic = G__6592__delegate;
    return G__6592;
  }();
  cljs$core$bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_and_not__2.call(this, x, y);
      default:
        var G__6595 = null;
        if (arguments.length > 2) {
          var G__6596__i = 0, G__6596__a = new Array(arguments.length - 2);
          while (G__6596__i < G__6596__a.length) {
            G__6596__a[G__6596__i] = arguments[G__6596__i + 2];
            ++G__6596__i;
          }
          G__6595 = new cljs.core.IndexedSeq(G__6596__a, 0);
        }
        return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6595);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
  cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
  cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_and_not;
}();
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var cljs$core$_EQ__EQ_ = null;
  var cljs$core$_EQ__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var cljs$core$_EQ__EQ___3 = function() {
    var G__6601__delegate = function(x, y, more) {
      while (true) {
        if (cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__6602 = y;
            var G__6603 = cljs.core.first(more);
            var G__6604 = cljs.core.next(more);
            x = G__6602;
            y = G__6603;
            more = G__6604;
            continue;
          } else {
            return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6601 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6605__i = 0, G__6605__a = new Array(arguments.length - 2);
        while (G__6605__i < G__6605__a.length) {
          G__6605__a[G__6605__i] = arguments[G__6605__i + 2];
          ++G__6605__i;
        }
        more = new cljs.core.IndexedSeq(G__6605__a, 0);
      }
      return G__6601__delegate.call(this, x, y, more);
    };
    G__6601.cljs$lang$maxFixedArity = 2;
    G__6601.cljs$lang$applyTo = function(arglist__6606) {
      var x = cljs.core.first(arglist__6606);
      arglist__6606 = cljs.core.next(arglist__6606);
      var y = cljs.core.first(arglist__6606);
      var more = cljs.core.rest(arglist__6606);
      return G__6601__delegate(x, y, more);
    };
    G__6601.cljs$core$IFn$_invoke$arity$variadic = G__6601__delegate;
    return G__6601;
  }();
  cljs$core$_EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_EQ__EQ___1.call(this, x);
      case 2:
        return cljs$core$_EQ__EQ___2.call(this, x, y);
      default:
        var G__6607 = null;
        if (arguments.length > 2) {
          var G__6608__i = 0, G__6608__a = new Array(arguments.length - 2);
          while (G__6608__i < G__6608__a.length) {
            G__6608__a[G__6608__i] = arguments[G__6608__i + 2];
            ++G__6608__i;
          }
          G__6607 = new cljs.core.IndexedSeq(G__6608__a, 0);
        }
        return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6607);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6609 = n__$1 - 1;
      var G__6610 = cljs.core.next(xs);
      n__$1 = G__6609;
      xs = G__6610;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var cljs$core$str = null;
  var cljs$core$str__0 = function() {
    return "";
  };
  var cljs$core$str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__6614 = x;
      return goog.string.buildString(G__6614);
    }
  };
  var cljs$core$str__2 = function() {
    var G__6615__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6616 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__6617 = cljs.core.next(more);
          sb = G__6616;
          more = G__6617;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6615 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__6618__i = 0, G__6618__a = new Array(arguments.length - 1);
        while (G__6618__i < G__6618__a.length) {
          G__6618__a[G__6618__i] = arguments[G__6618__i + 1];
          ++G__6618__i;
        }
        ys = new cljs.core.IndexedSeq(G__6618__a, 0);
      }
      return G__6615__delegate.call(this, x, ys);
    };
    G__6615.cljs$lang$maxFixedArity = 1;
    G__6615.cljs$lang$applyTo = function(arglist__6619) {
      var x = cljs.core.first(arglist__6619);
      var ys = cljs.core.rest(arglist__6619);
      return G__6615__delegate(x, ys);
    };
    G__6615.cljs$core$IFn$_invoke$arity$variadic = G__6615__delegate;
    return G__6615;
  }();
  cljs$core$str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$str__0.call(this);
      case 1:
        return cljs$core$str__1.call(this, x);
      default:
        var G__6620 = null;
        if (arguments.length > 1) {
          var G__6621__i = 0, G__6621__a = new Array(arguments.length - 1);
          while (G__6621__i < G__6621__a.length) {
            G__6621__a[G__6621__i] = arguments[G__6621__i + 1];
            ++G__6621__i;
          }
          G__6620 = new cljs.core.IndexedSeq(G__6621__a, 0);
        }
        return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6620);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$str.cljs$lang$maxFixedArity = 1;
  cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
  cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
  cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
  cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$str;
}();
cljs.core.subs = function() {
  var cljs$core$subs = null;
  var cljs$core$subs__2 = function(s, start) {
    return s.substring(start);
  };
  var cljs$core$subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  cljs$core$subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return cljs$core$subs__2.call(this, s, start);
      case 3:
        return cljs$core$subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
  cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
  return cljs$core$subs;
}();
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__6622 = cljs.core.next(xs);
            var G__6623 = cljs.core.next(ys);
            xs = G__6622;
            ys = G__6623;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6624 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__6625 = cljs.core.next(s);
        res = G__6624;
        s = G__6625;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__6630 = (h + (cljs.core.hash(function() {
        var G__6628 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6628) : cljs.core.key.call(null, G__6628);
      }()) ^ cljs.core.hash(function() {
        var G__6629 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6629) : cljs.core.val.call(null, G__6629);
      }()))) % 4503599627370496;
      var G__6631 = cljs.core.next(s);
      h = G__6630;
      s = G__6631;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__6632 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__6633 = cljs.core.next(s__$1);
      h = G__6632;
      s__$1 = G__6633;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__6644_6654 = cljs.core.seq(fn_map);
  var chunk__6645_6655 = null;
  var count__6646_6656 = 0;
  var i__6647_6657 = 0;
  while (true) {
    if (i__6647_6657 < count__6646_6656) {
      var vec__6648_6658 = chunk__6645_6655.cljs$core$IIndexed$_nth$arity$2(null, i__6647_6657);
      var key_name_6659 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6648_6658, 0, null);
      var f_6660 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6648_6658, 1, null);
      var str_name_6661 = function() {
        var G__6649 = key_name_6659;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6649) : cljs.core.name.call(null, G__6649);
      }();
      obj[str_name_6661] = f_6660;
      var G__6662 = seq__6644_6654;
      var G__6663 = chunk__6645_6655;
      var G__6664 = count__6646_6656;
      var G__6665 = i__6647_6657 + 1;
      seq__6644_6654 = G__6662;
      chunk__6645_6655 = G__6663;
      count__6646_6656 = G__6664;
      i__6647_6657 = G__6665;
      continue;
    } else {
      var temp__4126__auto___6666 = cljs.core.seq(seq__6644_6654);
      if (temp__4126__auto___6666) {
        var seq__6644_6667__$1 = temp__4126__auto___6666;
        if (cljs.core.chunked_seq_QMARK_(seq__6644_6667__$1)) {
          var c__4859__auto___6668 = function() {
            var G__6650 = seq__6644_6667__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6650) : cljs.core.chunk_first.call(null, G__6650);
          }();
          var G__6669 = function() {
            var G__6651 = seq__6644_6667__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6651) : cljs.core.chunk_rest.call(null, G__6651);
          }();
          var G__6670 = c__4859__auto___6668;
          var G__6671 = cljs.core.count(c__4859__auto___6668);
          var G__6672 = 0;
          seq__6644_6654 = G__6669;
          chunk__6645_6655 = G__6670;
          count__6646_6656 = G__6671;
          i__6647_6657 = G__6672;
          continue;
        } else {
          var vec__6652_6673 = cljs.core.first(seq__6644_6667__$1);
          var key_name_6674 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6652_6673, 0, null);
          var f_6675 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6652_6673, 1, null);
          var str_name_6676 = function() {
            var G__6653 = key_name_6674;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6653) : cljs.core.name.call(null, G__6653);
          }();
          obj[str_name_6676] = f_6675;
          var G__6677 = cljs.core.next(seq__6644_6667__$1);
          var G__6678 = null;
          var G__6679 = 0;
          var G__6680 = 0;
          seq__6644_6654 = G__6677;
          chunk__6645_6655 = G__6678;
          count__6646_6656 = G__6679;
          i__6647_6657 = G__6680;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__6682 = coll;
  if (G__6682) {
    var bit__4753__auto__ = G__6682.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4753__auto__ || G__6682.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6682.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6682);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6682);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var cljs$core$list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__6683 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__6683;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6684 = i - 1;
        var G__6685 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__6684;
        r = G__6685;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var cljs$core$list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__6686__i = 0, G__6686__a = new Array(arguments.length - 0);
      while (G__6686__i < G__6686__a.length) {
        G__6686__a[G__6686__i] = arguments[G__6686__i + 0];
        ++G__6686__i;
      }
      xs = new cljs.core.IndexedSeq(G__6686__a, 0);
    }
    return cljs$core$list__delegate.call(this, xs);
  };
  cljs$core$list.cljs$lang$maxFixedArity = 0;
  cljs$core$list.cljs$lang$applyTo = function(arglist__6687) {
    var xs = cljs.core.seq(arglist__6687);
    return cljs$core$list__delegate(xs);
  };
  cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
  return cljs$core$list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4072__auto__ = coll == null;
    if (or__4072__auto__) {
      return or__4072__auto__;
    } else {
      var G__6691 = coll;
      if (G__6691) {
        var bit__4746__auto__ = G__6691.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4746__auto__ || G__6691.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__6693 = x;
  if (G__6693) {
    var bit__4753__auto__ = G__6693.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4753__auto__ || G__6693.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6693.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6693);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6693);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4060__auto__ = cljs.core.not(a.ns);
      if (and__4060__auto__) {
        return b.ns;
      } else {
        return and__4060__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6700 = a.ns;
            var G__6701 = b.ns;
            return goog.array.defaultCompare(G__6700, G__6701);
          }();
          if (0 === nsc) {
            var G__6702 = a.name;
            var G__6703 = b.name;
            return goog.array.defaultCompare(G__6702, G__6703);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6704 = a.name;
        var G__6705 = b.name;
        return goog.array.defaultCompare(G__6704, G__6705);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4493__auto__ = self__._hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6707 = null;
  var G__6707__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__6707__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__6707 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6707__2.call(this, self__, coll);
      case 3:
        return G__6707__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6707.cljs$core$IFn$_invoke$arity$2 = G__6707__2;
  G__6707.cljs$core$IFn$_invoke$arity$3 = G__6707__3;
  return G__6707;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6706) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6706)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__6709 = x;
    if (G__6709) {
      var bit__4746__auto__ = G__6709.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4746__auto__ || G__6709.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var cljs$core$keyword = null;
  var cljs$core$keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__6711 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6711) : cljs.core.name.call(null, G__6711);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var cljs$core$keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  cljs$core$keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keyword__1.call(this, ns);
      case 2:
        return cljs$core$keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
  cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
  return cljs$core$keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6712 = ls.sval();
        ls = G__6712;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var cljs$core$array_chunk = null;
  var cljs$core$array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var cljs$core$array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var cljs$core$array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  cljs$core$array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return cljs$core$array_chunk__1.call(this, arr);
      case 2:
        return cljs$core$array_chunk__2.call(this, arr, off);
      case 3:
        return cljs$core$array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
  return cljs$core$array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__6714 = s;
    if (G__6714) {
      var bit__4746__auto__ = G__6714.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4746__auto__ || G__6714.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__6715 = cljs.core.next(s__$1);
      s__$1 = G__6715;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_6716 = 0;
  var xs_6717 = cljs.core.seq(coll);
  while (true) {
    if (xs_6717) {
      ret[i_6716] = cljs.core.to_array(cljs.core.first(xs_6717));
      var G__6718 = i_6716 + 1;
      var G__6719 = cljs.core.next(xs_6717);
      i_6716 = G__6718;
      xs_6717 = G__6719;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var cljs$core$int_array = null;
  var cljs$core$int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6722 = i + 1;
          var G__6723 = cljs.core.next(s__$1);
          i = G__6722;
          s__$1 = G__6723;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4959__auto___6724 = size;
      var i_6725 = 0;
      while (true) {
        if (i_6725 < n__4959__auto___6724) {
          a[i_6725] = init_val_or_seq;
          var G__6726 = i_6725 + 1;
          i_6725 = G__6726;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$int_array__1.call(this, size);
      case 2:
        return cljs$core$int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
  cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
  return cljs$core$int_array;
}();
cljs.core.long_array = function() {
  var cljs$core$long_array = null;
  var cljs$core$long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6729 = i + 1;
          var G__6730 = cljs.core.next(s__$1);
          i = G__6729;
          s__$1 = G__6730;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4959__auto___6731 = size;
      var i_6732 = 0;
      while (true) {
        if (i_6732 < n__4959__auto___6731) {
          a[i_6732] = init_val_or_seq;
          var G__6733 = i_6732 + 1;
          i_6732 = G__6733;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$long_array__1.call(this, size);
      case 2:
        return cljs$core$long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
  cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
  return cljs$core$long_array;
}();
cljs.core.double_array = function() {
  var cljs$core$double_array = null;
  var cljs$core$double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6736 = i + 1;
          var G__6737 = cljs.core.next(s__$1);
          i = G__6736;
          s__$1 = G__6737;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4959__auto___6738 = size;
      var i_6739 = 0;
      while (true) {
        if (i_6739 < n__4959__auto___6738) {
          a[i_6739] = init_val_or_seq;
          var G__6740 = i_6739 + 1;
          i_6739 = G__6740;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$double_array__1.call(this, size);
      case 2:
        return cljs$core$double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
  cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
  return cljs$core$double_array;
}();
cljs.core.object_array = function() {
  var cljs$core$object_array = null;
  var cljs$core$object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6743 = i + 1;
          var G__6744 = cljs.core.next(s__$1);
          i = G__6743;
          s__$1 = G__6744;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4959__auto___6745 = size;
      var i_6746 = 0;
      while (true) {
        if (i_6746 < n__4959__auto___6745) {
          a[i_6746] = init_val_or_seq;
          var G__6747 = i_6746 + 1;
          i_6746 = G__6747;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$object_array__1.call(this, size);
      case 2:
        return cljs$core$object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
  cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
  return cljs$core$object_array;
}();
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__6748 = cljs.core.next(s__$1);
        var G__6749 = i - 1;
        var G__6750 = sum + 1;
        s__$1 = G__6748;
        i = G__6749;
        sum = G__6750;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var cljs$core$concat = null;
  var cljs$core$concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var cljs$core$concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var cljs$core$concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var cljs$core$concat__3 = function() {
    var G__6770__delegate = function(x, y, zs) {
      var cat = function cljs$core$concat_$_cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$concat_$_cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cljs$core$concat_$_cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__6770 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__6771__i = 0, G__6771__a = new Array(arguments.length - 2);
        while (G__6771__i < G__6771__a.length) {
          G__6771__a[G__6771__i] = arguments[G__6771__i + 2];
          ++G__6771__i;
        }
        zs = new cljs.core.IndexedSeq(G__6771__a, 0);
      }
      return G__6770__delegate.call(this, x, y, zs);
    };
    G__6770.cljs$lang$maxFixedArity = 2;
    G__6770.cljs$lang$applyTo = function(arglist__6772) {
      var x = cljs.core.first(arglist__6772);
      arglist__6772 = cljs.core.next(arglist__6772);
      var y = cljs.core.first(arglist__6772);
      var zs = cljs.core.rest(arglist__6772);
      return G__6770__delegate(x, y, zs);
    };
    G__6770.cljs$core$IFn$_invoke$arity$variadic = G__6770__delegate;
    return G__6770;
  }();
  cljs$core$concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$concat__0.call(this);
      case 1:
        return cljs$core$concat__1.call(this, x);
      case 2:
        return cljs$core$concat__2.call(this, x, y);
      default:
        var G__6773 = null;
        if (arguments.length > 2) {
          var G__6774__i = 0, G__6774__a = new Array(arguments.length - 2);
          while (G__6774__i < G__6774__a.length) {
            G__6774__a[G__6774__i] = arguments[G__6774__i + 2];
            ++G__6774__i;
          }
          G__6773 = new cljs.core.IndexedSeq(G__6774__a, 0);
        }
        return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6773);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$concat.cljs$lang$maxFixedArity = 2;
  cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$concat;
}();
cljs.core.list_STAR_ = function() {
  var cljs$core$list_STAR_ = null;
  var cljs$core$list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var cljs$core$list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var cljs$core$list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var cljs$core$list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var cljs$core$list_STAR___5 = function() {
    var G__6775__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__6775 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__6776__i = 0, G__6776__a = new Array(arguments.length - 4);
        while (G__6776__i < G__6776__a.length) {
          G__6776__a[G__6776__i] = arguments[G__6776__i + 4];
          ++G__6776__i;
        }
        more = new cljs.core.IndexedSeq(G__6776__a, 0);
      }
      return G__6775__delegate.call(this, a, b, c, d, more);
    };
    G__6775.cljs$lang$maxFixedArity = 4;
    G__6775.cljs$lang$applyTo = function(arglist__6777) {
      var a = cljs.core.first(arglist__6777);
      arglist__6777 = cljs.core.next(arglist__6777);
      var b = cljs.core.first(arglist__6777);
      arglist__6777 = cljs.core.next(arglist__6777);
      var c = cljs.core.first(arglist__6777);
      arglist__6777 = cljs.core.next(arglist__6777);
      var d = cljs.core.first(arglist__6777);
      var more = cljs.core.rest(arglist__6777);
      return G__6775__delegate(a, b, c, d, more);
    };
    G__6775.cljs$core$IFn$_invoke$arity$variadic = G__6775__delegate;
    return G__6775;
  }();
  cljs$core$list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$list_STAR___1.call(this, a);
      case 2:
        return cljs$core$list_STAR___2.call(this, a, b);
      case 3:
        return cljs$core$list_STAR___3.call(this, a, b, c);
      case 4:
        return cljs$core$list_STAR___4.call(this, a, b, c, d);
      default:
        var G__6778 = null;
        if (arguments.length > 4) {
          var G__6779__i = 0, G__6779__a = new Array(arguments.length - 4);
          while (G__6779__i < G__6779__a.length) {
            G__6779__a[G__6779__i] = arguments[G__6779__i + 4];
            ++G__6779__i;
          }
          G__6778 = new cljs.core.IndexedSeq(G__6779__a, 0);
        }
        return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__6778);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
  cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$list_STAR_;
}();
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var cljs$core$conj_BANG_ = null;
  var cljs$core$conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var cljs$core$conj_BANG___1 = function(coll) {
    return coll;
  };
  var cljs$core$conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var cljs$core$conj_BANG___3 = function() {
    var G__6780__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6781 = ntcoll;
          var G__6782 = cljs.core.first(vals);
          var G__6783 = cljs.core.next(vals);
          tcoll = G__6781;
          val = G__6782;
          vals = G__6783;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6780 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__6784__i = 0, G__6784__a = new Array(arguments.length - 2);
        while (G__6784__i < G__6784__a.length) {
          G__6784__a[G__6784__i] = arguments[G__6784__i + 2];
          ++G__6784__i;
        }
        vals = new cljs.core.IndexedSeq(G__6784__a, 0);
      }
      return G__6780__delegate.call(this, tcoll, val, vals);
    };
    G__6780.cljs$lang$maxFixedArity = 2;
    G__6780.cljs$lang$applyTo = function(arglist__6785) {
      var tcoll = cljs.core.first(arglist__6785);
      arglist__6785 = cljs.core.next(arglist__6785);
      var val = cljs.core.first(arglist__6785);
      var vals = cljs.core.rest(arglist__6785);
      return G__6780__delegate(tcoll, val, vals);
    };
    G__6780.cljs$core$IFn$_invoke$arity$variadic = G__6780__delegate;
    return G__6780;
  }();
  cljs$core$conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$conj_BANG___0.call(this);
      case 1:
        return cljs$core$conj_BANG___1.call(this, tcoll);
      case 2:
        return cljs$core$conj_BANG___2.call(this, tcoll, val);
      default:
        var G__6786 = null;
        if (arguments.length > 2) {
          var G__6787__i = 0, G__6787__a = new Array(arguments.length - 2);
          while (G__6787__i < G__6787__a.length) {
            G__6787__a[G__6787__i] = arguments[G__6787__i + 2];
            ++G__6787__i;
          }
          G__6786 = new cljs.core.IndexedSeq(G__6787__a, 0);
        }
        return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__6786);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var cljs$core$assoc_BANG_ = null;
  var cljs$core$assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var cljs$core$assoc_BANG___4 = function() {
    var G__6788__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6789 = ntcoll;
          var G__6790 = cljs.core.first(kvs);
          var G__6791 = cljs.core.second(kvs);
          var G__6792 = cljs.core.nnext(kvs);
          tcoll = G__6789;
          key = G__6790;
          val = G__6791;
          kvs = G__6792;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6788 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__6793__i = 0, G__6793__a = new Array(arguments.length - 3);
        while (G__6793__i < G__6793__a.length) {
          G__6793__a[G__6793__i] = arguments[G__6793__i + 3];
          ++G__6793__i;
        }
        kvs = new cljs.core.IndexedSeq(G__6793__a, 0);
      }
      return G__6788__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6788.cljs$lang$maxFixedArity = 3;
    G__6788.cljs$lang$applyTo = function(arglist__6794) {
      var tcoll = cljs.core.first(arglist__6794);
      arglist__6794 = cljs.core.next(arglist__6794);
      var key = cljs.core.first(arglist__6794);
      arglist__6794 = cljs.core.next(arglist__6794);
      var val = cljs.core.first(arglist__6794);
      var kvs = cljs.core.rest(arglist__6794);
      return G__6788__delegate(tcoll, key, val, kvs);
    };
    G__6788.cljs$core$IFn$_invoke$arity$variadic = G__6788__delegate;
    return G__6788;
  }();
  cljs$core$assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__6795 = null;
        if (arguments.length > 3) {
          var G__6796__i = 0, G__6796__a = new Array(arguments.length - 3);
          while (G__6796__i < G__6796__a.length) {
            G__6796__a[G__6796__i] = arguments[G__6796__i + 3];
            ++G__6796__i;
          }
          G__6795 = new cljs.core.IndexedSeq(G__6796__a, 0);
        }
        return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__6795);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
  cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
  cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
  cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var cljs$core$dissoc_BANG_ = null;
  var cljs$core$dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var cljs$core$dissoc_BANG___3 = function() {
    var G__6797__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6798 = ntcoll;
          var G__6799 = cljs.core.first(ks);
          var G__6800 = cljs.core.next(ks);
          tcoll = G__6798;
          key = G__6799;
          ks = G__6800;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6797 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6801__i = 0, G__6801__a = new Array(arguments.length - 2);
        while (G__6801__i < G__6801__a.length) {
          G__6801__a[G__6801__i] = arguments[G__6801__i + 2];
          ++G__6801__i;
        }
        ks = new cljs.core.IndexedSeq(G__6801__a, 0);
      }
      return G__6797__delegate.call(this, tcoll, key, ks);
    };
    G__6797.cljs$lang$maxFixedArity = 2;
    G__6797.cljs$lang$applyTo = function(arglist__6802) {
      var tcoll = cljs.core.first(arglist__6802);
      arglist__6802 = cljs.core.next(arglist__6802);
      var key = cljs.core.first(arglist__6802);
      var ks = cljs.core.rest(arglist__6802);
      return G__6797__delegate(tcoll, key, ks);
    };
    G__6797.cljs$core$IFn$_invoke$arity$variadic = G__6797__delegate;
    return G__6797;
  }();
  cljs$core$dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__6803 = null;
        if (arguments.length > 2) {
          var G__6804__i = 0, G__6804__a = new Array(arguments.length - 2);
          while (G__6804__i < G__6804__a.length) {
            G__6804__a[G__6804__i] = arguments[G__6804__i + 2];
            ++G__6804__i;
          }
          G__6803 = new cljs.core.IndexedSeq(G__6804__a, 0);
        }
        return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__6803);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
  cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
  cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var cljs$core$disj_BANG_ = null;
  var cljs$core$disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var cljs$core$disj_BANG___3 = function() {
    var G__6805__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6806 = ntcoll;
          var G__6807 = cljs.core.first(vals);
          var G__6808 = cljs.core.next(vals);
          tcoll = G__6806;
          val = G__6807;
          vals = G__6808;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6805 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__6809__i = 0, G__6809__a = new Array(arguments.length - 2);
        while (G__6809__i < G__6809__a.length) {
          G__6809__a[G__6809__i] = arguments[G__6809__i + 2];
          ++G__6809__i;
        }
        vals = new cljs.core.IndexedSeq(G__6809__a, 0);
      }
      return G__6805__delegate.call(this, tcoll, val, vals);
    };
    G__6805.cljs$lang$maxFixedArity = 2;
    G__6805.cljs$lang$applyTo = function(arglist__6810) {
      var tcoll = cljs.core.first(arglist__6810);
      arglist__6810 = cljs.core.next(arglist__6810);
      var val = cljs.core.first(arglist__6810);
      var vals = cljs.core.rest(arglist__6810);
      return G__6805__delegate(tcoll, val, vals);
    };
    G__6805.cljs$core$IFn$_invoke$arity$variadic = G__6805__delegate;
    return G__6805;
  }();
  cljs$core$disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$disj_BANG___2.call(this, tcoll, val);
      default:
        var G__6811 = null;
        if (arguments.length > 2) {
          var G__6812__i = 0, G__6812__a = new Array(arguments.length - 2);
          while (G__6812__i < G__6812__a.length) {
            G__6812__a[G__6812__i] = arguments[G__6812__i + 2];
            ++G__6812__i;
          }
          G__6811 = new cljs.core.IndexedSeq(G__6812__a, 0);
        }
        return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__6811);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
  cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
  cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$disj_BANG_;
}();
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5003 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5003);
      } else {
        var G__7023 = a5003;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7023) : f.call(null, G__7023);
      }
    } else {
      var b5004 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5003, b5004);
        } else {
          var G__7024 = a5003;
          var G__7025 = b5004;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7024, G__7025) : f.call(null, G__7024, G__7025);
        }
      } else {
        var c5005 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5003, b5004, c5005);
          } else {
            var G__7026 = a5003;
            var G__7027 = b5004;
            var G__7028 = c5005;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7026, G__7027, G__7028) : f.call(null, G__7026, G__7027, G__7028);
          }
        } else {
          var d5006 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5003, b5004, c5005, d5006);
            } else {
              var G__7029 = a5003;
              var G__7030 = b5004;
              var G__7031 = c5005;
              var G__7032 = d5006;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7029, G__7030, G__7031, G__7032) : f.call(null, G__7029, G__7030, G__7031, G__7032);
            }
          } else {
            var e5007 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5003, b5004, c5005, d5006, e5007);
              } else {
                var G__7033 = a5003;
                var G__7034 = b5004;
                var G__7035 = c5005;
                var G__7036 = d5006;
                var G__7037 = e5007;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7033, G__7034, G__7035, G__7036, G__7037) : f.call(null, G__7033, G__7034, G__7035, G__7036, G__7037);
              }
            } else {
              var f5008 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5003, b5004, c5005, d5006, e5007, f5008);
                } else {
                  var G__7038 = a5003;
                  var G__7039 = b5004;
                  var G__7040 = c5005;
                  var G__7041 = d5006;
                  var G__7042 = e5007;
                  var G__7043 = f5008;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7038, G__7039, G__7040, G__7041, G__7042, G__7043) : f.call(null, G__7038, G__7039, G__7040, G__7041, G__7042, G__7043);
                }
              } else {
                var g5009 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5003, b5004, c5005, d5006, e5007, f5008, g5009);
                  } else {
                    var G__7044 = a5003;
                    var G__7045 = b5004;
                    var G__7046 = c5005;
                    var G__7047 = d5006;
                    var G__7048 = e5007;
                    var G__7049 = f5008;
                    var G__7050 = g5009;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7044, G__7045, G__7046, G__7047, G__7048, G__7049, G__7050) : f.call(null, G__7044, G__7045, G__7046, G__7047, G__7048, G__7049, G__7050);
                  }
                } else {
                  var h5010 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010);
                    } else {
                      var G__7051 = a5003;
                      var G__7052 = b5004;
                      var G__7053 = c5005;
                      var G__7054 = d5006;
                      var G__7055 = e5007;
                      var G__7056 = f5008;
                      var G__7057 = g5009;
                      var G__7058 = h5010;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7051, G__7052, G__7053, G__7054, G__7055, G__7056, G__7057, G__7058) : f.call(null, G__7051, G__7052, G__7053, G__7054, G__7055, G__7056, G__7057, G__7058);
                    }
                  } else {
                    var i5011 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011);
                      } else {
                        var G__7059 = a5003;
                        var G__7060 = b5004;
                        var G__7061 = c5005;
                        var G__7062 = d5006;
                        var G__7063 = e5007;
                        var G__7064 = f5008;
                        var G__7065 = g5009;
                        var G__7066 = h5010;
                        var G__7067 = i5011;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7059, G__7060, G__7061, G__7062, G__7063, G__7064, G__7065, G__7066, G__7067) : f.call(null, G__7059, G__7060, G__7061, G__7062, G__7063, G__7064, G__7065, G__7066, G__7067);
                      }
                    } else {
                      var j5012 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012);
                        } else {
                          var G__7068 = a5003;
                          var G__7069 = b5004;
                          var G__7070 = c5005;
                          var G__7071 = d5006;
                          var G__7072 = e5007;
                          var G__7073 = f5008;
                          var G__7074 = g5009;
                          var G__7075 = h5010;
                          var G__7076 = i5011;
                          var G__7077 = j5012;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7068, G__7069, G__7070, G__7071, G__7072, G__7073, G__7074, G__7075, G__7076, G__7077) : f.call(null, G__7068, G__7069, G__7070, G__7071, G__7072, G__7073, G__7074, G__7075, G__7076, G__7077);
                        }
                      } else {
                        var k5013 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013);
                          } else {
                            var G__7078 = a5003;
                            var G__7079 = b5004;
                            var G__7080 = c5005;
                            var G__7081 = d5006;
                            var G__7082 = e5007;
                            var G__7083 = f5008;
                            var G__7084 = g5009;
                            var G__7085 = h5010;
                            var G__7086 = i5011;
                            var G__7087 = j5012;
                            var G__7088 = k5013;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7078, G__7079, G__7080, G__7081, G__7082, G__7083, G__7084, G__7085, G__7086, G__7087, G__7088) : f.call(null, G__7078, G__7079, G__7080, G__7081, G__7082, G__7083, G__7084, G__7085, G__7086, G__7087, G__7088);
                          }
                        } else {
                          var l5014 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014);
                            } else {
                              var G__7089 = a5003;
                              var G__7090 = b5004;
                              var G__7091 = c5005;
                              var G__7092 = d5006;
                              var G__7093 = e5007;
                              var G__7094 = f5008;
                              var G__7095 = g5009;
                              var G__7096 = h5010;
                              var G__7097 = i5011;
                              var G__7098 = j5012;
                              var G__7099 = k5013;
                              var G__7100 = l5014;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7089, G__7090, G__7091, G__7092, G__7093, G__7094, G__7095, G__7096, G__7097, G__7098, G__7099, G__7100) : f.call(null, G__7089, G__7090, G__7091, G__7092, G__7093, G__7094, G__7095, G__7096, G__7097, G__7098, G__7099, G__7100);
                            }
                          } else {
                            var m5015 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015);
                              } else {
                                var G__7101 = a5003;
                                var G__7102 = b5004;
                                var G__7103 = c5005;
                                var G__7104 = d5006;
                                var G__7105 = e5007;
                                var G__7106 = f5008;
                                var G__7107 = g5009;
                                var G__7108 = h5010;
                                var G__7109 = i5011;
                                var G__7110 = j5012;
                                var G__7111 = k5013;
                                var G__7112 = l5014;
                                var G__7113 = m5015;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7101, G__7102, G__7103, G__7104, G__7105, G__7106, G__7107, G__7108, G__7109, G__7110, G__7111, G__7112, G__7113) : f.call(null, G__7101, G__7102, G__7103, G__7104, G__7105, G__7106, G__7107, G__7108, G__7109, G__7110, G__7111, G__7112, G__7113);
                              }
                            } else {
                              var n5016 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015, n5016);
                                } else {
                                  var G__7114 = a5003;
                                  var G__7115 = b5004;
                                  var G__7116 = c5005;
                                  var G__7117 = d5006;
                                  var G__7118 = e5007;
                                  var G__7119 = f5008;
                                  var G__7120 = g5009;
                                  var G__7121 = h5010;
                                  var G__7122 = i5011;
                                  var G__7123 = j5012;
                                  var G__7124 = k5013;
                                  var G__7125 = l5014;
                                  var G__7126 = m5015;
                                  var G__7127 = n5016;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7114, G__7115, G__7116, G__7117, G__7118, G__7119, G__7120, G__7121, G__7122, G__7123, G__7124, G__7125, G__7126, G__7127) : f.call(null, G__7114, G__7115, G__7116, G__7117, G__7118, G__7119, G__7120, G__7121, G__7122, G__7123, G__7124, G__7125, G__7126, G__7127);
                                }
                              } else {
                                var o5017 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015, n5016, o5017);
                                  } else {
                                    var G__7128 = a5003;
                                    var G__7129 = b5004;
                                    var G__7130 = c5005;
                                    var G__7131 = d5006;
                                    var G__7132 = e5007;
                                    var G__7133 = f5008;
                                    var G__7134 = g5009;
                                    var G__7135 = h5010;
                                    var G__7136 = i5011;
                                    var G__7137 = j5012;
                                    var G__7138 = k5013;
                                    var G__7139 = l5014;
                                    var G__7140 = m5015;
                                    var G__7141 = n5016;
                                    var G__7142 = o5017;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7128, G__7129, G__7130, G__7131, G__7132, G__7133, G__7134, G__7135, G__7136, G__7137, G__7138, G__7139, G__7140, G__7141, G__7142) : f.call(null, G__7128, G__7129, G__7130, G__7131, G__7132, G__7133, G__7134, G__7135, G__7136, G__7137, G__7138, G__7139, G__7140, G__7141, G__7142);
                                  }
                                } else {
                                  var p5018 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015, n5016, o5017, p5018);
                                    } else {
                                      var G__7143 = a5003;
                                      var G__7144 = b5004;
                                      var G__7145 = c5005;
                                      var G__7146 = d5006;
                                      var G__7147 = e5007;
                                      var G__7148 = f5008;
                                      var G__7149 = g5009;
                                      var G__7150 = h5010;
                                      var G__7151 = i5011;
                                      var G__7152 = j5012;
                                      var G__7153 = k5013;
                                      var G__7154 = l5014;
                                      var G__7155 = m5015;
                                      var G__7156 = n5016;
                                      var G__7157 = o5017;
                                      var G__7158 = p5018;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7143, G__7144, G__7145, G__7146, G__7147, G__7148, G__7149, G__7150, G__7151, G__7152, G__7153, G__7154, G__7155, G__7156, G__7157, G__7158) : f.call(null, G__7143, G__7144, G__7145, G__7146, G__7147, G__7148, G__7149, G__7150, G__7151, G__7152, G__7153, G__7154, G__7155, G__7156, G__7157, G__7158);
                                    }
                                  } else {
                                    var q5019 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015, n5016, o5017, p5018, q5019);
                                      } else {
                                        var G__7159 = a5003;
                                        var G__7160 = b5004;
                                        var G__7161 = c5005;
                                        var G__7162 = d5006;
                                        var G__7163 = e5007;
                                        var G__7164 = f5008;
                                        var G__7165 = g5009;
                                        var G__7166 = h5010;
                                        var G__7167 = i5011;
                                        var G__7168 = j5012;
                                        var G__7169 = k5013;
                                        var G__7170 = l5014;
                                        var G__7171 = m5015;
                                        var G__7172 = n5016;
                                        var G__7173 = o5017;
                                        var G__7174 = p5018;
                                        var G__7175 = q5019;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7159, G__7160, G__7161, G__7162, G__7163, G__7164, G__7165, G__7166, G__7167, G__7168, G__7169, G__7170, G__7171, G__7172, G__7173, G__7174, G__7175) : f.call(null, G__7159, G__7160, G__7161, G__7162, G__7163, G__7164, G__7165, G__7166, G__7167, G__7168, G__7169, G__7170, G__7171, G__7172, G__7173, G__7174, G__7175);
                                      }
                                    } else {
                                      var r5020 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015, n5016, o5017, p5018, q5019, r5020);
                                        } else {
                                          var G__7176 = a5003;
                                          var G__7177 = b5004;
                                          var G__7178 = c5005;
                                          var G__7179 = d5006;
                                          var G__7180 = e5007;
                                          var G__7181 = f5008;
                                          var G__7182 = g5009;
                                          var G__7183 = h5010;
                                          var G__7184 = i5011;
                                          var G__7185 = j5012;
                                          var G__7186 = k5013;
                                          var G__7187 = l5014;
                                          var G__7188 = m5015;
                                          var G__7189 = n5016;
                                          var G__7190 = o5017;
                                          var G__7191 = p5018;
                                          var G__7192 = q5019;
                                          var G__7193 = r5020;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7176, G__7177, G__7178, G__7179, G__7180, G__7181, G__7182, G__7183, G__7184, G__7185, G__7186, G__7187, G__7188, G__7189, G__7190, G__7191, G__7192, G__7193) : f.call(null, G__7176, G__7177, G__7178, G__7179, G__7180, G__7181, G__7182, G__7183, G__7184, G__7185, G__7186, G__7187, G__7188, G__7189, G__7190, G__7191, G__7192, G__7193);
                                        }
                                      } else {
                                        var s5021 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015, n5016, o5017, p5018, q5019, r5020, s5021);
                                          } else {
                                            var G__7194 = a5003;
                                            var G__7195 = b5004;
                                            var G__7196 = c5005;
                                            var G__7197 = d5006;
                                            var G__7198 = e5007;
                                            var G__7199 = f5008;
                                            var G__7200 = g5009;
                                            var G__7201 = h5010;
                                            var G__7202 = i5011;
                                            var G__7203 = j5012;
                                            var G__7204 = k5013;
                                            var G__7205 = l5014;
                                            var G__7206 = m5015;
                                            var G__7207 = n5016;
                                            var G__7208 = o5017;
                                            var G__7209 = p5018;
                                            var G__7210 = q5019;
                                            var G__7211 = r5020;
                                            var G__7212 = s5021;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7194, G__7195, G__7196, G__7197, G__7198, G__7199, G__7200, G__7201, G__7202, G__7203, G__7204, G__7205, G__7206, G__7207, G__7208, G__7209, G__7210, G__7211, G__7212) : f.call(null, G__7194, G__7195, G__7196, G__7197, G__7198, G__7199, G__7200, G__7201, G__7202, G__7203, G__7204, G__7205, G__7206, G__7207, G__7208, G__7209, G__7210, G__7211, G__7212);
                                          }
                                        } else {
                                          var t5022 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5003, b5004, c5005, d5006, e5007, f5008, g5009, h5010, i5011, j5012, k5013, l5014, m5015, n5016, o5017, p5018, q5019, r5020, s5021, t5022);
                                            } else {
                                              var G__7213 = a5003;
                                              var G__7214 = b5004;
                                              var G__7215 = c5005;
                                              var G__7216 = d5006;
                                              var G__7217 = e5007;
                                              var G__7218 = f5008;
                                              var G__7219 = g5009;
                                              var G__7220 = h5010;
                                              var G__7221 = i5011;
                                              var G__7222 = j5012;
                                              var G__7223 = k5013;
                                              var G__7224 = l5014;
                                              var G__7225 = m5015;
                                              var G__7226 = n5016;
                                              var G__7227 = o5017;
                                              var G__7228 = p5018;
                                              var G__7229 = q5019;
                                              var G__7230 = r5020;
                                              var G__7231 = s5021;
                                              var G__7232 = t5022;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7213, G__7214, G__7215, G__7216, G__7217, G__7218, G__7219, G__7220, G__7221, G__7222, G__7223, G__7224, G__7225, G__7226, G__7227, G__7228, G__7229, G__7230, G__7231, G__7232) : f.call(null, G__7213, G__7214, G__7215, G__7216, G__7217, G__7218, G__7219, G__7220, G__7221, G__7222, G__7223, G__7224, G__7225, G__7226, G__7227, G__7228, G__7229, G__7230, G__7231, G__7232);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var cljs$core$apply = null;
  var cljs$core$apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var cljs$core$apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__6 = function() {
    var G__7233__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__7233 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__7234__i = 0, G__7234__a = new Array(arguments.length - 5);
        while (G__7234__i < G__7234__a.length) {
          G__7234__a[G__7234__i] = arguments[G__7234__i + 5];
          ++G__7234__i;
        }
        args = new cljs.core.IndexedSeq(G__7234__a, 0);
      }
      return G__7233__delegate.call(this, f, a, b, c, d, args);
    };
    G__7233.cljs$lang$maxFixedArity = 5;
    G__7233.cljs$lang$applyTo = function(arglist__7235) {
      var f = cljs.core.first(arglist__7235);
      arglist__7235 = cljs.core.next(arglist__7235);
      var a = cljs.core.first(arglist__7235);
      arglist__7235 = cljs.core.next(arglist__7235);
      var b = cljs.core.first(arglist__7235);
      arglist__7235 = cljs.core.next(arglist__7235);
      var c = cljs.core.first(arglist__7235);
      arglist__7235 = cljs.core.next(arglist__7235);
      var d = cljs.core.first(arglist__7235);
      var args = cljs.core.rest(arglist__7235);
      return G__7233__delegate(f, a, b, c, d, args);
    };
    G__7233.cljs$core$IFn$_invoke$arity$variadic = G__7233__delegate;
    return G__7233;
  }();
  cljs$core$apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$apply__2.call(this, f, a);
      case 3:
        return cljs$core$apply__3.call(this, f, a, b);
      case 4:
        return cljs$core$apply__4.call(this, f, a, b, c);
      case 5:
        return cljs$core$apply__5.call(this, f, a, b, c, d);
      default:
        var G__7236 = null;
        if (arguments.length > 5) {
          var G__7237__i = 0, G__7237__a = new Array(arguments.length - 5);
          while (G__7237__i < G__7237__a.length) {
            G__7237__a[G__7237__i] = arguments[G__7237__i + 5];
            ++G__7237__i;
          }
          G__7236 = new cljs.core.IndexedSeq(G__7237__a, 0);
        }
        return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__7236);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$apply.cljs$lang$maxFixedArity = 5;
  cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$apply;
}();
cljs.core.vary_meta = function() {
  var cljs$core$vary_meta = null;
  var cljs$core$vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__7253 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7253) : f.call(null, G__7253);
    }());
  };
  var cljs$core$vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__7254 = cljs.core.meta(obj);
      var G__7255 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7254, G__7255) : f.call(null, G__7254, G__7255);
    }());
  };
  var cljs$core$vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__7256 = cljs.core.meta(obj);
      var G__7257 = a;
      var G__7258 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7256, G__7257, G__7258) : f.call(null, G__7256, G__7257, G__7258);
    }());
  };
  var cljs$core$vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__7259 = cljs.core.meta(obj);
      var G__7260 = a;
      var G__7261 = b;
      var G__7262 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7259, G__7260, G__7261, G__7262) : f.call(null, G__7259, G__7260, G__7261, G__7262);
    }());
  };
  var cljs$core$vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__7263 = cljs.core.meta(obj);
      var G__7264 = a;
      var G__7265 = b;
      var G__7266 = c;
      var G__7267 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7263, G__7264, G__7265, G__7266, G__7267) : f.call(null, G__7263, G__7264, G__7265, G__7266, G__7267);
    }());
  };
  var cljs$core$vary_meta__7 = function() {
    var G__7268__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__7268 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__7269__i = 0, G__7269__a = new Array(arguments.length - 6);
        while (G__7269__i < G__7269__a.length) {
          G__7269__a[G__7269__i] = arguments[G__7269__i + 6];
          ++G__7269__i;
        }
        args = new cljs.core.IndexedSeq(G__7269__a, 0);
      }
      return G__7268__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__7268.cljs$lang$maxFixedArity = 6;
    G__7268.cljs$lang$applyTo = function(arglist__7270) {
      var obj = cljs.core.first(arglist__7270);
      arglist__7270 = cljs.core.next(arglist__7270);
      var f = cljs.core.first(arglist__7270);
      arglist__7270 = cljs.core.next(arglist__7270);
      var a = cljs.core.first(arglist__7270);
      arglist__7270 = cljs.core.next(arglist__7270);
      var b = cljs.core.first(arglist__7270);
      arglist__7270 = cljs.core.next(arglist__7270);
      var c = cljs.core.first(arglist__7270);
      arglist__7270 = cljs.core.next(arglist__7270);
      var d = cljs.core.first(arglist__7270);
      var args = cljs.core.rest(arglist__7270);
      return G__7268__delegate(obj, f, a, b, c, d, args);
    };
    G__7268.cljs$core$IFn$_invoke$arity$variadic = G__7268__delegate;
    return G__7268;
  }();
  cljs$core$vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$vary_meta__2.call(this, obj, f);
      case 3:
        return cljs$core$vary_meta__3.call(this, obj, f, a);
      case 4:
        return cljs$core$vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return cljs$core$vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return cljs$core$vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__7271 = null;
        if (arguments.length > 6) {
          var G__7272__i = 0, G__7272__a = new Array(arguments.length - 6);
          while (G__7272__i < G__7272__a.length) {
            G__7272__a[G__7272__i] = arguments[G__7272__i + 6];
            ++G__7272__i;
          }
          G__7271 = new cljs.core.IndexedSeq(G__7272__a, 0);
        }
        return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__7271);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
  cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var cljs$core$not_EQ_ = null;
  var cljs$core$not_EQ___1 = function(x) {
    return false;
  };
  var cljs$core$not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var cljs$core$not_EQ___3 = function() {
    var G__7273__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__7273 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__7274__i = 0, G__7274__a = new Array(arguments.length - 2);
        while (G__7274__i < G__7274__a.length) {
          G__7274__a[G__7274__i] = arguments[G__7274__i + 2];
          ++G__7274__i;
        }
        more = new cljs.core.IndexedSeq(G__7274__a, 0);
      }
      return G__7273__delegate.call(this, x, y, more);
    };
    G__7273.cljs$lang$maxFixedArity = 2;
    G__7273.cljs$lang$applyTo = function(arglist__7275) {
      var x = cljs.core.first(arglist__7275);
      arglist__7275 = cljs.core.next(arglist__7275);
      var y = cljs.core.first(arglist__7275);
      var more = cljs.core.rest(arglist__7275);
      return G__7273__delegate(x, y, more);
    };
    G__7273.cljs$core$IFn$_invoke$arity$variadic = G__7273__delegate;
    return G__7273;
  }();
  cljs$core$not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$not_EQ___1.call(this, x);
      case 2:
        return cljs$core$not_EQ___2.call(this, x, y);
      default:
        var G__7276 = null;
        if (arguments.length > 2) {
          var G__7277__i = 0, G__7277__a = new Array(arguments.length - 2);
          while (G__7277__i < G__7277__a.length) {
            G__7277__a[G__7277__i] = arguments[G__7277__i + 2];
            ++G__7277__i;
          }
          G__7276 = new cljs.core.IndexedSeq(G__7277__a, 0);
        }
        return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7276);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$not_EQ_;
}();
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t7281 !== "undefined") {
  } else {
    cljs.core.t7281 = function(nil_iter, meta7282) {
      this.nil_iter = nil_iter;
      this.meta7282 = meta7282;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t7281.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t7281.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t7281.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t7281.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7283) {
      var self__ = this;
      var _7283__$1 = this;
      return self__.meta7282;
    };
    cljs.core.t7281.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7283, meta7282__$1) {
      var self__ = this;
      var _7283__$1 = this;
      return new cljs.core.t7281(self__.nil_iter, meta7282__$1);
    };
    cljs.core.t7281.cljs$lang$type = true;
    cljs.core.t7281.cljs$lang$ctorStr = "cljs.core/t7281";
    cljs.core.t7281.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
      return cljs.core._write(writer__4660__auto__, "cljs.core/t7281");
    };
    cljs.core.__GT_t7281 = function cljs$core$nil_iter_$___GT_t7281(nil_iter__$1, meta7282) {
      return new cljs.core.t7281(nil_iter__$1, meta7282);
    };
  }
  return new cljs.core.t7281(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4060__auto__ = !(lt.stepper == null);
      if (and__4060__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4060__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7284 = lt;
        var G__7285 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7284, G__7285) : self__.xform.call(null, G__7284, G__7285);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7286 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7286) : self__.xform.call(null, G__7286);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__7288 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7288) : xform.call(null, G__7288);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7290 = cljs.core.next(iters__$1);
        iters__$1 = G__7290;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4959__auto___7291 = self__.iters.length;
  var i_7292 = 0;
  while (true) {
    if (i_7292 < n__4959__auto___7291) {
      self__.nexts[i_7292] = self__.iters[i_7292].next();
      var G__7293 = i_7292 + 1;
      i_7292 = G__7293;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4060__auto__ = !(lt.stepper == null);
      if (and__4060__auto__) {
        return this$.hasNext();
      } else {
        return and__4060__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7289 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7289) : self__.xform.call(null, G__7289);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var cljs$core$multi_stepper = null;
  var cljs$core$multi_stepper__2 = function(xform, iters) {
    return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var cljs$core$multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var cljs$core$multi_stepper_$_stepfn = null;
      var cljs$core$multi_stepper_$_stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var cljs$core$multi_stepper_$_stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      cljs$core$multi_stepper_$_stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return cljs$core$multi_stepper_$_stepfn__1.call(this, result);
          case 2:
            return cljs$core$multi_stepper_$_stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
      cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
      return cljs$core$multi_stepper_$_stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__7298 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7298) : xform.call(null, G__7298);
    }(), iters, nexts);
  };
  cljs$core$multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return cljs$core$multi_stepper__2.call(this, xform, iters);
      case 3:
        return cljs$core$multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
  cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
  return cljs$core$multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7299_7303 = cljs.core.seq(colls);
  var chunk__7300_7304 = null;
  var count__7301_7305 = 0;
  var i__7302_7306 = 0;
  while (true) {
    if (i__7302_7306 < count__7301_7305) {
      var coll_7307 = chunk__7300_7304.cljs$core$IIndexed$_nth$arity$2(null, i__7302_7306);
      iters.push(cljs.core.iter(coll_7307));
      var G__7308 = seq__7299_7303;
      var G__7309 = chunk__7300_7304;
      var G__7310 = count__7301_7305;
      var G__7311 = i__7302_7306 + 1;
      seq__7299_7303 = G__7308;
      chunk__7300_7304 = G__7309;
      count__7301_7305 = G__7310;
      i__7302_7306 = G__7311;
      continue;
    } else {
      var temp__4126__auto___7312 = cljs.core.seq(seq__7299_7303);
      if (temp__4126__auto___7312) {
        var seq__7299_7313__$1 = temp__4126__auto___7312;
        if (cljs.core.chunked_seq_QMARK_(seq__7299_7313__$1)) {
          var c__4859__auto___7314 = cljs.core.chunk_first(seq__7299_7313__$1);
          var G__7315 = cljs.core.chunk_rest(seq__7299_7313__$1);
          var G__7316 = c__4859__auto___7314;
          var G__7317 = cljs.core.count(c__4859__auto___7314);
          var G__7318 = 0;
          seq__7299_7303 = G__7315;
          chunk__7300_7304 = G__7316;
          count__7301_7305 = G__7317;
          i__7302_7306 = G__7318;
          continue;
        } else {
          var coll_7319 = cljs.core.first(seq__7299_7313__$1);
          iters.push(cljs.core.iter(coll_7319));
          var G__7320 = cljs.core.next(seq__7299_7313__$1);
          var G__7321 = null;
          var G__7322 = 0;
          var G__7323 = 0;
          seq__7299_7303 = G__7320;
          chunk__7300_7304 = G__7321;
          count__7301_7305 = G__7322;
          i__7302_7306 = G__7323;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var cljs$core$sequence = null;
  var cljs$core$sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__4072__auto__ = cljs.core.seq(coll);
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var cljs$core$sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var cljs$core$sequence__3 = function() {
    var G__7324__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__7324 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__7325__i = 0, G__7325__a = new Array(arguments.length - 2);
        while (G__7325__i < G__7325__a.length) {
          G__7325__a[G__7325__i] = arguments[G__7325__i + 2];
          ++G__7325__i;
        }
        colls = new cljs.core.IndexedSeq(G__7325__a, 0);
      }
      return G__7324__delegate.call(this, xform, coll, colls);
    };
    G__7324.cljs$lang$maxFixedArity = 2;
    G__7324.cljs$lang$applyTo = function(arglist__7326) {
      var xform = cljs.core.first(arglist__7326);
      arglist__7326 = cljs.core.next(arglist__7326);
      var coll = cljs.core.first(arglist__7326);
      var colls = cljs.core.rest(arglist__7326);
      return G__7324__delegate(xform, coll, colls);
    };
    G__7324.cljs$core$IFn$_invoke$arity$variadic = G__7324__delegate;
    return G__7324;
  }();
  cljs$core$sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$sequence__1.call(this, xform);
      case 2:
        return cljs$core$sequence__2.call(this, xform, coll);
      default:
        var G__7327 = null;
        if (arguments.length > 2) {
          var G__7328__i = 0, G__7328__a = new Array(arguments.length - 2);
          while (G__7328__i < G__7328__a.length) {
            G__7328__a[G__7328__i] = arguments[G__7328__i + 2];
            ++G__7328__i;
          }
          G__7327 = new cljs.core.IndexedSeq(G__7328__a, 0);
        }
        return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__7327);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sequence.cljs$lang$maxFixedArity = 2;
  cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$sequence;
}();
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7330 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7330) : pred.call(null, G__7330);
      }())) {
        var G__7331 = pred;
        var G__7332 = cljs.core.next(coll);
        pred = G__7331;
        coll = G__7332;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4072__auto__ = function() {
        var G__7336 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7336) : pred.call(null, G__7336);
      }();
      if (cljs.core.truth_(or__4072__auto__)) {
        return or__4072__auto__;
      } else {
        var G__7337 = pred;
        var G__7338 = cljs.core.next(coll);
        pred = G__7337;
        coll = G__7338;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__7345 = null;
    var G__7345__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__7345__1 = function(x) {
      return cljs.core.not(function() {
        var G__7342 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7342) : f.call(null, G__7342);
      }());
    };
    var G__7345__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__7343 = x;
        var G__7344 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7343, G__7344) : f.call(null, G__7343, G__7344);
      }());
    };
    var G__7345__3 = function() {
      var G__7346__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7346 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7347__i = 0, G__7347__a = new Array(arguments.length - 2);
          while (G__7347__i < G__7347__a.length) {
            G__7347__a[G__7347__i] = arguments[G__7347__i + 2];
            ++G__7347__i;
          }
          zs = new cljs.core.IndexedSeq(G__7347__a, 0);
        }
        return G__7346__delegate.call(this, x, y, zs);
      };
      G__7346.cljs$lang$maxFixedArity = 2;
      G__7346.cljs$lang$applyTo = function(arglist__7348) {
        var x = cljs.core.first(arglist__7348);
        arglist__7348 = cljs.core.next(arglist__7348);
        var y = cljs.core.first(arglist__7348);
        var zs = cljs.core.rest(arglist__7348);
        return G__7346__delegate(x, y, zs);
      };
      G__7346.cljs$core$IFn$_invoke$arity$variadic = G__7346__delegate;
      return G__7346;
    }();
    G__7345 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7345__0.call(this);
        case 1:
          return G__7345__1.call(this, x);
        case 2:
          return G__7345__2.call(this, x, y);
        default:
          var G__7349 = null;
          if (arguments.length > 2) {
            var G__7350__i = 0, G__7350__a = new Array(arguments.length - 2);
            while (G__7350__i < G__7350__a.length) {
              G__7350__a[G__7350__i] = arguments[G__7350__i + 2];
              ++G__7350__i;
            }
            G__7349 = new cljs.core.IndexedSeq(G__7350__a, 0);
          }
          return G__7345__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7349);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7345.cljs$lang$maxFixedArity = 2;
    G__7345.cljs$lang$applyTo = G__7345__3.cljs$lang$applyTo;
    G__7345.cljs$core$IFn$_invoke$arity$0 = G__7345__0;
    G__7345.cljs$core$IFn$_invoke$arity$1 = G__7345__1;
    G__7345.cljs$core$IFn$_invoke$arity$2 = G__7345__2;
    G__7345.cljs$core$IFn$_invoke$arity$variadic = G__7345__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7345;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__7351__delegate = function(args) {
      return x;
    };
    var G__7351 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7352__i = 0, G__7352__a = new Array(arguments.length - 0);
        while (G__7352__i < G__7352__a.length) {
          G__7352__a[G__7352__i] = arguments[G__7352__i + 0];
          ++G__7352__i;
        }
        args = new cljs.core.IndexedSeq(G__7352__a, 0);
      }
      return G__7351__delegate.call(this, args);
    };
    G__7351.cljs$lang$maxFixedArity = 0;
    G__7351.cljs$lang$applyTo = function(arglist__7353) {
      var args = cljs.core.seq(arglist__7353);
      return G__7351__delegate(args);
    };
    G__7351.cljs$core$IFn$_invoke$arity$variadic = G__7351__delegate;
    return G__7351;
  }();
};
cljs.core.comp = function() {
  var cljs$core$comp = null;
  var cljs$core$comp__0 = function() {
    return cljs.core.identity;
  };
  var cljs$core$comp__1 = function(f) {
    return f;
  };
  var cljs$core$comp__2 = function(f, g) {
    return function() {
      var G__7408 = null;
      var G__7408__0 = function() {
        var G__7381 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7381) : f.call(null, G__7381);
      };
      var G__7408__1 = function(x) {
        var G__7382 = function() {
          var G__7383 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7383) : g.call(null, G__7383);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7382) : f.call(null, G__7382);
      };
      var G__7408__2 = function(x, y) {
        var G__7384 = function() {
          var G__7385 = x;
          var G__7386 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7385, G__7386) : g.call(null, G__7385, G__7386);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7384) : f.call(null, G__7384);
      };
      var G__7408__3 = function(x, y, z) {
        var G__7387 = function() {
          var G__7388 = x;
          var G__7389 = y;
          var G__7390 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7388, G__7389, G__7390) : g.call(null, G__7388, G__7389, G__7390);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7387) : f.call(null, G__7387);
      };
      var G__7408__4 = function() {
        var G__7409__delegate = function(x, y, z, args) {
          var G__7391 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7391) : f.call(null, G__7391);
        };
        var G__7409 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7410__i = 0, G__7410__a = new Array(arguments.length - 3);
            while (G__7410__i < G__7410__a.length) {
              G__7410__a[G__7410__i] = arguments[G__7410__i + 3];
              ++G__7410__i;
            }
            args = new cljs.core.IndexedSeq(G__7410__a, 0);
          }
          return G__7409__delegate.call(this, x, y, z, args);
        };
        G__7409.cljs$lang$maxFixedArity = 3;
        G__7409.cljs$lang$applyTo = function(arglist__7411) {
          var x = cljs.core.first(arglist__7411);
          arglist__7411 = cljs.core.next(arglist__7411);
          var y = cljs.core.first(arglist__7411);
          arglist__7411 = cljs.core.next(arglist__7411);
          var z = cljs.core.first(arglist__7411);
          var args = cljs.core.rest(arglist__7411);
          return G__7409__delegate(x, y, z, args);
        };
        G__7409.cljs$core$IFn$_invoke$arity$variadic = G__7409__delegate;
        return G__7409;
      }();
      G__7408 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7408__0.call(this);
          case 1:
            return G__7408__1.call(this, x);
          case 2:
            return G__7408__2.call(this, x, y);
          case 3:
            return G__7408__3.call(this, x, y, z);
          default:
            var G__7412 = null;
            if (arguments.length > 3) {
              var G__7413__i = 0, G__7413__a = new Array(arguments.length - 3);
              while (G__7413__i < G__7413__a.length) {
                G__7413__a[G__7413__i] = arguments[G__7413__i + 3];
                ++G__7413__i;
              }
              G__7412 = new cljs.core.IndexedSeq(G__7413__a, 0);
            }
            return G__7408__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7412);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7408.cljs$lang$maxFixedArity = 3;
      G__7408.cljs$lang$applyTo = G__7408__4.cljs$lang$applyTo;
      G__7408.cljs$core$IFn$_invoke$arity$0 = G__7408__0;
      G__7408.cljs$core$IFn$_invoke$arity$1 = G__7408__1;
      G__7408.cljs$core$IFn$_invoke$arity$2 = G__7408__2;
      G__7408.cljs$core$IFn$_invoke$arity$3 = G__7408__3;
      G__7408.cljs$core$IFn$_invoke$arity$variadic = G__7408__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7408;
    }();
  };
  var cljs$core$comp__3 = function(f, g, h) {
    return function() {
      var G__7414 = null;
      var G__7414__0 = function() {
        var G__7392 = function() {
          var G__7393 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7393) : g.call(null, G__7393);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7392) : f.call(null, G__7392);
      };
      var G__7414__1 = function(x) {
        var G__7394 = function() {
          var G__7395 = function() {
            var G__7396 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7396) : h.call(null, G__7396);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7395) : g.call(null, G__7395);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7394) : f.call(null, G__7394);
      };
      var G__7414__2 = function(x, y) {
        var G__7397 = function() {
          var G__7398 = function() {
            var G__7399 = x;
            var G__7400 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7399, G__7400) : h.call(null, G__7399, G__7400);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7398) : g.call(null, G__7398);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7397) : f.call(null, G__7397);
      };
      var G__7414__3 = function(x, y, z) {
        var G__7401 = function() {
          var G__7402 = function() {
            var G__7403 = x;
            var G__7404 = y;
            var G__7405 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7403, G__7404, G__7405) : h.call(null, G__7403, G__7404, G__7405);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7402) : g.call(null, G__7402);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7401) : f.call(null, G__7401);
      };
      var G__7414__4 = function() {
        var G__7415__delegate = function(x, y, z, args) {
          var G__7406 = function() {
            var G__7407 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7407) : g.call(null, G__7407);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7406) : f.call(null, G__7406);
        };
        var G__7415 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7416__i = 0, G__7416__a = new Array(arguments.length - 3);
            while (G__7416__i < G__7416__a.length) {
              G__7416__a[G__7416__i] = arguments[G__7416__i + 3];
              ++G__7416__i;
            }
            args = new cljs.core.IndexedSeq(G__7416__a, 0);
          }
          return G__7415__delegate.call(this, x, y, z, args);
        };
        G__7415.cljs$lang$maxFixedArity = 3;
        G__7415.cljs$lang$applyTo = function(arglist__7417) {
          var x = cljs.core.first(arglist__7417);
          arglist__7417 = cljs.core.next(arglist__7417);
          var y = cljs.core.first(arglist__7417);
          arglist__7417 = cljs.core.next(arglist__7417);
          var z = cljs.core.first(arglist__7417);
          var args = cljs.core.rest(arglist__7417);
          return G__7415__delegate(x, y, z, args);
        };
        G__7415.cljs$core$IFn$_invoke$arity$variadic = G__7415__delegate;
        return G__7415;
      }();
      G__7414 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7414__0.call(this);
          case 1:
            return G__7414__1.call(this, x);
          case 2:
            return G__7414__2.call(this, x, y);
          case 3:
            return G__7414__3.call(this, x, y, z);
          default:
            var G__7418 = null;
            if (arguments.length > 3) {
              var G__7419__i = 0, G__7419__a = new Array(arguments.length - 3);
              while (G__7419__i < G__7419__a.length) {
                G__7419__a[G__7419__i] = arguments[G__7419__i + 3];
                ++G__7419__i;
              }
              G__7418 = new cljs.core.IndexedSeq(G__7419__a, 0);
            }
            return G__7414__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7418);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7414.cljs$lang$maxFixedArity = 3;
      G__7414.cljs$lang$applyTo = G__7414__4.cljs$lang$applyTo;
      G__7414.cljs$core$IFn$_invoke$arity$0 = G__7414__0;
      G__7414.cljs$core$IFn$_invoke$arity$1 = G__7414__1;
      G__7414.cljs$core$IFn$_invoke$arity$2 = G__7414__2;
      G__7414.cljs$core$IFn$_invoke$arity$3 = G__7414__3;
      G__7414.cljs$core$IFn$_invoke$arity$variadic = G__7414__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7414;
    }();
  };
  var cljs$core$comp__4 = function() {
    var G__7420__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__7421__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__7422 = cljs.core.first(fs__$2).call(null, ret);
                var G__7423 = cljs.core.next(fs__$2);
                ret = G__7422;
                fs__$2 = G__7423;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__7421 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__7424__i = 0, G__7424__a = new Array(arguments.length - 0);
              while (G__7424__i < G__7424__a.length) {
                G__7424__a[G__7424__i] = arguments[G__7424__i + 0];
                ++G__7424__i;
              }
              args = new cljs.core.IndexedSeq(G__7424__a, 0);
            }
            return G__7421__delegate.call(this, args);
          };
          G__7421.cljs$lang$maxFixedArity = 0;
          G__7421.cljs$lang$applyTo = function(arglist__7425) {
            var args = cljs.core.seq(arglist__7425);
            return G__7421__delegate(args);
          };
          G__7421.cljs$core$IFn$_invoke$arity$variadic = G__7421__delegate;
          return G__7421;
        }();
      }(fs__$1);
    };
    var G__7420 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__7426__i = 0, G__7426__a = new Array(arguments.length - 3);
        while (G__7426__i < G__7426__a.length) {
          G__7426__a[G__7426__i] = arguments[G__7426__i + 3];
          ++G__7426__i;
        }
        fs = new cljs.core.IndexedSeq(G__7426__a, 0);
      }
      return G__7420__delegate.call(this, f1, f2, f3, fs);
    };
    G__7420.cljs$lang$maxFixedArity = 3;
    G__7420.cljs$lang$applyTo = function(arglist__7427) {
      var f1 = cljs.core.first(arglist__7427);
      arglist__7427 = cljs.core.next(arglist__7427);
      var f2 = cljs.core.first(arglist__7427);
      arglist__7427 = cljs.core.next(arglist__7427);
      var f3 = cljs.core.first(arglist__7427);
      var fs = cljs.core.rest(arglist__7427);
      return G__7420__delegate(f1, f2, f3, fs);
    };
    G__7420.cljs$core$IFn$_invoke$arity$variadic = G__7420__delegate;
    return G__7420;
  }();
  cljs$core$comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$comp__0.call(this);
      case 1:
        return cljs$core$comp__1.call(this, f1);
      case 2:
        return cljs$core$comp__2.call(this, f1, f2);
      case 3:
        return cljs$core$comp__3.call(this, f1, f2, f3);
      default:
        var G__7428 = null;
        if (arguments.length > 3) {
          var G__7429__i = 0, G__7429__a = new Array(arguments.length - 3);
          while (G__7429__i < G__7429__a.length) {
            G__7429__a[G__7429__i] = arguments[G__7429__i + 3];
            ++G__7429__i;
          }
          G__7428 = new cljs.core.IndexedSeq(G__7429__a, 0);
        }
        return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__7428);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$comp.cljs$lang$maxFixedArity = 3;
  cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$comp;
}();
cljs.core.partial = function() {
  var cljs$core$partial = null;
  var cljs$core$partial__1 = function(f) {
    return f;
  };
  var cljs$core$partial__2 = function(f, arg1) {
    return function() {
      var G__7514 = null;
      var G__7514__0 = function() {
        var G__7472 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7472) : f.call(null, G__7472);
      };
      var G__7514__1 = function(x) {
        var G__7473 = arg1;
        var G__7474 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7473, G__7474) : f.call(null, G__7473, G__7474);
      };
      var G__7514__2 = function(x, y) {
        var G__7475 = arg1;
        var G__7476 = x;
        var G__7477 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7475, G__7476, G__7477) : f.call(null, G__7475, G__7476, G__7477);
      };
      var G__7514__3 = function(x, y, z) {
        var G__7478 = arg1;
        var G__7479 = x;
        var G__7480 = y;
        var G__7481 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7478, G__7479, G__7480, G__7481) : f.call(null, G__7478, G__7479, G__7480, G__7481);
      };
      var G__7514__4 = function() {
        var G__7515__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__7515 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7516__i = 0, G__7516__a = new Array(arguments.length - 3);
            while (G__7516__i < G__7516__a.length) {
              G__7516__a[G__7516__i] = arguments[G__7516__i + 3];
              ++G__7516__i;
            }
            args = new cljs.core.IndexedSeq(G__7516__a, 0);
          }
          return G__7515__delegate.call(this, x, y, z, args);
        };
        G__7515.cljs$lang$maxFixedArity = 3;
        G__7515.cljs$lang$applyTo = function(arglist__7517) {
          var x = cljs.core.first(arglist__7517);
          arglist__7517 = cljs.core.next(arglist__7517);
          var y = cljs.core.first(arglist__7517);
          arglist__7517 = cljs.core.next(arglist__7517);
          var z = cljs.core.first(arglist__7517);
          var args = cljs.core.rest(arglist__7517);
          return G__7515__delegate(x, y, z, args);
        };
        G__7515.cljs$core$IFn$_invoke$arity$variadic = G__7515__delegate;
        return G__7515;
      }();
      G__7514 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7514__0.call(this);
          case 1:
            return G__7514__1.call(this, x);
          case 2:
            return G__7514__2.call(this, x, y);
          case 3:
            return G__7514__3.call(this, x, y, z);
          default:
            var G__7518 = null;
            if (arguments.length > 3) {
              var G__7519__i = 0, G__7519__a = new Array(arguments.length - 3);
              while (G__7519__i < G__7519__a.length) {
                G__7519__a[G__7519__i] = arguments[G__7519__i + 3];
                ++G__7519__i;
              }
              G__7518 = new cljs.core.IndexedSeq(G__7519__a, 0);
            }
            return G__7514__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7518);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7514.cljs$lang$maxFixedArity = 3;
      G__7514.cljs$lang$applyTo = G__7514__4.cljs$lang$applyTo;
      G__7514.cljs$core$IFn$_invoke$arity$0 = G__7514__0;
      G__7514.cljs$core$IFn$_invoke$arity$1 = G__7514__1;
      G__7514.cljs$core$IFn$_invoke$arity$2 = G__7514__2;
      G__7514.cljs$core$IFn$_invoke$arity$3 = G__7514__3;
      G__7514.cljs$core$IFn$_invoke$arity$variadic = G__7514__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7514;
    }();
  };
  var cljs$core$partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__7520 = null;
      var G__7520__0 = function() {
        var G__7482 = arg1;
        var G__7483 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7482, G__7483) : f.call(null, G__7482, G__7483);
      };
      var G__7520__1 = function(x) {
        var G__7484 = arg1;
        var G__7485 = arg2;
        var G__7486 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7484, G__7485, G__7486) : f.call(null, G__7484, G__7485, G__7486);
      };
      var G__7520__2 = function(x, y) {
        var G__7487 = arg1;
        var G__7488 = arg2;
        var G__7489 = x;
        var G__7490 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7487, G__7488, G__7489, G__7490) : f.call(null, G__7487, G__7488, G__7489, G__7490);
      };
      var G__7520__3 = function(x, y, z) {
        var G__7491 = arg1;
        var G__7492 = arg2;
        var G__7493 = x;
        var G__7494 = y;
        var G__7495 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7491, G__7492, G__7493, G__7494, G__7495) : f.call(null, G__7491, G__7492, G__7493, G__7494, G__7495);
      };
      var G__7520__4 = function() {
        var G__7521__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__7521 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7522__i = 0, G__7522__a = new Array(arguments.length - 3);
            while (G__7522__i < G__7522__a.length) {
              G__7522__a[G__7522__i] = arguments[G__7522__i + 3];
              ++G__7522__i;
            }
            args = new cljs.core.IndexedSeq(G__7522__a, 0);
          }
          return G__7521__delegate.call(this, x, y, z, args);
        };
        G__7521.cljs$lang$maxFixedArity = 3;
        G__7521.cljs$lang$applyTo = function(arglist__7523) {
          var x = cljs.core.first(arglist__7523);
          arglist__7523 = cljs.core.next(arglist__7523);
          var y = cljs.core.first(arglist__7523);
          arglist__7523 = cljs.core.next(arglist__7523);
          var z = cljs.core.first(arglist__7523);
          var args = cljs.core.rest(arglist__7523);
          return G__7521__delegate(x, y, z, args);
        };
        G__7521.cljs$core$IFn$_invoke$arity$variadic = G__7521__delegate;
        return G__7521;
      }();
      G__7520 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7520__0.call(this);
          case 1:
            return G__7520__1.call(this, x);
          case 2:
            return G__7520__2.call(this, x, y);
          case 3:
            return G__7520__3.call(this, x, y, z);
          default:
            var G__7524 = null;
            if (arguments.length > 3) {
              var G__7525__i = 0, G__7525__a = new Array(arguments.length - 3);
              while (G__7525__i < G__7525__a.length) {
                G__7525__a[G__7525__i] = arguments[G__7525__i + 3];
                ++G__7525__i;
              }
              G__7524 = new cljs.core.IndexedSeq(G__7525__a, 0);
            }
            return G__7520__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7524);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7520.cljs$lang$maxFixedArity = 3;
      G__7520.cljs$lang$applyTo = G__7520__4.cljs$lang$applyTo;
      G__7520.cljs$core$IFn$_invoke$arity$0 = G__7520__0;
      G__7520.cljs$core$IFn$_invoke$arity$1 = G__7520__1;
      G__7520.cljs$core$IFn$_invoke$arity$2 = G__7520__2;
      G__7520.cljs$core$IFn$_invoke$arity$3 = G__7520__3;
      G__7520.cljs$core$IFn$_invoke$arity$variadic = G__7520__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7520;
    }();
  };
  var cljs$core$partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__7526 = null;
      var G__7526__0 = function() {
        var G__7496 = arg1;
        var G__7497 = arg2;
        var G__7498 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7496, G__7497, G__7498) : f.call(null, G__7496, G__7497, G__7498);
      };
      var G__7526__1 = function(x) {
        var G__7499 = arg1;
        var G__7500 = arg2;
        var G__7501 = arg3;
        var G__7502 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7499, G__7500, G__7501, G__7502) : f.call(null, G__7499, G__7500, G__7501, G__7502);
      };
      var G__7526__2 = function(x, y) {
        var G__7503 = arg1;
        var G__7504 = arg2;
        var G__7505 = arg3;
        var G__7506 = x;
        var G__7507 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7503, G__7504, G__7505, G__7506, G__7507) : f.call(null, G__7503, G__7504, G__7505, G__7506, G__7507);
      };
      var G__7526__3 = function(x, y, z) {
        var G__7508 = arg1;
        var G__7509 = arg2;
        var G__7510 = arg3;
        var G__7511 = x;
        var G__7512 = y;
        var G__7513 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7508, G__7509, G__7510, G__7511, G__7512, G__7513) : f.call(null, G__7508, G__7509, G__7510, G__7511, G__7512, G__7513);
      };
      var G__7526__4 = function() {
        var G__7527__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__7527 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7528__i = 0, G__7528__a = new Array(arguments.length - 3);
            while (G__7528__i < G__7528__a.length) {
              G__7528__a[G__7528__i] = arguments[G__7528__i + 3];
              ++G__7528__i;
            }
            args = new cljs.core.IndexedSeq(G__7528__a, 0);
          }
          return G__7527__delegate.call(this, x, y, z, args);
        };
        G__7527.cljs$lang$maxFixedArity = 3;
        G__7527.cljs$lang$applyTo = function(arglist__7529) {
          var x = cljs.core.first(arglist__7529);
          arglist__7529 = cljs.core.next(arglist__7529);
          var y = cljs.core.first(arglist__7529);
          arglist__7529 = cljs.core.next(arglist__7529);
          var z = cljs.core.first(arglist__7529);
          var args = cljs.core.rest(arglist__7529);
          return G__7527__delegate(x, y, z, args);
        };
        G__7527.cljs$core$IFn$_invoke$arity$variadic = G__7527__delegate;
        return G__7527;
      }();
      G__7526 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7526__0.call(this);
          case 1:
            return G__7526__1.call(this, x);
          case 2:
            return G__7526__2.call(this, x, y);
          case 3:
            return G__7526__3.call(this, x, y, z);
          default:
            var G__7530 = null;
            if (arguments.length > 3) {
              var G__7531__i = 0, G__7531__a = new Array(arguments.length - 3);
              while (G__7531__i < G__7531__a.length) {
                G__7531__a[G__7531__i] = arguments[G__7531__i + 3];
                ++G__7531__i;
              }
              G__7530 = new cljs.core.IndexedSeq(G__7531__a, 0);
            }
            return G__7526__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7530);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7526.cljs$lang$maxFixedArity = 3;
      G__7526.cljs$lang$applyTo = G__7526__4.cljs$lang$applyTo;
      G__7526.cljs$core$IFn$_invoke$arity$0 = G__7526__0;
      G__7526.cljs$core$IFn$_invoke$arity$1 = G__7526__1;
      G__7526.cljs$core$IFn$_invoke$arity$2 = G__7526__2;
      G__7526.cljs$core$IFn$_invoke$arity$3 = G__7526__3;
      G__7526.cljs$core$IFn$_invoke$arity$variadic = G__7526__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7526;
    }();
  };
  var cljs$core$partial__5 = function() {
    var G__7532__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__7533__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__7533 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__7534__i = 0, G__7534__a = new Array(arguments.length - 0);
            while (G__7534__i < G__7534__a.length) {
              G__7534__a[G__7534__i] = arguments[G__7534__i + 0];
              ++G__7534__i;
            }
            args = new cljs.core.IndexedSeq(G__7534__a, 0);
          }
          return G__7533__delegate.call(this, args);
        };
        G__7533.cljs$lang$maxFixedArity = 0;
        G__7533.cljs$lang$applyTo = function(arglist__7535) {
          var args = cljs.core.seq(arglist__7535);
          return G__7533__delegate(args);
        };
        G__7533.cljs$core$IFn$_invoke$arity$variadic = G__7533__delegate;
        return G__7533;
      }();
    };
    var G__7532 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7536__i = 0, G__7536__a = new Array(arguments.length - 4);
        while (G__7536__i < G__7536__a.length) {
          G__7536__a[G__7536__i] = arguments[G__7536__i + 4];
          ++G__7536__i;
        }
        more = new cljs.core.IndexedSeq(G__7536__a, 0);
      }
      return G__7532__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__7532.cljs$lang$maxFixedArity = 4;
    G__7532.cljs$lang$applyTo = function(arglist__7537) {
      var f = cljs.core.first(arglist__7537);
      arglist__7537 = cljs.core.next(arglist__7537);
      var arg1 = cljs.core.first(arglist__7537);
      arglist__7537 = cljs.core.next(arglist__7537);
      var arg2 = cljs.core.first(arglist__7537);
      arglist__7537 = cljs.core.next(arglist__7537);
      var arg3 = cljs.core.first(arglist__7537);
      var more = cljs.core.rest(arglist__7537);
      return G__7532__delegate(f, arg1, arg2, arg3, more);
    };
    G__7532.cljs$core$IFn$_invoke$arity$variadic = G__7532__delegate;
    return G__7532;
  }();
  cljs$core$partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$partial__1.call(this, f);
      case 2:
        return cljs$core$partial__2.call(this, f, arg1);
      case 3:
        return cljs$core$partial__3.call(this, f, arg1, arg2);
      case 4:
        return cljs$core$partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__7538 = null;
        if (arguments.length > 4) {
          var G__7539__i = 0, G__7539__a = new Array(arguments.length - 4);
          while (G__7539__i < G__7539__a.length) {
            G__7539__a[G__7539__i] = arguments[G__7539__i + 4];
            ++G__7539__i;
          }
          G__7538 = new cljs.core.IndexedSeq(G__7539__a, 0);
        }
        return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__7538);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partial.cljs$lang$maxFixedArity = 4;
  cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$partial;
}();
cljs.core.fnil = function() {
  var cljs$core$fnil = null;
  var cljs$core$fnil__2 = function(f, x) {
    return function() {
      var G__7572 = null;
      var G__7572__1 = function(a) {
        var G__7556 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7556) : f.call(null, G__7556);
      };
      var G__7572__2 = function(a, b) {
        var G__7557 = a == null ? x : a;
        var G__7558 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7557, G__7558) : f.call(null, G__7557, G__7558);
      };
      var G__7572__3 = function(a, b, c) {
        var G__7559 = a == null ? x : a;
        var G__7560 = b;
        var G__7561 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7559, G__7560, G__7561) : f.call(null, G__7559, G__7560, G__7561);
      };
      var G__7572__4 = function() {
        var G__7573__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__7573 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7574__i = 0, G__7574__a = new Array(arguments.length - 3);
            while (G__7574__i < G__7574__a.length) {
              G__7574__a[G__7574__i] = arguments[G__7574__i + 3];
              ++G__7574__i;
            }
            ds = new cljs.core.IndexedSeq(G__7574__a, 0);
          }
          return G__7573__delegate.call(this, a, b, c, ds);
        };
        G__7573.cljs$lang$maxFixedArity = 3;
        G__7573.cljs$lang$applyTo = function(arglist__7575) {
          var a = cljs.core.first(arglist__7575);
          arglist__7575 = cljs.core.next(arglist__7575);
          var b = cljs.core.first(arglist__7575);
          arglist__7575 = cljs.core.next(arglist__7575);
          var c = cljs.core.first(arglist__7575);
          var ds = cljs.core.rest(arglist__7575);
          return G__7573__delegate(a, b, c, ds);
        };
        G__7573.cljs$core$IFn$_invoke$arity$variadic = G__7573__delegate;
        return G__7573;
      }();
      G__7572 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__7572__1.call(this, a);
          case 2:
            return G__7572__2.call(this, a, b);
          case 3:
            return G__7572__3.call(this, a, b, c);
          default:
            var G__7576 = null;
            if (arguments.length > 3) {
              var G__7577__i = 0, G__7577__a = new Array(arguments.length - 3);
              while (G__7577__i < G__7577__a.length) {
                G__7577__a[G__7577__i] = arguments[G__7577__i + 3];
                ++G__7577__i;
              }
              G__7576 = new cljs.core.IndexedSeq(G__7577__a, 0);
            }
            return G__7572__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7576);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7572.cljs$lang$maxFixedArity = 3;
      G__7572.cljs$lang$applyTo = G__7572__4.cljs$lang$applyTo;
      G__7572.cljs$core$IFn$_invoke$arity$1 = G__7572__1;
      G__7572.cljs$core$IFn$_invoke$arity$2 = G__7572__2;
      G__7572.cljs$core$IFn$_invoke$arity$3 = G__7572__3;
      G__7572.cljs$core$IFn$_invoke$arity$variadic = G__7572__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7572;
    }();
  };
  var cljs$core$fnil__3 = function(f, x, y) {
    return function() {
      var G__7578 = null;
      var G__7578__2 = function(a, b) {
        var G__7562 = a == null ? x : a;
        var G__7563 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7562, G__7563) : f.call(null, G__7562, G__7563);
      };
      var G__7578__3 = function(a, b, c) {
        var G__7564 = a == null ? x : a;
        var G__7565 = b == null ? y : b;
        var G__7566 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7564, G__7565, G__7566) : f.call(null, G__7564, G__7565, G__7566);
      };
      var G__7578__4 = function() {
        var G__7579__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__7579 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7580__i = 0, G__7580__a = new Array(arguments.length - 3);
            while (G__7580__i < G__7580__a.length) {
              G__7580__a[G__7580__i] = arguments[G__7580__i + 3];
              ++G__7580__i;
            }
            ds = new cljs.core.IndexedSeq(G__7580__a, 0);
          }
          return G__7579__delegate.call(this, a, b, c, ds);
        };
        G__7579.cljs$lang$maxFixedArity = 3;
        G__7579.cljs$lang$applyTo = function(arglist__7581) {
          var a = cljs.core.first(arglist__7581);
          arglist__7581 = cljs.core.next(arglist__7581);
          var b = cljs.core.first(arglist__7581);
          arglist__7581 = cljs.core.next(arglist__7581);
          var c = cljs.core.first(arglist__7581);
          var ds = cljs.core.rest(arglist__7581);
          return G__7579__delegate(a, b, c, ds);
        };
        G__7579.cljs$core$IFn$_invoke$arity$variadic = G__7579__delegate;
        return G__7579;
      }();
      G__7578 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7578__2.call(this, a, b);
          case 3:
            return G__7578__3.call(this, a, b, c);
          default:
            var G__7582 = null;
            if (arguments.length > 3) {
              var G__7583__i = 0, G__7583__a = new Array(arguments.length - 3);
              while (G__7583__i < G__7583__a.length) {
                G__7583__a[G__7583__i] = arguments[G__7583__i + 3];
                ++G__7583__i;
              }
              G__7582 = new cljs.core.IndexedSeq(G__7583__a, 0);
            }
            return G__7578__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7582);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7578.cljs$lang$maxFixedArity = 3;
      G__7578.cljs$lang$applyTo = G__7578__4.cljs$lang$applyTo;
      G__7578.cljs$core$IFn$_invoke$arity$2 = G__7578__2;
      G__7578.cljs$core$IFn$_invoke$arity$3 = G__7578__3;
      G__7578.cljs$core$IFn$_invoke$arity$variadic = G__7578__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7578;
    }();
  };
  var cljs$core$fnil__4 = function(f, x, y, z) {
    return function() {
      var G__7584 = null;
      var G__7584__2 = function(a, b) {
        var G__7567 = a == null ? x : a;
        var G__7568 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7567, G__7568) : f.call(null, G__7567, G__7568);
      };
      var G__7584__3 = function(a, b, c) {
        var G__7569 = a == null ? x : a;
        var G__7570 = b == null ? y : b;
        var G__7571 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7569, G__7570, G__7571) : f.call(null, G__7569, G__7570, G__7571);
      };
      var G__7584__4 = function() {
        var G__7585__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__7585 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7586__i = 0, G__7586__a = new Array(arguments.length - 3);
            while (G__7586__i < G__7586__a.length) {
              G__7586__a[G__7586__i] = arguments[G__7586__i + 3];
              ++G__7586__i;
            }
            ds = new cljs.core.IndexedSeq(G__7586__a, 0);
          }
          return G__7585__delegate.call(this, a, b, c, ds);
        };
        G__7585.cljs$lang$maxFixedArity = 3;
        G__7585.cljs$lang$applyTo = function(arglist__7587) {
          var a = cljs.core.first(arglist__7587);
          arglist__7587 = cljs.core.next(arglist__7587);
          var b = cljs.core.first(arglist__7587);
          arglist__7587 = cljs.core.next(arglist__7587);
          var c = cljs.core.first(arglist__7587);
          var ds = cljs.core.rest(arglist__7587);
          return G__7585__delegate(a, b, c, ds);
        };
        G__7585.cljs$core$IFn$_invoke$arity$variadic = G__7585__delegate;
        return G__7585;
      }();
      G__7584 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7584__2.call(this, a, b);
          case 3:
            return G__7584__3.call(this, a, b, c);
          default:
            var G__7588 = null;
            if (arguments.length > 3) {
              var G__7589__i = 0, G__7589__a = new Array(arguments.length - 3);
              while (G__7589__i < G__7589__a.length) {
                G__7589__a[G__7589__i] = arguments[G__7589__i + 3];
                ++G__7589__i;
              }
              G__7588 = new cljs.core.IndexedSeq(G__7589__a, 0);
            }
            return G__7584__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7588);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7584.cljs$lang$maxFixedArity = 3;
      G__7584.cljs$lang$applyTo = G__7584__4.cljs$lang$applyTo;
      G__7584.cljs$core$IFn$_invoke$arity$2 = G__7584__2;
      G__7584.cljs$core$IFn$_invoke$arity$3 = G__7584__3;
      G__7584.cljs$core$IFn$_invoke$arity$variadic = G__7584__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7584;
    }();
  };
  cljs$core$fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return cljs$core$fnil__2.call(this, f, x);
      case 3:
        return cljs$core$fnil__3.call(this, f, x, y);
      case 4:
        return cljs$core$fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
  return cljs$core$fnil;
}();
cljs.core.map_indexed = function() {
  var cljs$core$map_indexed = null;
  var cljs$core$map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__7620 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7620) : cljs.core.volatile_BANG_.call(null, G__7620);
      }();
      return function(i) {
        return function() {
          var G__7650 = null;
          var G__7650__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7650__1 = function(result) {
            var G__7621 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7621) : rf.call(null, G__7621);
          };
          var G__7650__2 = function(result, input) {
            var G__7622 = result;
            var G__7623 = function() {
              var G__7624 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__7625 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7624, G__7625) : f.call(null, G__7624, G__7625);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7622, G__7623) : rf.call(null, G__7622, G__7623);
          };
          G__7650 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7650__0.call(this);
              case 1:
                return G__7650__1.call(this, result);
              case 2:
                return G__7650__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7650.cljs$core$IFn$_invoke$arity$0 = G__7650__0;
          G__7650.cljs$core$IFn$_invoke$arity$1 = G__7650__1;
          G__7650.cljs$core$IFn$_invoke$arity$2 = G__7650__2;
          return G__7650;
        }();
      }(i);
    };
  };
  var cljs$core$map_indexed__2 = function(f, coll) {
    var mapi = function cljs$core$map_indexed_$_mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4959__auto___7651 = size;
            var i_7652 = 0;
            while (true) {
              if (i_7652 < n__4959__auto___7651) {
                cljs.core.chunk_append(b, function() {
                  var G__7646 = idx + i_7652;
                  var G__7647 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7652);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7646, G__7647) : f.call(null, G__7646, G__7647);
                }());
                var G__7653 = i_7652 + 1;
                i_7652 = G__7653;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$map_indexed_$_mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__7648 = idx;
              var G__7649 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7648, G__7649) : f.call(null, G__7648, G__7649);
            }(), cljs$core$map_indexed_$_mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  cljs$core$map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$map_indexed__1.call(this, f);
      case 2:
        return cljs$core$map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
  cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
  return cljs$core$map_indexed;
}();
cljs.core.keep = function() {
  var cljs$core$keep = null;
  var cljs$core$keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__7672 = null;
        var G__7672__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7672__1 = function(result) {
          var G__7666 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7666) : rf.call(null, G__7666);
        };
        var G__7672__2 = function(result, input) {
          var v = function() {
            var G__7667 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7667) : f.call(null, G__7667);
          }();
          if (v == null) {
            return result;
          } else {
            var G__7668 = result;
            var G__7669 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7668, G__7669) : rf.call(null, G__7668, G__7669);
          }
        };
        G__7672 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7672__0.call(this);
            case 1:
              return G__7672__1.call(this, result);
            case 2:
              return G__7672__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7672.cljs$core$IFn$_invoke$arity$0 = G__7672__0;
        G__7672.cljs$core$IFn$_invoke$arity$1 = G__7672__1;
        G__7672.cljs$core$IFn$_invoke$arity$2 = G__7672__2;
        return G__7672;
      }();
    };
  };
  var cljs$core$keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4959__auto___7673 = size;
          var i_7674 = 0;
          while (true) {
            if (i_7674 < n__4959__auto___7673) {
              var x_7675 = function() {
                var G__7670 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7674);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7670) : f.call(null, G__7670);
              }();
              if (x_7675 == null) {
              } else {
                cljs.core.chunk_append(b, x_7675);
              }
              var G__7676 = i_7674 + 1;
              i_7674 = G__7676;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7671 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7671) : f.call(null, G__7671);
          }();
          if (x == null) {
            return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keep__1.call(this, f);
      case 2:
        return cljs$core$keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
  cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
  return cljs$core$keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__7677 = this$__$1;
  return goog.getUid(G__7677);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7678 = cljs.core.seq(self__.watches);
  var chunk__7679 = null;
  var count__7680 = 0;
  var i__7681 = 0;
  while (true) {
    if (i__7681 < count__7680) {
      var vec__7682 = chunk__7679.cljs$core$IIndexed$_nth$arity$2(null, i__7681);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7682, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7682, 1, null);
      var G__7683_7692 = key;
      var G__7684_7693 = this$__$1;
      var G__7685_7694 = oldval;
      var G__7686_7695 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7683_7692, G__7684_7693, G__7685_7694, G__7686_7695) : f.call(null, G__7683_7692, G__7684_7693, G__7685_7694, G__7686_7695);
      var G__7696 = seq__7678;
      var G__7697 = chunk__7679;
      var G__7698 = count__7680;
      var G__7699 = i__7681 + 1;
      seq__7678 = G__7696;
      chunk__7679 = G__7697;
      count__7680 = G__7698;
      i__7681 = G__7699;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__7678);
      if (temp__4126__auto__) {
        var seq__7678__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7678__$1)) {
          var c__4859__auto__ = cljs.core.chunk_first(seq__7678__$1);
          var G__7700 = cljs.core.chunk_rest(seq__7678__$1);
          var G__7701 = c__4859__auto__;
          var G__7702 = cljs.core.count(c__4859__auto__);
          var G__7703 = 0;
          seq__7678 = G__7700;
          chunk__7679 = G__7701;
          count__7680 = G__7702;
          i__7681 = G__7703;
          continue;
        } else {
          var vec__7687 = cljs.core.first(seq__7678__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7687, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7687, 1, null);
          var G__7688_7704 = key;
          var G__7689_7705 = this$__$1;
          var G__7690_7706 = oldval;
          var G__7691_7707 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7688_7704, G__7689_7705, G__7690_7706, G__7691_7707) : f.call(null, G__7688_7704, G__7689_7705, G__7690_7706, G__7691_7707);
          var G__7708 = cljs.core.next(seq__7678__$1);
          var G__7709 = null;
          var G__7710 = 0;
          var G__7711 = 0;
          seq__7678 = G__7708;
          chunk__7679 = G__7709;
          count__7680 = G__7710;
          i__7681 = G__7711;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var cljs$core$atom = null;
  var cljs$core$atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var cljs$core$atom__2 = function() {
    var G__7715__delegate = function(x, p__7712) {
      var map__7714 = p__7712;
      var map__7714__$1 = cljs.core.seq_QMARK_(map__7714) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7714) : map__7714;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7714__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7714__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__7715 = function(x, var_args) {
      var p__7712 = null;
      if (arguments.length > 1) {
        var G__7716__i = 0, G__7716__a = new Array(arguments.length - 1);
        while (G__7716__i < G__7716__a.length) {
          G__7716__a[G__7716__i] = arguments[G__7716__i + 1];
          ++G__7716__i;
        }
        p__7712 = new cljs.core.IndexedSeq(G__7716__a, 0);
      }
      return G__7715__delegate.call(this, x, p__7712);
    };
    G__7715.cljs$lang$maxFixedArity = 1;
    G__7715.cljs$lang$applyTo = function(arglist__7717) {
      var x = cljs.core.first(arglist__7717);
      var p__7712 = cljs.core.rest(arglist__7717);
      return G__7715__delegate(x, p__7712);
    };
    G__7715.cljs$core$IFn$_invoke$arity$variadic = G__7715__delegate;
    return G__7715;
  }();
  cljs$core$atom = function(x, var_args) {
    var p__7712 = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$atom__1.call(this, x);
      default:
        var G__7718 = null;
        if (arguments.length > 1) {
          var G__7719__i = 0, G__7719__a = new Array(arguments.length - 1);
          while (G__7719__i < G__7719__a.length) {
            G__7719__a[G__7719__i] = arguments[G__7719__i + 1];
            ++G__7719__i;
          }
          G__7718 = new cljs.core.IndexedSeq(G__7719__a, 0);
        }
        return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7718);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$atom.cljs$lang$maxFixedArity = 1;
  cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
  cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
  cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$atom;
}();
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__7722 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7722) : validate.call(null, G__7722);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7723 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7723) : cljs.core.pr_str.call(null, G__7723);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var cljs$core$swap_BANG_ = null;
  var cljs$core$swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7730 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7730) : f.call(null, G__7730);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var cljs$core$swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7731 = a.state;
        var G__7732 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7731, G__7732) : f.call(null, G__7731, G__7732);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var cljs$core$swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7733 = a.state;
        var G__7734 = x;
        var G__7735 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7733, G__7734, G__7735) : f.call(null, G__7733, G__7734, G__7735);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var cljs$core$swap_BANG___5 = function() {
    var G__7736__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__7736 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7737__i = 0, G__7737__a = new Array(arguments.length - 4);
        while (G__7737__i < G__7737__a.length) {
          G__7737__a[G__7737__i] = arguments[G__7737__i + 4];
          ++G__7737__i;
        }
        more = new cljs.core.IndexedSeq(G__7737__a, 0);
      }
      return G__7736__delegate.call(this, a, f, x, y, more);
    };
    G__7736.cljs$lang$maxFixedArity = 4;
    G__7736.cljs$lang$applyTo = function(arglist__7738) {
      var a = cljs.core.first(arglist__7738);
      arglist__7738 = cljs.core.next(arglist__7738);
      var f = cljs.core.first(arglist__7738);
      arglist__7738 = cljs.core.next(arglist__7738);
      var x = cljs.core.first(arglist__7738);
      arglist__7738 = cljs.core.next(arglist__7738);
      var y = cljs.core.first(arglist__7738);
      var more = cljs.core.rest(arglist__7738);
      return G__7736__delegate(a, f, x, y, more);
    };
    G__7736.cljs$core$IFn$_invoke$arity$variadic = G__7736__delegate;
    return G__7736;
  }();
  cljs$core$swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$swap_BANG___2.call(this, a, f);
      case 3:
        return cljs$core$swap_BANG___3.call(this, a, f, x);
      case 4:
        return cljs$core$swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__7739 = null;
        if (arguments.length > 4) {
          var G__7740__i = 0, G__7740__a = new Array(arguments.length - 4);
          while (G__7740__i < G__7740__a.length) {
            G__7740__a[G__7740__i] = arguments[G__7740__i + 4];
            ++G__7740__i;
          }
          G__7739 = new cljs.core.IndexedSeq(G__7740__a, 0);
        }
        return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__7739);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
  cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var cljs$core$keep_indexed = null;
  var cljs$core$keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__7807 = null;
          var G__7807__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7807__1 = function(result) {
            var G__7774 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7774) : rf.call(null, G__7774);
          };
          var G__7807__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__7775 = i;
              var G__7776 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7775, G__7776) : f.call(null, G__7775, G__7776);
            }();
            if (v == null) {
              return result;
            } else {
              var G__7777 = result;
              var G__7778 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7777, G__7778) : rf.call(null, G__7777, G__7778);
            }
          };
          G__7807 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7807__0.call(this);
              case 1:
                return G__7807__1.call(this, result);
              case 2:
                return G__7807__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7807.cljs$core$IFn$_invoke$arity$0 = G__7807__0;
          G__7807.cljs$core$IFn$_invoke$arity$1 = G__7807__1;
          G__7807.cljs$core$IFn$_invoke$arity$2 = G__7807__2;
          return G__7807;
        }();
      }(ia);
    };
  };
  var cljs$core$keep_indexed__2 = function(f, coll) {
    var keepi = function cljs$core$keep_indexed_$_keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4959__auto___7808 = size;
            var i_7809 = 0;
            while (true) {
              if (i_7809 < n__4959__auto___7808) {
                var x_7810 = function() {
                  var G__7803 = idx + i_7809;
                  var G__7804 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7809);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7803, G__7804) : f.call(null, G__7803, G__7804);
                }();
                if (x_7810 == null) {
                } else {
                  cljs.core.chunk_append(b, x_7810);
                }
                var G__7811 = i_7809 + 1;
                i_7809 = G__7811;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keep_indexed_$_keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__7805 = idx;
              var G__7806 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7805, G__7806) : f.call(null, G__7805, G__7806);
            }();
            if (x == null) {
              return cljs$core$keep_indexed_$_keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, cljs$core$keep_indexed_$_keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  cljs$core$keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keep_indexed__1.call(this, f);
      case 2:
        return cljs$core$keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
  cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
  return cljs$core$keep_indexed;
}();
cljs.core.every_pred = function() {
  var cljs$core$every_pred = null;
  var cljs$core$every_pred__1 = function(p) {
    return function() {
      var cljs$core$every_pred_$_ep1 = null;
      var cljs$core$every_pred_$_ep1__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__8025 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8025) : p.call(null, G__8025);
        }());
      };
      var cljs$core$every_pred_$_ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8027 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8027) : p.call(null, G__8027);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var G__8028 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8028) : p.call(null, G__8028);
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8030 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8030) : p.call(null, G__8030);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var and__4060__auto____$1 = function() {
              var G__8032 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8032) : p.call(null, G__8032);
            }();
            if (cljs.core.truth_(and__4060__auto____$1)) {
              var G__8033 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8033) : p.call(null, G__8033);
            } else {
              return and__4060__auto____$1;
            }
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep1__4 = function() {
        var G__8202__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__8202 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8203__i = 0, G__8203__a = new Array(arguments.length - 3);
            while (G__8203__i < G__8203__a.length) {
              G__8203__a[G__8203__i] = arguments[G__8203__i + 3];
              ++G__8203__i;
            }
            args = new cljs.core.IndexedSeq(G__8203__a, 0);
          }
          return G__8202__delegate.call(this, x, y, z, args);
        };
        G__8202.cljs$lang$maxFixedArity = 3;
        G__8202.cljs$lang$applyTo = function(arglist__8204) {
          var x = cljs.core.first(arglist__8204);
          arglist__8204 = cljs.core.next(arglist__8204);
          var y = cljs.core.first(arglist__8204);
          arglist__8204 = cljs.core.next(arglist__8204);
          var z = cljs.core.first(arglist__8204);
          var args = cljs.core.rest(arglist__8204);
          return G__8202__delegate(x, y, z, args);
        };
        G__8202.cljs$core$IFn$_invoke$arity$variadic = G__8202__delegate;
        return G__8202;
      }();
      cljs$core$every_pred_$_ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep1__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep1__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep1__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep1__3.call(this, x, y, z);
          default:
            var G__8205 = null;
            if (arguments.length > 3) {
              var G__8206__i = 0, G__8206__a = new Array(arguments.length - 3);
              while (G__8206__i < G__8206__a.length) {
                G__8206__a[G__8206__i] = arguments[G__8206__i + 3];
                ++G__8206__i;
              }
              G__8205 = new cljs.core.IndexedSeq(G__8206__a, 0);
            }
            return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8205);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep1;
    }();
  };
  var cljs$core$every_pred__2 = function(p1, p2) {
    return function() {
      var cljs$core$every_pred_$_ep2 = null;
      var cljs$core$every_pred_$_ep2__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8065 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8065) : p1.call(null, G__8065);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var G__8066 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8066) : p2.call(null, G__8066);
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8068 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8068) : p1.call(null, G__8068);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var and__4060__auto____$1 = function() {
              var G__8070 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8070) : p1.call(null, G__8070);
            }();
            if (cljs.core.truth_(and__4060__auto____$1)) {
              var and__4060__auto____$2 = function() {
                var G__8072 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8072) : p2.call(null, G__8072);
              }();
              if (cljs.core.truth_(and__4060__auto____$2)) {
                var G__8073 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8073) : p2.call(null, G__8073);
              } else {
                return and__4060__auto____$2;
              }
            } else {
              return and__4060__auto____$1;
            }
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8075 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8075) : p1.call(null, G__8075);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var and__4060__auto____$1 = function() {
              var G__8077 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8077) : p1.call(null, G__8077);
            }();
            if (cljs.core.truth_(and__4060__auto____$1)) {
              var and__4060__auto____$2 = function() {
                var G__8079 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8079) : p1.call(null, G__8079);
              }();
              if (cljs.core.truth_(and__4060__auto____$2)) {
                var and__4060__auto____$3 = function() {
                  var G__8081 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8081) : p2.call(null, G__8081);
                }();
                if (cljs.core.truth_(and__4060__auto____$3)) {
                  var and__4060__auto____$4 = function() {
                    var G__8083 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8083) : p2.call(null, G__8083);
                  }();
                  if (cljs.core.truth_(and__4060__auto____$4)) {
                    var G__8084 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8084) : p2.call(null, G__8084);
                  } else {
                    return and__4060__auto____$4;
                  }
                } else {
                  return and__4060__auto____$3;
                }
              } else {
                return and__4060__auto____$2;
              }
            } else {
              return and__4060__auto____$1;
            }
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__4 = function() {
        var G__8207__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__7812_SHARP_) {
            var and__4060__auto__ = function() {
              var G__8089 = p1__7812_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8089) : p1.call(null, G__8089);
            }();
            if (cljs.core.truth_(and__4060__auto__)) {
              var G__8090 = p1__7812_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8090) : p2.call(null, G__8090);
            } else {
              return and__4060__auto__;
            }
          }, args));
        };
        var G__8207 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8208__i = 0, G__8208__a = new Array(arguments.length - 3);
            while (G__8208__i < G__8208__a.length) {
              G__8208__a[G__8208__i] = arguments[G__8208__i + 3];
              ++G__8208__i;
            }
            args = new cljs.core.IndexedSeq(G__8208__a, 0);
          }
          return G__8207__delegate.call(this, x, y, z, args);
        };
        G__8207.cljs$lang$maxFixedArity = 3;
        G__8207.cljs$lang$applyTo = function(arglist__8209) {
          var x = cljs.core.first(arglist__8209);
          arglist__8209 = cljs.core.next(arglist__8209);
          var y = cljs.core.first(arglist__8209);
          arglist__8209 = cljs.core.next(arglist__8209);
          var z = cljs.core.first(arglist__8209);
          var args = cljs.core.rest(arglist__8209);
          return G__8207__delegate(x, y, z, args);
        };
        G__8207.cljs$core$IFn$_invoke$arity$variadic = G__8207__delegate;
        return G__8207;
      }();
      cljs$core$every_pred_$_ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep2__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep2__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep2__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep2__3.call(this, x, y, z);
          default:
            var G__8210 = null;
            if (arguments.length > 3) {
              var G__8211__i = 0, G__8211__a = new Array(arguments.length - 3);
              while (G__8211__i < G__8211__a.length) {
                G__8211__a[G__8211__i] = arguments[G__8211__i + 3];
                ++G__8211__i;
              }
              G__8210 = new cljs.core.IndexedSeq(G__8211__a, 0);
            }
            return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8210);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep2;
    }();
  };
  var cljs$core$every_pred__3 = function(p1, p2, p3) {
    return function() {
      var cljs$core$every_pred_$_ep3 = null;
      var cljs$core$every_pred_$_ep3__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8136 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8136) : p1.call(null, G__8136);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var and__4060__auto____$1 = function() {
              var G__8138 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8138) : p2.call(null, G__8138);
            }();
            if (cljs.core.truth_(and__4060__auto____$1)) {
              var G__8139 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8139) : p3.call(null, G__8139);
            } else {
              return and__4060__auto____$1;
            }
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8141 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8141) : p1.call(null, G__8141);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var and__4060__auto____$1 = function() {
              var G__8143 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8143) : p2.call(null, G__8143);
            }();
            if (cljs.core.truth_(and__4060__auto____$1)) {
              var and__4060__auto____$2 = function() {
                var G__8145 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8145) : p3.call(null, G__8145);
              }();
              if (cljs.core.truth_(and__4060__auto____$2)) {
                var and__4060__auto____$3 = function() {
                  var G__8147 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8147) : p1.call(null, G__8147);
                }();
                if (cljs.core.truth_(and__4060__auto____$3)) {
                  var and__4060__auto____$4 = function() {
                    var G__8149 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8149) : p2.call(null, G__8149);
                  }();
                  if (cljs.core.truth_(and__4060__auto____$4)) {
                    var G__8150 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8150) : p3.call(null, G__8150);
                  } else {
                    return and__4060__auto____$4;
                  }
                } else {
                  return and__4060__auto____$3;
                }
              } else {
                return and__4060__auto____$2;
              }
            } else {
              return and__4060__auto____$1;
            }
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4060__auto__ = function() {
            var G__8152 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8152) : p1.call(null, G__8152);
          }();
          if (cljs.core.truth_(and__4060__auto__)) {
            var and__4060__auto____$1 = function() {
              var G__8154 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8154) : p2.call(null, G__8154);
            }();
            if (cljs.core.truth_(and__4060__auto____$1)) {
              var and__4060__auto____$2 = function() {
                var G__8156 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8156) : p3.call(null, G__8156);
              }();
              if (cljs.core.truth_(and__4060__auto____$2)) {
                var and__4060__auto____$3 = function() {
                  var G__8158 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8158) : p1.call(null, G__8158);
                }();
                if (cljs.core.truth_(and__4060__auto____$3)) {
                  var and__4060__auto____$4 = function() {
                    var G__8160 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8160) : p2.call(null, G__8160);
                  }();
                  if (cljs.core.truth_(and__4060__auto____$4)) {
                    var and__4060__auto____$5 = function() {
                      var G__8162 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8162) : p3.call(null, G__8162);
                    }();
                    if (cljs.core.truth_(and__4060__auto____$5)) {
                      var and__4060__auto____$6 = function() {
                        var G__8164 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8164) : p1.call(null, G__8164);
                      }();
                      if (cljs.core.truth_(and__4060__auto____$6)) {
                        var and__4060__auto____$7 = function() {
                          var G__8166 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8166) : p2.call(null, G__8166);
                        }();
                        if (cljs.core.truth_(and__4060__auto____$7)) {
                          var G__8167 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8167) : p3.call(null, G__8167);
                        } else {
                          return and__4060__auto____$7;
                        }
                      } else {
                        return and__4060__auto____$6;
                      }
                    } else {
                      return and__4060__auto____$5;
                    }
                  } else {
                    return and__4060__auto____$4;
                  }
                } else {
                  return and__4060__auto____$3;
                }
              } else {
                return and__4060__auto____$2;
              }
            } else {
              return and__4060__auto____$1;
            }
          } else {
            return and__4060__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__4 = function() {
        var G__8212__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__7813_SHARP_) {
            var and__4060__auto__ = function() {
              var G__8174 = p1__7813_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8174) : p1.call(null, G__8174);
            }();
            if (cljs.core.truth_(and__4060__auto__)) {
              var and__4060__auto____$1 = function() {
                var G__8176 = p1__7813_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8176) : p2.call(null, G__8176);
              }();
              if (cljs.core.truth_(and__4060__auto____$1)) {
                var G__8177 = p1__7813_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8177) : p3.call(null, G__8177);
              } else {
                return and__4060__auto____$1;
              }
            } else {
              return and__4060__auto__;
            }
          }, args));
        };
        var G__8212 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8213__i = 0, G__8213__a = new Array(arguments.length - 3);
            while (G__8213__i < G__8213__a.length) {
              G__8213__a[G__8213__i] = arguments[G__8213__i + 3];
              ++G__8213__i;
            }
            args = new cljs.core.IndexedSeq(G__8213__a, 0);
          }
          return G__8212__delegate.call(this, x, y, z, args);
        };
        G__8212.cljs$lang$maxFixedArity = 3;
        G__8212.cljs$lang$applyTo = function(arglist__8214) {
          var x = cljs.core.first(arglist__8214);
          arglist__8214 = cljs.core.next(arglist__8214);
          var y = cljs.core.first(arglist__8214);
          arglist__8214 = cljs.core.next(arglist__8214);
          var z = cljs.core.first(arglist__8214);
          var args = cljs.core.rest(arglist__8214);
          return G__8212__delegate(x, y, z, args);
        };
        G__8212.cljs$core$IFn$_invoke$arity$variadic = G__8212__delegate;
        return G__8212;
      }();
      cljs$core$every_pred_$_ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep3__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep3__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep3__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep3__3.call(this, x, y, z);
          default:
            var G__8215 = null;
            if (arguments.length > 3) {
              var G__8216__i = 0, G__8216__a = new Array(arguments.length - 3);
              while (G__8216__i < G__8216__a.length) {
                G__8216__a[G__8216__i] = arguments[G__8216__i + 3];
                ++G__8216__i;
              }
              G__8215 = new cljs.core.IndexedSeq(G__8216__a, 0);
            }
            return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8215);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep3;
    }();
  };
  var cljs$core$every_pred__4 = function() {
    var G__8217__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var cljs$core$every_pred_$_epn = null;
          var cljs$core$every_pred_$_epn__0 = function() {
            return true;
          };
          var cljs$core$every_pred_$_epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7814_SHARP_) {
                var G__8193 = x;
                return p1__7814_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7814_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8193) : p1__7814_SHARP_.call(null, G__8193);
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7815_SHARP_) {
                var and__4060__auto__ = function() {
                  var G__8195 = x;
                  return p1__7815_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7815_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8195) : p1__7815_SHARP_.call(null, G__8195);
                }();
                if (cljs.core.truth_(and__4060__auto__)) {
                  var G__8196 = y;
                  return p1__7815_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7815_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8196) : p1__7815_SHARP_.call(null, G__8196);
                } else {
                  return and__4060__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7816_SHARP_) {
                var and__4060__auto__ = function() {
                  var G__8198 = x;
                  return p1__7816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8198) : p1__7816_SHARP_.call(null, G__8198);
                }();
                if (cljs.core.truth_(and__4060__auto__)) {
                  var and__4060__auto____$1 = function() {
                    var G__8200 = y;
                    return p1__7816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8200) : p1__7816_SHARP_.call(null, G__8200);
                  }();
                  if (cljs.core.truth_(and__4060__auto____$1)) {
                    var G__8201 = z;
                    return p1__7816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8201) : p1__7816_SHARP_.call(null, G__8201);
                  } else {
                    return and__4060__auto____$1;
                  }
                } else {
                  return and__4060__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__4 = function() {
            var G__8218__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__7817_SHARP_) {
                  return cljs.core.every_QMARK_(p1__7817_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__8218 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8219__i = 0, G__8219__a = new Array(arguments.length - 3);
                while (G__8219__i < G__8219__a.length) {
                  G__8219__a[G__8219__i] = arguments[G__8219__i + 3];
                  ++G__8219__i;
                }
                args = new cljs.core.IndexedSeq(G__8219__a, 0);
              }
              return G__8218__delegate.call(this, x, y, z, args);
            };
            G__8218.cljs$lang$maxFixedArity = 3;
            G__8218.cljs$lang$applyTo = function(arglist__8220) {
              var x = cljs.core.first(arglist__8220);
              arglist__8220 = cljs.core.next(arglist__8220);
              var y = cljs.core.first(arglist__8220);
              arglist__8220 = cljs.core.next(arglist__8220);
              var z = cljs.core.first(arglist__8220);
              var args = cljs.core.rest(arglist__8220);
              return G__8218__delegate(x, y, z, args);
            };
            G__8218.cljs$core$IFn$_invoke$arity$variadic = G__8218__delegate;
            return G__8218;
          }();
          cljs$core$every_pred_$_epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return cljs$core$every_pred_$_epn__0.call(this);
              case 1:
                return cljs$core$every_pred_$_epn__1.call(this, x);
              case 2:
                return cljs$core$every_pred_$_epn__2.call(this, x, y);
              case 3:
                return cljs$core$every_pred_$_epn__3.call(this, x, y, z);
              default:
                var G__8221 = null;
                if (arguments.length > 3) {
                  var G__8222__i = 0, G__8222__a = new Array(arguments.length - 3);
                  while (G__8222__i < G__8222__a.length) {
                    G__8222__a[G__8222__i] = arguments[G__8222__i + 3];
                    ++G__8222__i;
                  }
                  G__8221 = new cljs.core.IndexedSeq(G__8222__a, 0);
                }
                return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8221);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
          cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return cljs$core$every_pred_$_epn;
        }();
      }(ps__$1);
    };
    var G__8217 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8223__i = 0, G__8223__a = new Array(arguments.length - 3);
        while (G__8223__i < G__8223__a.length) {
          G__8223__a[G__8223__i] = arguments[G__8223__i + 3];
          ++G__8223__i;
        }
        ps = new cljs.core.IndexedSeq(G__8223__a, 0);
      }
      return G__8217__delegate.call(this, p1, p2, p3, ps);
    };
    G__8217.cljs$lang$maxFixedArity = 3;
    G__8217.cljs$lang$applyTo = function(arglist__8224) {
      var p1 = cljs.core.first(arglist__8224);
      arglist__8224 = cljs.core.next(arglist__8224);
      var p2 = cljs.core.first(arglist__8224);
      arglist__8224 = cljs.core.next(arglist__8224);
      var p3 = cljs.core.first(arglist__8224);
      var ps = cljs.core.rest(arglist__8224);
      return G__8217__delegate(p1, p2, p3, ps);
    };
    G__8217.cljs$core$IFn$_invoke$arity$variadic = G__8217__delegate;
    return G__8217;
  }();
  cljs$core$every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$every_pred__1.call(this, p1);
      case 2:
        return cljs$core$every_pred__2.call(this, p1, p2);
      case 3:
        return cljs$core$every_pred__3.call(this, p1, p2, p3);
      default:
        var G__8225 = null;
        if (arguments.length > 3) {
          var G__8226__i = 0, G__8226__a = new Array(arguments.length - 3);
          while (G__8226__i < G__8226__a.length) {
            G__8226__a[G__8226__i] = arguments[G__8226__i + 3];
            ++G__8226__i;
          }
          G__8225 = new cljs.core.IndexedSeq(G__8226__a, 0);
        }
        return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8225);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
  cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$every_pred;
}();
cljs.core.some_fn = function() {
  var cljs$core$some_fn = null;
  var cljs$core$some_fn__1 = function(p) {
    return function() {
      var cljs$core$some_fn_$_sp1 = null;
      var cljs$core$some_fn_$_sp1__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp1__1 = function(x) {
        var G__8432 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8432) : p.call(null, G__8432);
      };
      var cljs$core$some_fn_$_sp1__2 = function(x, y) {
        var or__4072__auto__ = function() {
          var G__8434 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8434) : p.call(null, G__8434);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var G__8435 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8435) : p.call(null, G__8435);
        }
      };
      var cljs$core$some_fn_$_sp1__3 = function(x, y, z) {
        var or__4072__auto__ = function() {
          var G__8437 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8437) : p.call(null, G__8437);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = function() {
            var G__8439 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8439) : p.call(null, G__8439);
          }();
          if (cljs.core.truth_(or__4072__auto____$1)) {
            return or__4072__auto____$1;
          } else {
            var G__8440 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8440) : p.call(null, G__8440);
          }
        }
      };
      var cljs$core$some_fn_$_sp1__4 = function() {
        var G__8601__delegate = function(x, y, z, args) {
          var or__4072__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4072__auto__)) {
            return or__4072__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__8601 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8602__i = 0, G__8602__a = new Array(arguments.length - 3);
            while (G__8602__i < G__8602__a.length) {
              G__8602__a[G__8602__i] = arguments[G__8602__i + 3];
              ++G__8602__i;
            }
            args = new cljs.core.IndexedSeq(G__8602__a, 0);
          }
          return G__8601__delegate.call(this, x, y, z, args);
        };
        G__8601.cljs$lang$maxFixedArity = 3;
        G__8601.cljs$lang$applyTo = function(arglist__8603) {
          var x = cljs.core.first(arglist__8603);
          arglist__8603 = cljs.core.next(arglist__8603);
          var y = cljs.core.first(arglist__8603);
          arglist__8603 = cljs.core.next(arglist__8603);
          var z = cljs.core.first(arglist__8603);
          var args = cljs.core.rest(arglist__8603);
          return G__8601__delegate(x, y, z, args);
        };
        G__8601.cljs$core$IFn$_invoke$arity$variadic = G__8601__delegate;
        return G__8601;
      }();
      cljs$core$some_fn_$_sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp1__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp1__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp1__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp1__3.call(this, x, y, z);
          default:
            var G__8604 = null;
            if (arguments.length > 3) {
              var G__8605__i = 0, G__8605__a = new Array(arguments.length - 3);
              while (G__8605__i < G__8605__a.length) {
                G__8605__a[G__8605__i] = arguments[G__8605__i + 3];
                ++G__8605__i;
              }
              G__8604 = new cljs.core.IndexedSeq(G__8605__a, 0);
            }
            return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8604);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp1;
    }();
  };
  var cljs$core$some_fn__2 = function(p1, p2) {
    return function() {
      var cljs$core$some_fn_$_sp2 = null;
      var cljs$core$some_fn_$_sp2__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp2__1 = function(x) {
        var or__4072__auto__ = function() {
          var G__8472 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8472) : p1.call(null, G__8472);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var G__8473 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8473) : p2.call(null, G__8473);
        }
      };
      var cljs$core$some_fn_$_sp2__2 = function(x, y) {
        var or__4072__auto__ = function() {
          var G__8475 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8475) : p1.call(null, G__8475);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = function() {
            var G__8477 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8477) : p1.call(null, G__8477);
          }();
          if (cljs.core.truth_(or__4072__auto____$1)) {
            return or__4072__auto____$1;
          } else {
            var or__4072__auto____$2 = function() {
              var G__8479 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8479) : p2.call(null, G__8479);
            }();
            if (cljs.core.truth_(or__4072__auto____$2)) {
              return or__4072__auto____$2;
            } else {
              var G__8480 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8480) : p2.call(null, G__8480);
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp2__3 = function(x, y, z) {
        var or__4072__auto__ = function() {
          var G__8482 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8482) : p1.call(null, G__8482);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = function() {
            var G__8484 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8484) : p1.call(null, G__8484);
          }();
          if (cljs.core.truth_(or__4072__auto____$1)) {
            return or__4072__auto____$1;
          } else {
            var or__4072__auto____$2 = function() {
              var G__8486 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8486) : p1.call(null, G__8486);
            }();
            if (cljs.core.truth_(or__4072__auto____$2)) {
              return or__4072__auto____$2;
            } else {
              var or__4072__auto____$3 = function() {
                var G__8488 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8488) : p2.call(null, G__8488);
              }();
              if (cljs.core.truth_(or__4072__auto____$3)) {
                return or__4072__auto____$3;
              } else {
                var or__4072__auto____$4 = function() {
                  var G__8490 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8490) : p2.call(null, G__8490);
                }();
                if (cljs.core.truth_(or__4072__auto____$4)) {
                  return or__4072__auto____$4;
                } else {
                  var G__8491 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8491) : p2.call(null, G__8491);
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp2__4 = function() {
        var G__8606__delegate = function(x, y, z, args) {
          var or__4072__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4072__auto__)) {
            return or__4072__auto__;
          } else {
            return cljs.core.some(function(or__4072__auto__) {
              return function(p1__8227_SHARP_) {
                var or__4072__auto____$1 = function() {
                  var G__8493 = p1__8227_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8493) : p1.call(null, G__8493);
                }();
                if (cljs.core.truth_(or__4072__auto____$1)) {
                  return or__4072__auto____$1;
                } else {
                  var G__8494 = p1__8227_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8494) : p2.call(null, G__8494);
                }
              };
            }(or__4072__auto__), args);
          }
        };
        var G__8606 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8607__i = 0, G__8607__a = new Array(arguments.length - 3);
            while (G__8607__i < G__8607__a.length) {
              G__8607__a[G__8607__i] = arguments[G__8607__i + 3];
              ++G__8607__i;
            }
            args = new cljs.core.IndexedSeq(G__8607__a, 0);
          }
          return G__8606__delegate.call(this, x, y, z, args);
        };
        G__8606.cljs$lang$maxFixedArity = 3;
        G__8606.cljs$lang$applyTo = function(arglist__8608) {
          var x = cljs.core.first(arglist__8608);
          arglist__8608 = cljs.core.next(arglist__8608);
          var y = cljs.core.first(arglist__8608);
          arglist__8608 = cljs.core.next(arglist__8608);
          var z = cljs.core.first(arglist__8608);
          var args = cljs.core.rest(arglist__8608);
          return G__8606__delegate(x, y, z, args);
        };
        G__8606.cljs$core$IFn$_invoke$arity$variadic = G__8606__delegate;
        return G__8606;
      }();
      cljs$core$some_fn_$_sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp2__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp2__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp2__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp2__3.call(this, x, y, z);
          default:
            var G__8609 = null;
            if (arguments.length > 3) {
              var G__8610__i = 0, G__8610__a = new Array(arguments.length - 3);
              while (G__8610__i < G__8610__a.length) {
                G__8610__a[G__8610__i] = arguments[G__8610__i + 3];
                ++G__8610__i;
              }
              G__8609 = new cljs.core.IndexedSeq(G__8610__a, 0);
            }
            return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8609);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp2;
    }();
  };
  var cljs$core$some_fn__3 = function(p1, p2, p3) {
    return function() {
      var cljs$core$some_fn_$_sp3 = null;
      var cljs$core$some_fn_$_sp3__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp3__1 = function(x) {
        var or__4072__auto__ = function() {
          var G__8540 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8540) : p1.call(null, G__8540);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = function() {
            var G__8542 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8542) : p2.call(null, G__8542);
          }();
          if (cljs.core.truth_(or__4072__auto____$1)) {
            return or__4072__auto____$1;
          } else {
            var G__8543 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8543) : p3.call(null, G__8543);
          }
        }
      };
      var cljs$core$some_fn_$_sp3__2 = function(x, y) {
        var or__4072__auto__ = function() {
          var G__8545 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8545) : p1.call(null, G__8545);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = function() {
            var G__8547 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8547) : p2.call(null, G__8547);
          }();
          if (cljs.core.truth_(or__4072__auto____$1)) {
            return or__4072__auto____$1;
          } else {
            var or__4072__auto____$2 = function() {
              var G__8549 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8549) : p3.call(null, G__8549);
            }();
            if (cljs.core.truth_(or__4072__auto____$2)) {
              return or__4072__auto____$2;
            } else {
              var or__4072__auto____$3 = function() {
                var G__8551 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8551) : p1.call(null, G__8551);
              }();
              if (cljs.core.truth_(or__4072__auto____$3)) {
                return or__4072__auto____$3;
              } else {
                var or__4072__auto____$4 = function() {
                  var G__8553 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8553) : p2.call(null, G__8553);
                }();
                if (cljs.core.truth_(or__4072__auto____$4)) {
                  return or__4072__auto____$4;
                } else {
                  var G__8554 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8554) : p3.call(null, G__8554);
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp3__3 = function(x, y, z) {
        var or__4072__auto__ = function() {
          var G__8556 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8556) : p1.call(null, G__8556);
        }();
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          var or__4072__auto____$1 = function() {
            var G__8558 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8558) : p2.call(null, G__8558);
          }();
          if (cljs.core.truth_(or__4072__auto____$1)) {
            return or__4072__auto____$1;
          } else {
            var or__4072__auto____$2 = function() {
              var G__8560 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8560) : p3.call(null, G__8560);
            }();
            if (cljs.core.truth_(or__4072__auto____$2)) {
              return or__4072__auto____$2;
            } else {
              var or__4072__auto____$3 = function() {
                var G__8562 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8562) : p1.call(null, G__8562);
              }();
              if (cljs.core.truth_(or__4072__auto____$3)) {
                return or__4072__auto____$3;
              } else {
                var or__4072__auto____$4 = function() {
                  var G__8564 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8564) : p2.call(null, G__8564);
                }();
                if (cljs.core.truth_(or__4072__auto____$4)) {
                  return or__4072__auto____$4;
                } else {
                  var or__4072__auto____$5 = function() {
                    var G__8566 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8566) : p3.call(null, G__8566);
                  }();
                  if (cljs.core.truth_(or__4072__auto____$5)) {
                    return or__4072__auto____$5;
                  } else {
                    var or__4072__auto____$6 = function() {
                      var G__8568 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8568) : p1.call(null, G__8568);
                    }();
                    if (cljs.core.truth_(or__4072__auto____$6)) {
                      return or__4072__auto____$6;
                    } else {
                      var or__4072__auto____$7 = function() {
                        var G__8570 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8570) : p2.call(null, G__8570);
                      }();
                      if (cljs.core.truth_(or__4072__auto____$7)) {
                        return or__4072__auto____$7;
                      } else {
                        var G__8571 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8571) : p3.call(null, G__8571);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp3__4 = function() {
        var G__8611__delegate = function(x, y, z, args) {
          var or__4072__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4072__auto__)) {
            return or__4072__auto__;
          } else {
            return cljs.core.some(function(or__4072__auto__) {
              return function(p1__8228_SHARP_) {
                var or__4072__auto____$1 = function() {
                  var G__8573 = p1__8228_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8573) : p1.call(null, G__8573);
                }();
                if (cljs.core.truth_(or__4072__auto____$1)) {
                  return or__4072__auto____$1;
                } else {
                  var or__4072__auto____$2 = function() {
                    var G__8575 = p1__8228_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8575) : p2.call(null, G__8575);
                  }();
                  if (cljs.core.truth_(or__4072__auto____$2)) {
                    return or__4072__auto____$2;
                  } else {
                    var G__8576 = p1__8228_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8576) : p3.call(null, G__8576);
                  }
                }
              };
            }(or__4072__auto__), args);
          }
        };
        var G__8611 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8612__i = 0, G__8612__a = new Array(arguments.length - 3);
            while (G__8612__i < G__8612__a.length) {
              G__8612__a[G__8612__i] = arguments[G__8612__i + 3];
              ++G__8612__i;
            }
            args = new cljs.core.IndexedSeq(G__8612__a, 0);
          }
          return G__8611__delegate.call(this, x, y, z, args);
        };
        G__8611.cljs$lang$maxFixedArity = 3;
        G__8611.cljs$lang$applyTo = function(arglist__8613) {
          var x = cljs.core.first(arglist__8613);
          arglist__8613 = cljs.core.next(arglist__8613);
          var y = cljs.core.first(arglist__8613);
          arglist__8613 = cljs.core.next(arglist__8613);
          var z = cljs.core.first(arglist__8613);
          var args = cljs.core.rest(arglist__8613);
          return G__8611__delegate(x, y, z, args);
        };
        G__8611.cljs$core$IFn$_invoke$arity$variadic = G__8611__delegate;
        return G__8611;
      }();
      cljs$core$some_fn_$_sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp3__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp3__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp3__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp3__3.call(this, x, y, z);
          default:
            var G__8614 = null;
            if (arguments.length > 3) {
              var G__8615__i = 0, G__8615__a = new Array(arguments.length - 3);
              while (G__8615__i < G__8615__a.length) {
                G__8615__a[G__8615__i] = arguments[G__8615__i + 3];
                ++G__8615__i;
              }
              G__8614 = new cljs.core.IndexedSeq(G__8615__a, 0);
            }
            return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8614);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp3;
    }();
  };
  var cljs$core$some_fn__4 = function() {
    var G__8616__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var cljs$core$some_fn_$_spn = null;
          var cljs$core$some_fn_$_spn__0 = function() {
            return null;
          };
          var cljs$core$some_fn_$_spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8229_SHARP_) {
                var G__8592 = x;
                return p1__8229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8229_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8592) : p1__8229_SHARP_.call(null, G__8592);
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8230_SHARP_) {
                var or__4072__auto__ = function() {
                  var G__8594 = x;
                  return p1__8230_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8230_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8594) : p1__8230_SHARP_.call(null, G__8594);
                }();
                if (cljs.core.truth_(or__4072__auto__)) {
                  return or__4072__auto__;
                } else {
                  var G__8595 = y;
                  return p1__8230_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8230_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8595) : p1__8230_SHARP_.call(null, G__8595);
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8231_SHARP_) {
                var or__4072__auto__ = function() {
                  var G__8597 = x;
                  return p1__8231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8231_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8597) : p1__8231_SHARP_.call(null, G__8597);
                }();
                if (cljs.core.truth_(or__4072__auto__)) {
                  return or__4072__auto__;
                } else {
                  var or__4072__auto____$1 = function() {
                    var G__8599 = y;
                    return p1__8231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8231_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8599) : p1__8231_SHARP_.call(null, G__8599);
                  }();
                  if (cljs.core.truth_(or__4072__auto____$1)) {
                    return or__4072__auto____$1;
                  } else {
                    var G__8600 = z;
                    return p1__8231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8231_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8600) : p1__8231_SHARP_.call(null, G__8600);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__4 = function() {
            var G__8617__delegate = function(x, y, z, args) {
              var or__4072__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__4072__auto__)) {
                return or__4072__auto__;
              } else {
                return cljs.core.some(function(or__4072__auto__, ps__$1) {
                  return function(p1__8232_SHARP_) {
                    return cljs.core.some(p1__8232_SHARP_, args);
                  };
                }(or__4072__auto__, ps__$1), ps__$1);
              }
            };
            var G__8617 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8618__i = 0, G__8618__a = new Array(arguments.length - 3);
                while (G__8618__i < G__8618__a.length) {
                  G__8618__a[G__8618__i] = arguments[G__8618__i + 3];
                  ++G__8618__i;
                }
                args = new cljs.core.IndexedSeq(G__8618__a, 0);
              }
              return G__8617__delegate.call(this, x, y, z, args);
            };
            G__8617.cljs$lang$maxFixedArity = 3;
            G__8617.cljs$lang$applyTo = function(arglist__8619) {
              var x = cljs.core.first(arglist__8619);
              arglist__8619 = cljs.core.next(arglist__8619);
              var y = cljs.core.first(arglist__8619);
              arglist__8619 = cljs.core.next(arglist__8619);
              var z = cljs.core.first(arglist__8619);
              var args = cljs.core.rest(arglist__8619);
              return G__8617__delegate(x, y, z, args);
            };
            G__8617.cljs$core$IFn$_invoke$arity$variadic = G__8617__delegate;
            return G__8617;
          }();
          cljs$core$some_fn_$_spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return cljs$core$some_fn_$_spn__0.call(this);
              case 1:
                return cljs$core$some_fn_$_spn__1.call(this, x);
              case 2:
                return cljs$core$some_fn_$_spn__2.call(this, x, y);
              case 3:
                return cljs$core$some_fn_$_spn__3.call(this, x, y, z);
              default:
                var G__8620 = null;
                if (arguments.length > 3) {
                  var G__8621__i = 0, G__8621__a = new Array(arguments.length - 3);
                  while (G__8621__i < G__8621__a.length) {
                    G__8621__a[G__8621__i] = arguments[G__8621__i + 3];
                    ++G__8621__i;
                  }
                  G__8620 = new cljs.core.IndexedSeq(G__8621__a, 0);
                }
                return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8620);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
          cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return cljs$core$some_fn_$_spn;
        }();
      }(ps__$1);
    };
    var G__8616 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8622__i = 0, G__8622__a = new Array(arguments.length - 3);
        while (G__8622__i < G__8622__a.length) {
          G__8622__a[G__8622__i] = arguments[G__8622__i + 3];
          ++G__8622__i;
        }
        ps = new cljs.core.IndexedSeq(G__8622__a, 0);
      }
      return G__8616__delegate.call(this, p1, p2, p3, ps);
    };
    G__8616.cljs$lang$maxFixedArity = 3;
    G__8616.cljs$lang$applyTo = function(arglist__8623) {
      var p1 = cljs.core.first(arglist__8623);
      arglist__8623 = cljs.core.next(arglist__8623);
      var p2 = cljs.core.first(arglist__8623);
      arglist__8623 = cljs.core.next(arglist__8623);
      var p3 = cljs.core.first(arglist__8623);
      var ps = cljs.core.rest(arglist__8623);
      return G__8616__delegate(p1, p2, p3, ps);
    };
    G__8616.cljs$core$IFn$_invoke$arity$variadic = G__8616__delegate;
    return G__8616;
  }();
  cljs$core$some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$some_fn__1.call(this, p1);
      case 2:
        return cljs$core$some_fn__2.call(this, p1, p2);
      case 3:
        return cljs$core$some_fn__3.call(this, p1, p2, p3);
      default:
        var G__8624 = null;
        if (arguments.length > 3) {
          var G__8625__i = 0, G__8625__a = new Array(arguments.length - 3);
          while (G__8625__i < G__8625__a.length) {
            G__8625__a[G__8625__i] = arguments[G__8625__i + 3];
            ++G__8625__i;
          }
          G__8624 = new cljs.core.IndexedSeq(G__8625__a, 0);
        }
        return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8624);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
  cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$some_fn;
}();
cljs.core.map = function() {
  var cljs$core$map = null;
  var cljs$core$map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__8680 = null;
        var G__8680__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8680__1 = function(result) {
          var G__8666 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8666) : rf.call(null, G__8666);
        };
        var G__8680__2 = function(result, input) {
          var G__8667 = result;
          var G__8668 = function() {
            var G__8669 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8669) : f.call(null, G__8669);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8667, G__8668) : rf.call(null, G__8667, G__8668);
        };
        var G__8680__3 = function() {
          var G__8681__delegate = function(result, input, inputs) {
            var G__8670 = result;
            var G__8671 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8670, G__8671) : rf.call(null, G__8670, G__8671);
          };
          var G__8681 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__8682__i = 0, G__8682__a = new Array(arguments.length - 2);
              while (G__8682__i < G__8682__a.length) {
                G__8682__a[G__8682__i] = arguments[G__8682__i + 2];
                ++G__8682__i;
              }
              inputs = new cljs.core.IndexedSeq(G__8682__a, 0);
            }
            return G__8681__delegate.call(this, result, input, inputs);
          };
          G__8681.cljs$lang$maxFixedArity = 2;
          G__8681.cljs$lang$applyTo = function(arglist__8683) {
            var result = cljs.core.first(arglist__8683);
            arglist__8683 = cljs.core.next(arglist__8683);
            var input = cljs.core.first(arglist__8683);
            var inputs = cljs.core.rest(arglist__8683);
            return G__8681__delegate(result, input, inputs);
          };
          G__8681.cljs$core$IFn$_invoke$arity$variadic = G__8681__delegate;
          return G__8681;
        }();
        G__8680 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__8680__0.call(this);
            case 1:
              return G__8680__1.call(this, result);
            case 2:
              return G__8680__2.call(this, result, input);
            default:
              var G__8684 = null;
              if (arguments.length > 2) {
                var G__8685__i = 0, G__8685__a = new Array(arguments.length - 2);
                while (G__8685__i < G__8685__a.length) {
                  G__8685__a[G__8685__i] = arguments[G__8685__i + 2];
                  ++G__8685__i;
                }
                G__8684 = new cljs.core.IndexedSeq(G__8685__a, 0);
              }
              return G__8680__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__8684);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8680.cljs$lang$maxFixedArity = 2;
        G__8680.cljs$lang$applyTo = G__8680__3.cljs$lang$applyTo;
        G__8680.cljs$core$IFn$_invoke$arity$0 = G__8680__0;
        G__8680.cljs$core$IFn$_invoke$arity$1 = G__8680__1;
        G__8680.cljs$core$IFn$_invoke$arity$2 = G__8680__2;
        G__8680.cljs$core$IFn$_invoke$arity$variadic = G__8680__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__8680;
      }();
    };
  };
  var cljs$core$map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4959__auto___8686 = size;
          var i_8687 = 0;
          while (true) {
            if (i_8687 < n__4959__auto___8686) {
              cljs.core.chunk_append(b, function() {
                var G__8672 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8687);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8672) : f.call(null, G__8672);
              }());
              var G__8688 = i_8687 + 1;
              i_8687 = G__8688;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__8673 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8673) : f.call(null, G__8673);
          }(), cljs$core$map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__8674 = cljs.core.first(s1);
          var G__8675 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8674, G__8675) : f.call(null, G__8674, G__8675);
        }(), cljs$core$map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__8676 = cljs.core.first(s1);
          var G__8677 = cljs.core.first(s2);
          var G__8678 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8676, G__8677, G__8678) : f.call(null, G__8676, G__8677, G__8678);
        }(), cljs$core$map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__5 = function() {
    var G__8689__delegate = function(f, c1, c2, c3, colls) {
      var step = function cljs$core$map_$_step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return cljs$core$map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__8626_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__8626_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__8689 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8690__i = 0, G__8690__a = new Array(arguments.length - 4);
        while (G__8690__i < G__8690__a.length) {
          G__8690__a[G__8690__i] = arguments[G__8690__i + 4];
          ++G__8690__i;
        }
        colls = new cljs.core.IndexedSeq(G__8690__a, 0);
      }
      return G__8689__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8689.cljs$lang$maxFixedArity = 4;
    G__8689.cljs$lang$applyTo = function(arglist__8691) {
      var f = cljs.core.first(arglist__8691);
      arglist__8691 = cljs.core.next(arglist__8691);
      var c1 = cljs.core.first(arglist__8691);
      arglist__8691 = cljs.core.next(arglist__8691);
      var c2 = cljs.core.first(arglist__8691);
      arglist__8691 = cljs.core.next(arglist__8691);
      var c3 = cljs.core.first(arglist__8691);
      var colls = cljs.core.rest(arglist__8691);
      return G__8689__delegate(f, c1, c2, c3, colls);
    };
    G__8689.cljs$core$IFn$_invoke$arity$variadic = G__8689__delegate;
    return G__8689;
  }();
  cljs$core$map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$map__1.call(this, f);
      case 2:
        return cljs$core$map__2.call(this, f, c1);
      case 3:
        return cljs$core$map__3.call(this, f, c1, c2);
      case 4:
        return cljs$core$map__4.call(this, f, c1, c2, c3);
      default:
        var G__8692 = null;
        if (arguments.length > 4) {
          var G__8693__i = 0, G__8693__a = new Array(arguments.length - 4);
          while (G__8693__i < G__8693__a.length) {
            G__8693__a[G__8693__i] = arguments[G__8693__i + 4];
            ++G__8693__i;
          }
          G__8692 = new cljs.core.IndexedSeq(G__8693__a, 0);
        }
        return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8692);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$map.cljs$lang$maxFixedArity = 4;
  cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
  cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
  cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
  cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
  cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
  cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$map;
}();
cljs.core.take = function() {
  var cljs$core$take = null;
  var cljs$core$take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8702 = null;
          var G__8702__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8702__1 = function(result) {
            var G__8699 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8699) : rf.call(null, G__8699);
          };
          var G__8702__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__8700 = result;
              var G__8701 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8700, G__8701) : rf.call(null, G__8700, G__8701);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__8702 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8702__0.call(this);
              case 1:
                return G__8702__1.call(this, result);
              case 2:
                return G__8702__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8702.cljs$core$IFn$_invoke$arity$0 = G__8702__0;
          G__8702.cljs$core$IFn$_invoke$arity$1 = G__8702__1;
          G__8702.cljs$core$IFn$_invoke$arity$2 = G__8702__2;
          return G__8702;
        }();
      }(na);
    };
  };
  var cljs$core$take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), cljs$core$take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take__1.call(this, n);
      case 2:
        return cljs$core$take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
  cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
  return cljs$core$take;
}();
cljs.core.drop = function() {
  var cljs$core$drop = null;
  var cljs$core$drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8709 = null;
          var G__8709__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8709__1 = function(result) {
            var G__8706 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8706) : rf.call(null, G__8706);
          };
          var G__8709__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__8707 = result;
              var G__8708 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8707, G__8708) : rf.call(null, G__8707, G__8708);
            }
          };
          G__8709 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8709__0.call(this);
              case 1:
                return G__8709__1.call(this, result);
              case 2:
                return G__8709__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8709.cljs$core$IFn$_invoke$arity$0 = G__8709__0;
          G__8709.cljs$core$IFn$_invoke$arity$1 = G__8709__1;
          G__8709.cljs$core$IFn$_invoke$arity$2 = G__8709__2;
          return G__8709;
        }();
      }(na);
    };
  };
  var cljs$core$drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__8710 = n__$1 - 1;
          var G__8711 = cljs.core.rest(s);
          n__$1 = G__8710;
          coll__$1 = G__8711;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  cljs$core$drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop__1.call(this, n);
      case 2:
        return cljs$core$drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
  cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
  return cljs$core$drop;
}();
cljs.core.drop_last = function() {
  var cljs$core$drop_last = null;
  var cljs$core$drop_last__1 = function(s) {
    return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var cljs$core$drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  cljs$core$drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop_last__1.call(this, n);
      case 2:
        return cljs$core$drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
  cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
  return cljs$core$drop_last;
}();
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__8714 = cljs.core.next(s);
      var G__8715 = cljs.core.next(lead);
      s = G__8714;
      lead = G__8715;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var cljs$core$drop_while = null;
  var cljs$core$drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__8728 = null;
          var G__8728__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8728__1 = function(result) {
            var G__8722 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8722) : rf.call(null, G__8722);
          };
          var G__8728__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__4060__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__4060__auto__)) {
                var G__8723 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8723) : pred.call(null, G__8723);
              } else {
                return and__4060__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__8724 = result;
              var G__8725 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8724, G__8725) : rf.call(null, G__8724, G__8725);
            }
          };
          G__8728 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8728__0.call(this);
              case 1:
                return G__8728__1.call(this, result);
              case 2:
                return G__8728__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8728.cljs$core$IFn$_invoke$arity$0 = G__8728__0;
          G__8728.cljs$core$IFn$_invoke$arity$1 = G__8728__1;
          G__8728.cljs$core$IFn$_invoke$arity$2 = G__8728__2;
          return G__8728;
        }();
      }(da);
    };
  };
  var cljs$core$drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__4060__auto__ = s;
          if (and__4060__auto__) {
            var G__8727 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8727) : pred__$1.call(null, G__8727);
          } else {
            return and__4060__auto__;
          }
        }())) {
          var G__8729 = pred__$1;
          var G__8730 = cljs.core.rest(s);
          pred__$1 = G__8729;
          coll__$1 = G__8730;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  cljs$core$drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop_while__1.call(this, pred);
      case 2:
        return cljs$core$drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
  cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
  return cljs$core$drop_while;
}();
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var cljs$core$repeat = null;
  var cljs$core$repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var cljs$core$repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  cljs$core$repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return cljs$core$repeat__1.call(this, n);
      case 2:
        return cljs$core$repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
  cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
  return cljs$core$repeat;
}();
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var cljs$core$repeatedly = null;
  var cljs$core$repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var cljs$core$repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  cljs$core$repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return cljs$core$repeatedly__1.call(this, n);
      case 2:
        return cljs$core$repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
  cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
  return cljs$core$repeatedly;
}();
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__8739 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8739) : f.call(null, G__8739);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var cljs$core$interleave = null;
  var cljs$core$interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$interleave__3 = function() {
    var G__8742__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__8742 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__8743__i = 0, G__8743__a = new Array(arguments.length - 2);
        while (G__8743__i < G__8743__a.length) {
          G__8743__a[G__8743__i] = arguments[G__8743__i + 2];
          ++G__8743__i;
        }
        colls = new cljs.core.IndexedSeq(G__8743__a, 0);
      }
      return G__8742__delegate.call(this, c1, c2, colls);
    };
    G__8742.cljs$lang$maxFixedArity = 2;
    G__8742.cljs$lang$applyTo = function(arglist__8744) {
      var c1 = cljs.core.first(arglist__8744);
      arglist__8744 = cljs.core.next(arglist__8744);
      var c2 = cljs.core.first(arglist__8744);
      var colls = cljs.core.rest(arglist__8744);
      return G__8742__delegate(c1, c2, colls);
    };
    G__8742.cljs$core$IFn$_invoke$arity$variadic = G__8742__delegate;
    return G__8742;
  }();
  cljs$core$interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$interleave__2.call(this, c1, c2);
      default:
        var G__8745 = null;
        if (arguments.length > 2) {
          var G__8746__i = 0, G__8746__a = new Array(arguments.length - 2);
          while (G__8746__i < G__8746__a.length) {
            G__8746__a[G__8746__i] = arguments[G__8746__i + 2];
            ++G__8746__i;
          }
          G__8745 = new cljs.core.IndexedSeq(G__8746__a, 0);
        }
        return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__8745);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$interleave.cljs$lang$maxFixedArity = 2;
  cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
  cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
  cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$interleave;
}();
cljs.core.interpose = function() {
  var cljs$core$interpose = null;
  var cljs$core$interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__8761 = null;
          var G__8761__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8761__1 = function(result) {
            var G__8754 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8754) : rf.call(null, G__8754);
          };
          var G__8761__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__8755 = result;
                var G__8756 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8755, G__8756) : rf.call(null, G__8755, G__8756);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__8757 = sepr;
                var G__8758 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8757, G__8758) : rf.call(null, G__8757, G__8758);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__8759 = result;
              var G__8760 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8759, G__8760) : rf.call(null, G__8759, G__8760);
            }
          };
          G__8761 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8761__0.call(this);
              case 1:
                return G__8761__1.call(this, result);
              case 2:
                return G__8761__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8761.cljs$core$IFn$_invoke$arity$0 = G__8761__0;
          G__8761.cljs$core$IFn$_invoke$arity$1 = G__8761__1;
          G__8761.cljs$core$IFn$_invoke$arity$2 = G__8761__2;
          return G__8761;
        }();
      }(started);
    };
  };
  var cljs$core$interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  cljs$core$interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$interpose__1.call(this, sep);
      case 2:
        return cljs$core$interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
  cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
  return cljs$core$interpose;
}();
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var cljs$core$mapcat = null;
  var cljs$core$mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var cljs$core$mapcat__2 = function() {
    var G__8770__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__8770 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__8771__i = 0, G__8771__a = new Array(arguments.length - 1);
        while (G__8771__i < G__8771__a.length) {
          G__8771__a[G__8771__i] = arguments[G__8771__i + 1];
          ++G__8771__i;
        }
        colls = new cljs.core.IndexedSeq(G__8771__a, 0);
      }
      return G__8770__delegate.call(this, f, colls);
    };
    G__8770.cljs$lang$maxFixedArity = 1;
    G__8770.cljs$lang$applyTo = function(arglist__8772) {
      var f = cljs.core.first(arglist__8772);
      var colls = cljs.core.rest(arglist__8772);
      return G__8770__delegate(f, colls);
    };
    G__8770.cljs$core$IFn$_invoke$arity$variadic = G__8770__delegate;
    return G__8770;
  }();
  cljs$core$mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$mapcat__1.call(this, f);
      default:
        var G__8773 = null;
        if (arguments.length > 1) {
          var G__8774__i = 0, G__8774__a = new Array(arguments.length - 1);
          while (G__8774__i < G__8774__a.length) {
            G__8774__a[G__8774__i] = arguments[G__8774__i + 1];
            ++G__8774__i;
          }
          G__8773 = new cljs.core.IndexedSeq(G__8774__a, 0);
        }
        return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8773);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
  cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
  cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
  cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$mapcat;
}();
cljs.core.filter = function() {
  var cljs$core$filter = null;
  var cljs$core$filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__8793 = null;
        var G__8793__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8793__1 = function(result) {
          var G__8787 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8787) : rf.call(null, G__8787);
        };
        var G__8793__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__8788 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8788) : pred.call(null, G__8788);
          }())) {
            var G__8789 = result;
            var G__8790 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8789, G__8790) : rf.call(null, G__8789, G__8790);
          } else {
            return result;
          }
        };
        G__8793 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8793__0.call(this);
            case 1:
              return G__8793__1.call(this, result);
            case 2:
              return G__8793__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8793.cljs$core$IFn$_invoke$arity$0 = G__8793__0;
        G__8793.cljs$core$IFn$_invoke$arity$1 = G__8793__1;
        G__8793.cljs$core$IFn$_invoke$arity$2 = G__8793__2;
        return G__8793;
      }();
    };
  };
  var cljs$core$filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4959__auto___8794 = size;
          var i_8795 = 0;
          while (true) {
            if (i_8795 < n__4959__auto___8794) {
              if (cljs.core.truth_(function() {
                var G__8791 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8795);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8791) : pred.call(null, G__8791);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8795));
              } else {
              }
              var G__8796 = i_8795 + 1;
              i_8795 = G__8796;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__8792 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8792) : pred.call(null, G__8792);
          }())) {
            return cljs.core.cons(f, cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$filter__1.call(this, pred);
      case 2:
        return cljs$core$filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
  cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
  return cljs$core$filter;
}();
cljs.core.remove = function() {
  var cljs$core$remove = null;
  var cljs$core$remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var cljs$core$remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  cljs$core$remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$remove__1.call(this, pred);
      case 2:
        return cljs$core$remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
  cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
  return cljs$core$remove;
}();
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__8803 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8803) : branch_QMARK_.call(null, G__8803);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__8804 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8804) : children.call(null, G__8804);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__8805_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__8805_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var cljs$core$into = null;
  var cljs$core$into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__8808 = to;
        if (G__8808) {
          var bit__4746__auto__ = G__8808.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4746__auto__ || G__8808.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var cljs$core$into__3 = function(to, xform, from) {
    if (function() {
      var G__8809 = to;
      if (G__8809) {
        var bit__4746__auto__ = G__8809.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4746__auto__ || G__8809.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  cljs$core$into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return cljs$core$into__2.call(this, to, xform);
      case 3:
        return cljs$core$into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
  cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
  return cljs$core$into;
}();
cljs.core.mapv = function() {
  var cljs$core$mapv = null;
  var cljs$core$mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__8811 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8811) : f.call(null, G__8811);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var cljs$core$mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var cljs$core$mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var cljs$core$mapv__5 = function() {
    var G__8812__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__8812 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8813__i = 0, G__8813__a = new Array(arguments.length - 4);
        while (G__8813__i < G__8813__a.length) {
          G__8813__a[G__8813__i] = arguments[G__8813__i + 4];
          ++G__8813__i;
        }
        colls = new cljs.core.IndexedSeq(G__8813__a, 0);
      }
      return G__8812__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8812.cljs$lang$maxFixedArity = 4;
    G__8812.cljs$lang$applyTo = function(arglist__8814) {
      var f = cljs.core.first(arglist__8814);
      arglist__8814 = cljs.core.next(arglist__8814);
      var c1 = cljs.core.first(arglist__8814);
      arglist__8814 = cljs.core.next(arglist__8814);
      var c2 = cljs.core.first(arglist__8814);
      arglist__8814 = cljs.core.next(arglist__8814);
      var c3 = cljs.core.first(arglist__8814);
      var colls = cljs.core.rest(arglist__8814);
      return G__8812__delegate(f, c1, c2, c3, colls);
    };
    G__8812.cljs$core$IFn$_invoke$arity$variadic = G__8812__delegate;
    return G__8812;
  }();
  cljs$core$mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$mapv__2.call(this, f, c1);
      case 3:
        return cljs$core$mapv__3.call(this, f, c1, c2);
      case 4:
        return cljs$core$mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__8815 = null;
        if (arguments.length > 4) {
          var G__8816__i = 0, G__8816__a = new Array(arguments.length - 4);
          while (G__8816__i < G__8816__a.length) {
            G__8816__a[G__8816__i] = arguments[G__8816__i + 4];
            ++G__8816__i;
          }
          G__8815 = new cljs.core.IndexedSeq(G__8816__a, 0);
        }
        return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8815);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$mapv.cljs$lang$maxFixedArity = 4;
  cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$mapv;
}();
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__8818 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8818) : pred.call(null, G__8818);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var cljs$core$partition = null;
  var cljs$core$partition__2 = function(n, coll) {
    return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var cljs$core$partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$partition__2.call(this, n, step);
      case 3:
        return cljs$core$partition__3.call(this, n, step, pad);
      case 4:
        return cljs$core$partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
  cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
  cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
  return cljs$core$partition;
}();
cljs.core.get_in = function() {
  var cljs$core$get_in = null;
  var cljs$core$get_in__2 = function(m, ks) {
    return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var cljs$core$get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__8833 = m__$1;
          if (G__8833) {
            var bit__4753__auto__ = G__8833.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4753__auto__ || G__8833.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__8833.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__8833);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__8833);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__8834 = sentinel;
            var G__8835 = m__$2;
            var G__8836 = cljs.core.next(ks__$1);
            sentinel = G__8834;
            m__$1 = G__8835;
            ks__$1 = G__8836;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  cljs$core$get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$get_in__2.call(this, m, ks);
      case 3:
        return cljs$core$get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
  cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
  return cljs$core$get_in;
}();
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__8837, v) {
  var vec__8842 = p__8837;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8842, 0, null);
  var ks = cljs.core.nthnext(vec__8842, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var cljs$core$update_in = null;
  var cljs$core$update_in__3 = function(m, p__8843, f) {
    var vec__8881 = p__8843;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8881, 0, null);
    var ks = cljs.core.nthnext(vec__8881, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8882 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8882) : f.call(null, G__8882);
      }());
    }
  };
  var cljs$core$update_in__4 = function(m, p__8844, f, a) {
    var vec__8883 = p__8844;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8883, 0, null);
    var ks = cljs.core.nthnext(vec__8883, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8884 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__8885 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8884, G__8885) : f.call(null, G__8884, G__8885);
      }());
    }
  };
  var cljs$core$update_in__5 = function(m, p__8845, f, a, b) {
    var vec__8886 = p__8845;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8886, 0, null);
    var ks = cljs.core.nthnext(vec__8886, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8887 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__8888 = a;
        var G__8889 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8887, G__8888, G__8889) : f.call(null, G__8887, G__8888, G__8889);
      }());
    }
  };
  var cljs$core$update_in__6 = function(m, p__8846, f, a, b, c) {
    var vec__8890 = p__8846;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8890, 0, null);
    var ks = cljs.core.nthnext(vec__8890, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8891 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__8892 = a;
        var G__8893 = b;
        var G__8894 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8891, G__8892, G__8893, G__8894) : f.call(null, G__8891, G__8892, G__8893, G__8894);
      }());
    }
  };
  var cljs$core$update_in__7 = function() {
    var G__8896__delegate = function(m, p__8847, f, a, b, c, args) {
      var vec__8895 = p__8847;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8895, 0, null);
      var ks = cljs.core.nthnext(vec__8895, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__8896 = function(m, p__8847, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__8897__i = 0, G__8897__a = new Array(arguments.length - 6);
        while (G__8897__i < G__8897__a.length) {
          G__8897__a[G__8897__i] = arguments[G__8897__i + 6];
          ++G__8897__i;
        }
        args = new cljs.core.IndexedSeq(G__8897__a, 0);
      }
      return G__8896__delegate.call(this, m, p__8847, f, a, b, c, args);
    };
    G__8896.cljs$lang$maxFixedArity = 6;
    G__8896.cljs$lang$applyTo = function(arglist__8898) {
      var m = cljs.core.first(arglist__8898);
      arglist__8898 = cljs.core.next(arglist__8898);
      var p__8847 = cljs.core.first(arglist__8898);
      arglist__8898 = cljs.core.next(arglist__8898);
      var f = cljs.core.first(arglist__8898);
      arglist__8898 = cljs.core.next(arglist__8898);
      var a = cljs.core.first(arglist__8898);
      arglist__8898 = cljs.core.next(arglist__8898);
      var b = cljs.core.first(arglist__8898);
      arglist__8898 = cljs.core.next(arglist__8898);
      var c = cljs.core.first(arglist__8898);
      var args = cljs.core.rest(arglist__8898);
      return G__8896__delegate(m, p__8847, f, a, b, c, args);
    };
    G__8896.cljs$core$IFn$_invoke$arity$variadic = G__8896__delegate;
    return G__8896;
  }();
  cljs$core$update_in = function(m, p__8847, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$update_in__3.call(this, m, p__8847, f);
      case 4:
        return cljs$core$update_in__4.call(this, m, p__8847, f, a);
      case 5:
        return cljs$core$update_in__5.call(this, m, p__8847, f, a, b);
      case 6:
        return cljs$core$update_in__6.call(this, m, p__8847, f, a, b, c);
      default:
        var G__8899 = null;
        if (arguments.length > 6) {
          var G__8900__i = 0, G__8900__a = new Array(arguments.length - 6);
          while (G__8900__i < G__8900__a.length) {
            G__8900__a[G__8900__i] = arguments[G__8900__i + 6];
            ++G__8900__i;
          }
          G__8899 = new cljs.core.IndexedSeq(G__8900__a, 0);
        }
        return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__8847, f, a, b, c, G__8899);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$update_in.cljs$lang$maxFixedArity = 6;
  cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$update_in;
}();
cljs.core.update = function() {
  var cljs$core$update = null;
  var cljs$core$update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8911 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8911) : f.call(null, G__8911);
    }());
  };
  var cljs$core$update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8912 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8913 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8912, G__8913) : f.call(null, G__8912, G__8913);
    }());
  };
  var cljs$core$update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8914 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8915 = x;
      var G__8916 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8914, G__8915, G__8916) : f.call(null, G__8914, G__8915, G__8916);
    }());
  };
  var cljs$core$update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8917 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8918 = x;
      var G__8919 = y;
      var G__8920 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8917, G__8918, G__8919, G__8920) : f.call(null, G__8917, G__8918, G__8919, G__8920);
    }());
  };
  var cljs$core$update__7 = function() {
    var G__8921__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__8921 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__8922__i = 0, G__8922__a = new Array(arguments.length - 6);
        while (G__8922__i < G__8922__a.length) {
          G__8922__a[G__8922__i] = arguments[G__8922__i + 6];
          ++G__8922__i;
        }
        more = new cljs.core.IndexedSeq(G__8922__a, 0);
      }
      return G__8921__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__8921.cljs$lang$maxFixedArity = 6;
    G__8921.cljs$lang$applyTo = function(arglist__8923) {
      var m = cljs.core.first(arglist__8923);
      arglist__8923 = cljs.core.next(arglist__8923);
      var k = cljs.core.first(arglist__8923);
      arglist__8923 = cljs.core.next(arglist__8923);
      var f = cljs.core.first(arglist__8923);
      arglist__8923 = cljs.core.next(arglist__8923);
      var x = cljs.core.first(arglist__8923);
      arglist__8923 = cljs.core.next(arglist__8923);
      var y = cljs.core.first(arglist__8923);
      arglist__8923 = cljs.core.next(arglist__8923);
      var z = cljs.core.first(arglist__8923);
      var more = cljs.core.rest(arglist__8923);
      return G__8921__delegate(m, k, f, x, y, z, more);
    };
    G__8921.cljs$core$IFn$_invoke$arity$variadic = G__8921__delegate;
    return G__8921;
  }();
  cljs$core$update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$update__3.call(this, m, k, f);
      case 4:
        return cljs$core$update__4.call(this, m, k, f, x);
      case 5:
        return cljs$core$update__5.call(this, m, k, f, x, y);
      case 6:
        return cljs$core$update__6.call(this, m, k, f, x, y, z);
      default:
        var G__8924 = null;
        if (arguments.length > 6) {
          var G__8925__i = 0, G__8925__a = new Array(arguments.length - 6);
          while (G__8925__i < G__8925__a.length) {
            G__8925__a[G__8925__i] = arguments[G__8925__i + 6];
            ++G__8925__i;
          }
          G__8924 = new cljs.core.IndexedSeq(G__8925__a, 0);
        }
        return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__8924);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$update.cljs$lang$maxFixedArity = 6;
  cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
  cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
  cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
  cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
  cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
  cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__8926 = ll - 5;
      var G__8927 = r;
      ll = G__8926;
      ret = G__8927;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__8932 = cljs.core.pv_aget(node, 0);
      var G__8933 = level - 5;
      node = G__8932;
      level = G__8933;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__8934 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__8935 = level - 5;
        node = G__8934;
        level = G__8935;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8945 = init__$2;
              var G__8946 = j + i;
              var G__8947 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8945, G__8946, G__8947) : f.call(null, G__8945, G__8946, G__8947);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8958 = j + 1;
              var G__8959 = init__$3;
              j = G__8958;
              init__$2 = G__8959;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__8948 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8948) : cljs.core.deref.call(null, G__8948);
      } else {
        var G__8960 = i + len;
        var G__8961 = init__$2;
        i = G__8960;
        init__$1 = G__8961;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__8949 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__8949) : cljs.core.tv_editable_root.call(null, G__8949);
  }(), function() {
    var G__8950 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__8950) : cljs.core.tv_editable_tail.call(null, G__8950);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8951 = init__$2;
              var G__8952 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8951, G__8952) : f.call(null, G__8951, G__8952);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8962 = j + 1;
              var G__8963 = init__$3;
              j = G__8962;
              init__$2 = G__8963;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__8953 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8953) : cljs.core.deref.call(null, G__8953);
      } else {
        var G__8964 = i + len;
        var G__8965 = init__$2;
        i = G__8964;
        init__$1 = G__8965;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__8954 = coll__$1;
      var G__8955 = cljs.core.first_array_for_longvec(coll__$1);
      var G__8956 = 0;
      var G__8957 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8954, G__8955, G__8956, G__8957) : cljs.core.chunked_seq.call(null, G__8954, G__8955, G__8956, G__8957);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4959__auto___8966 = len;
    var i_8967 = 0;
    while (true) {
      if (i_8967 < n__4959__auto___8966) {
        new_tail[i_8967] = self__.tail[i_8967];
        var G__8968 = i_8967 + 1;
        i_8967 = G__8968;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__8969 = null;
  var G__8969__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8969__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8969 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8969__2.call(this, self__, k);
      case 3:
        return G__8969__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8969.cljs$core$IFn$_invoke$arity$2 = G__8969__2;
  G__8969.cljs$core$IFn$_invoke$arity$3 = G__8969__3;
  return G__8969;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args8944) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8944)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__8970 = i + 1;
        var G__8971 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__8970;
        out = G__8971;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var cljs$core$vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var cljs$core$vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__8972__i = 0, G__8972__a = new Array(arguments.length - 0);
      while (G__8972__i < G__8972__a.length) {
        G__8972__a[G__8972__i] = arguments[G__8972__i + 0];
        ++G__8972__i;
      }
      args = new cljs.core.IndexedSeq(G__8972__a, 0);
    }
    return cljs$core$vector__delegate.call(this, args);
  };
  cljs$core$vector.cljs$lang$maxFixedArity = 0;
  cljs$core$vector.cljs$lang$applyTo = function(arglist__8973) {
    var args = cljs.core.seq(arglist__8973);
    return cljs$core$vector__delegate(args);
  };
  cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
  return cljs$core$vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8974 = self__.vec;
      var G__8975 = self__.node;
      var G__8976 = self__.i;
      var G__8977 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8974, G__8975, G__8976, G__8977) : cljs.core.chunked_seq.call(null, G__8974, G__8975, G__8976, G__8977);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__8978 = self__.vec;
    var G__8979 = self__.i + self__.off;
    var G__8980 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8978, G__8979, G__8980) : cljs.core.subvec.call(null, G__8978, G__8979, G__8980);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__8981 = self__.vec;
    var G__8982 = self__.i + self__.off;
    var G__8983 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8981, G__8982, G__8983) : cljs.core.subvec.call(null, G__8981, G__8982, G__8983);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8984 = self__.vec;
      var G__8985 = self__.node;
      var G__8986 = self__.i;
      var G__8987 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8984, G__8985, G__8986, G__8987) : cljs.core.chunked_seq.call(null, G__8984, G__8985, G__8986, G__8987);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8988 = self__.vec;
    var G__8989 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8990 = end;
    var G__8991 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8988, G__8989, G__8990, G__8991) : cljs.core.chunked_seq.call(null, G__8988, G__8989, G__8990, G__8991);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__8992 = self__.vec;
  var G__8993 = self__.node;
  var G__8994 = self__.i;
  var G__8995 = self__.off;
  var G__8996 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__8992, G__8993, G__8994, G__8995, G__8996) : cljs.core.chunked_seq.call(null, G__8992, G__8993, G__8994, G__8995, G__8996);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8997 = self__.vec;
    var G__8998 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8999 = end;
    var G__9000 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8997, G__8998, G__8999, G__9000) : cljs.core.chunked_seq.call(null, G__8997, G__8998, G__8999, G__9000);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.chunked_seq = function() {
  var cljs$core$chunked_seq = null;
  var cljs$core$chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var cljs$core$chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var cljs$core$chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  cljs$core$chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return cljs$core$chunked_seq__3.call(this, vec, node, i);
      case 4:
        return cljs$core$chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return cljs$core$chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
  return cljs$core$chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__9002 = self__.meta;
  var G__9003 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__9004 = self__.start;
  var G__9005 = function() {
    var x__4389__auto__ = self__.end;
    var y__4390__auto__ = v_pos + 1;
    return x__4389__auto__ > y__4390__auto__ ? x__4389__auto__ : y__4390__auto__;
  }();
  var G__9006 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9002, G__9003, G__9004, G__9005, G__9006) : cljs.core.build_subvec.call(null, G__9002, G__9003, G__9004, G__9005, G__9006);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__9007 = self__.meta;
    var G__9008 = self__.v;
    var G__9009 = self__.start;
    var G__9010 = self__.end - 1;
    var G__9011 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9007, G__9008, G__9009, G__9010, G__9011) : cljs.core.build_subvec.call(null, G__9007, G__9008, G__9009, G__9010, G__9011);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__9013 = meta__$1;
  var G__9014 = self__.v;
  var G__9015 = self__.start;
  var G__9016 = self__.end;
  var G__9017 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9013, G__9014, G__9015, G__9016, G__9017) : cljs.core.build_subvec.call(null, G__9013, G__9014, G__9015, G__9016, G__9017);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9018 = self__.meta;
  var G__9019 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__9020 = self__.start;
  var G__9021 = self__.end + 1;
  var G__9022 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9018, G__9019, G__9020, G__9021, G__9022) : cljs.core.build_subvec.call(null, G__9018, G__9019, G__9020, G__9021, G__9022);
};
cljs.core.Subvec.prototype.call = function() {
  var G__9023 = null;
  var G__9023__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9023__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9023 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9023__2.call(this, self__, k);
      case 3:
        return G__9023__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9023.cljs$core$IFn$_invoke$arity$2 = G__9023__2;
  G__9023.cljs$core$IFn$_invoke$arity$3 = G__9023__3;
  return G__9023;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9001) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9001)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9024 = meta;
      var G__9025 = v.v;
      var G__9026 = v.start + start;
      var G__9027 = v.start + end;
      var G__9028 = __hash;
      meta = G__9024;
      v = G__9025;
      start = G__9026;
      end = G__9027;
      __hash = G__9028;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var cljs$core$subvec = null;
  var cljs$core$subvec__2 = function(v, start) {
    return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var cljs$core$subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  cljs$core$subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return cljs$core$subvec__2.call(this, v, start);
      case 3:
        return cljs$core$subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
  cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
  return cljs$core$subvec;
}();
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9035 = {};
    return obj9035;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__9043 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__9044 = level - 5;
        node = G__9043;
        level = G__9044;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9048 = null;
  var G__9048__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9048__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9048 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9048__2.call(this, self__, k);
      case 3:
        return G__9048__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9048.cljs$core$IFn$_invoke$arity$2 = G__9048__2;
  G__9048.cljs$core$IFn$_invoke$arity$3 = G__9048__3;
  return G__9048;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9045) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9045)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4072__auto__ = self__.front;
    if (cljs.core.truth_(or__4072__auto__)) {
      return or__4072__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4072__auto__ = self__.rear;
      if (cljs.core.truth_(or__4072__auto__)) {
        return or__4072__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9049 = i + incr;
        i = G__9049;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9050 = i + 1;
      var G__9051 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__9050;
      out = G__9051;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9055 = {};
    return obj9055;
  }();
  var l = ks.length;
  var i_9056 = 0;
  while (true) {
    if (i_9056 < l) {
      var k_9057 = ks[i_9056];
      new_obj[k_9057] = obj[k_9057];
      var G__9058 = i_9056 + 1;
      i_9056 = G__9058;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4060__auto__ = function() {
      var G__9062 = k;
      return goog.isString(G__9062);
    }();
    if (cljs.core.truth_(and__4060__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4060__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__9063 = init__$1;
        var G__9064 = k;
        var G__9065 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9063, G__9064, G__9065) : f.call(null, G__9063, G__9064, G__9065);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9066 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9066) : cljs.core.deref.call(null, G__9066);
      } else {
        var G__9072 = cljs.core.rest(keys__$1);
        var G__9073 = init__$2;
        keys__$1 = G__9072;
        init__$1 = G__9073;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4060__auto__ = function() {
      var G__9068 = k;
      return goog.isString(G__9068);
    }();
    if (cljs.core.truth_(and__4060__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4060__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__9069 = k;
    return goog.isString(G__9069);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4060__auto__ = function() {
      var G__9071 = k;
      return goog.isString(G__9071);
    }();
    if (cljs.core.truth_(and__4060__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4060__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__9059_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9059_SHARP_, self__.strobj[p1__9059_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9074 = null;
  var G__9074__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9074__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9074 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9074__2.call(this, self__, k);
      case 3:
        return G__9074__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9074.cljs$core$IFn$_invoke$arity$2 = G__9074__2;
  G__9074.cljs$core$IFn$_invoke$arity$3 = G__9074__3;
  return G__9074;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args9060) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9060)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj9076 = {};
  return obj9076;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__9077 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9077, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9077, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function cljs$core$array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__9078 = i + 2;
        i = G__9078;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function cljs$core$array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__9079 = i + 2;
        i = G__9079;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function cljs$core$array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__9080 = i + 2;
        i = G__9080;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function cljs$core$array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__9081 = i + 2;
        i = G__9081;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function cljs$core$array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__9082 = i + 2;
        i = G__9082;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4072__auto__ = function() {
        var G__9086 = k;
        return goog.isString(G__9086);
      }();
      if (cljs.core.truth_(or__4072__auto__)) {
        return or__4072__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_9087 = 0;
  while (true) {
    if (i_9087 < l) {
      narr[i_9087] = arr[i_9087];
      var G__9088 = i_9087 + 1;
      i_9087 = G__9088;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9090 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9090) : cljs.core.keys.call(null, G__9090);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9091 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9091) : cljs.core.vals.call(null, G__9091);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9092 = cljs.core.seq(coll);
  var chunk__9093 = null;
  var count__9094 = 0;
  var i__9095 = 0;
  while (true) {
    if (i__9095 < count__9094) {
      var vec__9096 = chunk__9093.cljs$core$IIndexed$_nth$arity$2(null, i__9095);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9096, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9096, 1, null);
      var G__9097_9110 = v;
      var G__9098_9111 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9097_9110, G__9098_9111) : f.call(null, G__9097_9110, G__9098_9111);
      var G__9112 = seq__9092;
      var G__9113 = chunk__9093;
      var G__9114 = count__9094;
      var G__9115 = i__9095 + 1;
      seq__9092 = G__9112;
      chunk__9093 = G__9113;
      count__9094 = G__9114;
      i__9095 = G__9115;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9092);
      if (temp__4126__auto__) {
        var seq__9092__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9092__$1)) {
          var c__4859__auto__ = cljs.core.chunk_first(seq__9092__$1);
          var G__9116 = cljs.core.chunk_rest(seq__9092__$1);
          var G__9117 = c__4859__auto__;
          var G__9118 = cljs.core.count(c__4859__auto__);
          var G__9119 = 0;
          seq__9092 = G__9116;
          chunk__9093 = G__9117;
          count__9094 = G__9118;
          i__9095 = G__9119;
          continue;
        } else {
          var vec__9099 = cljs.core.first(seq__9092__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9099, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9099, 1, null);
          var G__9100_9120 = v;
          var G__9101_9121 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9100_9120, G__9101_9121) : f.call(null, G__9100_9120, G__9101_9121);
          var G__9122 = cljs.core.next(seq__9092__$1);
          var G__9123 = null;
          var G__9124 = 0;
          var G__9125 = 0;
          seq__9092 = G__9122;
          chunk__9093 = G__9123;
          count__9094 = G__9124;
          i__9095 = G__9125;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__9102 = init__$1;
        var G__9103 = self__.arr[i];
        var G__9104 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9102, G__9103, G__9104) : f.call(null, G__9102, G__9103, G__9104);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9105 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9105) : cljs.core.deref.call(null, G__9105);
      } else {
        var G__9126 = i + 2;
        var G__9127 = init__$2;
        i = G__9126;
        init__$1 = G__9127;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__9106 = other;
    if (G__9106) {
      var bit__4746__auto__ = G__9106.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4746__auto__ || G__9106.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__9128 = i + 2;
              i = G__9128;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj9108 = {};
    return obj9108;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__9129 = s + 2;
            var G__9130 = d;
            s = G__9129;
            d = G__9130;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__9131 = s + 2;
            var G__9132 = d + 2;
            s = G__9131;
            d = G__9132;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__9109 = cljs.core.aclone(self__.arr);
        G__9109[idx + 1] = v;
        return G__9109;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9133 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9134 = cljs.core.next(es);
          ret = G__9133;
          es = G__9134;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9135 = null;
  var G__9135__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9135__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9135 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9135__2.call(this, self__, k);
      case 3:
        return G__9135__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9135.cljs$core$IFn$_invoke$arity$2 = G__9135__2;
  G__9135.cljs$core$IFn$_invoke$arity$3 = G__9135__3;
  return G__9135;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args9089) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9089)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9136 = i + 2;
        var G__9137 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__9136;
        ret = G__9137;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__9138_9146 = self__.arr;
      G__9138_9146.pop();
      G__9138_9146.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__9139 = self__.len;
          var G__9140 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9139, G__9140) : cljs.core.array__GT_transient_hash_map.call(null, G__9139, G__9140);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__9141 = o;
      if (G__9141) {
        var bit__4753__auto__ = G__9141.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4753__auto__ || G__9141.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9141.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9141);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9141);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__9142 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9142) : cljs.core.key.call(null, G__9142);
      }(), function() {
        var G__9143 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9143) : cljs.core.val.call(null, G__9143);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9147 = cljs.core.next(es);
          var G__9148 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__9144 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9144) : cljs.core.key.call(null, G__9144);
          }(), function() {
            var G__9145 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9145) : cljs.core.val.call(null, G__9145);
          }());
          es = G__9147;
          tcoll__$2 = G__9148;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__9149 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__9150 = i + 2;
      out = G__9149;
      i = G__9150;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var cljs$core$clone_and_set = null;
  var cljs$core$clone_and_set__3 = function(arr, i, a) {
    var G__9153 = cljs.core.aclone(arr);
    G__9153[i] = a;
    return G__9153;
  };
  var cljs$core$clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9154 = cljs.core.aclone(arr);
    G__9154[i] = a;
    G__9154[j] = b;
    return G__9154;
  };
  cljs$core$clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return cljs$core$clone_and_set__3.call(this, arr, i, a);
      case 5:
        return cljs$core$clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
  cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
  return cljs$core$clone_and_set;
}();
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var cljs$core$edit_and_set = null;
  var cljs$core$edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var cljs$core$edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  cljs$core$edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return cljs$core$edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return cljs$core$edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
  cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
  return cljs$core$edit_and_set;
}();
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__9159 = init__$1;
          var G__9160 = k;
          var G__9161 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9159, G__9160, G__9161) : f.call(null, G__9159, G__9160, G__9161);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9162 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9162) : cljs.core.deref.call(null, G__9162);
      } else {
        var G__9163 = i + 2;
        var G__9164 = init__$2;
        i = G__9163;
        init__$1 = G__9164;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9165 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9165) : cljs.core.create_inode_seq.call(null, G__9165);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_9179 = 0;
        var j_9180 = 0;
        while (true) {
          if (i_9179 < 32) {
            if ((self__.bitmap >>> i_9179 & 1) === 0) {
              var G__9181 = i_9179 + 1;
              var G__9182 = j_9180;
              i_9179 = G__9181;
              j_9180 = G__9182;
              continue;
            } else {
              nodes[i_9179] = !(self__.arr[j_9180] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_9180]), self__.arr[j_9180], self__.arr[j_9180 + 1], added_leaf_QMARK_) : self__.arr[j_9180 + 1];
              var G__9183 = i_9179 + 1;
              var G__9184 = j_9180 + 2;
              i_9179 = G__9183;
              j_9180 = G__9184;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__9166 = edit__$1;
          var G__9167 = shift + 5;
          var G__9168 = key_or_nil;
          var G__9169 = val_or_node;
          var G__9170 = hash;
          var G__9171 = key;
          var G__9172 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9166, G__9167, G__9168, G__9169, G__9170, G__9171, G__9172) : cljs.core.create_node.call(null, G__9166, G__9167, G__9168, G__9169, G__9170, G__9171, G__9172);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_9185 = 0;
      var j_9186 = 0;
      while (true) {
        if (i_9185 < 32) {
          if ((self__.bitmap >>> i_9185 & 1) === 0) {
            var G__9187 = i_9185 + 1;
            var G__9188 = j_9186;
            i_9185 = G__9187;
            j_9186 = G__9188;
            continue;
          } else {
            nodes[i_9185] = !(self__.arr[j_9186] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_9186]), self__.arr[j_9186], self__.arr[j_9186 + 1], added_leaf_QMARK_) : self__.arr[j_9186 + 1];
            var G__9189 = i_9185 + 1;
            var G__9190 = j_9186 + 2;
            i_9185 = G__9189;
            j_9186 = G__9190;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__9173 = shift + 5;
          var G__9174 = key_or_nil;
          var G__9175 = val_or_node;
          var G__9176 = hash;
          var G__9177 = key;
          var G__9178 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9173, G__9174, G__9175, G__9176, G__9177, G__9178) : cljs.core.create_node.call(null, G__9173, G__9174, G__9175, G__9176, G__9177, G__9178);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__9191 = i + 1;
        var G__9192 = j + 2;
        var G__9193 = bitmap | 1 << i;
        i = G__9191;
        j = G__9192;
        bitmap = G__9193;
        continue;
      } else {
        var G__9194 = i + 1;
        var G__9195 = j;
        var G__9196 = bitmap;
        i = G__9194;
        j = G__9195;
        bitmap = G__9196;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9197 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9197) : cljs.core.create_array_node_seq.call(null, G__9197);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__9198 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9198) : cljs.core.deref.call(null, G__9198);
        } else {
          var G__9199 = i + 1;
          var G__9200 = init__$2;
          i = G__9199;
          init__$1 = G__9200;
          continue;
        }
      } else {
        var G__9201 = i + 1;
        var G__9202 = init__$1;
        i = G__9201;
        init__$1 = G__9202;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__9203 = i + 2;
        i = G__9203;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9204 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9204) : cljs.core.create_inode_seq.call(null, G__9204);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var cljs$core$create_node = null;
  var cljs$core$create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var cljs$core$create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  cljs$core$create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return cljs$core$create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return cljs$core$create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
  cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
  return cljs$core$create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__9205 = self__.nodes;
    var G__9206 = self__.i + 2;
    var G__9207 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9205, G__9206, G__9207) : cljs.core.create_inode_seq.call(null, G__9205, G__9206, G__9207);
  } else {
    var G__9208 = self__.nodes;
    var G__9209 = self__.i;
    var G__9210 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9208, G__9209, G__9210) : cljs.core.create_inode_seq.call(null, G__9208, G__9209, G__9210);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.create_inode_seq = function() {
  var cljs$core$create_inode_seq = null;
  var cljs$core$create_inode_seq__1 = function(nodes) {
    return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var cljs$core$create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__9214 = j + 2;
                j = G__9214;
                continue;
              }
            } else {
              var G__9215 = j + 2;
              j = G__9215;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  cljs$core$create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$create_inode_seq__1.call(this, nodes);
      case 3:
        return cljs$core$create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
  cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
  return cljs$core$create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9216 = null;
  var G__9217 = self__.nodes;
  var G__9218 = self__.i;
  var G__9219 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9216, G__9217, G__9218, G__9219) : cljs.core.create_array_node_seq.call(null, G__9216, G__9217, G__9218, G__9219);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.create_array_node_seq = function() {
  var cljs$core$create_array_node_seq = null;
  var cljs$core$create_array_node_seq__1 = function(nodes) {
    return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var cljs$core$create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__9224 = j + 1;
              j = G__9224;
              continue;
            }
          } else {
            var G__9225 = j + 1;
            j = G__9225;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  cljs$core$create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$create_array_node_seq__1.call(this, meta);
      case 4:
        return cljs$core$create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
  cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
  return cljs$core$create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9227 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9227) : cljs.core.keys.call(null, G__9227);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9228 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9228) : cljs.core.vals.call(null, G__9228);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9229 = cljs.core.seq(coll);
  var chunk__9230 = null;
  var count__9231 = 0;
  var i__9232 = 0;
  while (true) {
    if (i__9232 < count__9231) {
      var vec__9233 = chunk__9230.cljs$core$IIndexed$_nth$arity$2(null, i__9232);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9233, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9233, 1, null);
      var G__9234_9245 = v;
      var G__9235_9246 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9234_9245, G__9235_9246) : f.call(null, G__9234_9245, G__9235_9246);
      var G__9247 = seq__9229;
      var G__9248 = chunk__9230;
      var G__9249 = count__9231;
      var G__9250 = i__9232 + 1;
      seq__9229 = G__9247;
      chunk__9230 = G__9248;
      count__9231 = G__9249;
      i__9232 = G__9250;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9229);
      if (temp__4126__auto__) {
        var seq__9229__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9229__$1)) {
          var c__4859__auto__ = cljs.core.chunk_first(seq__9229__$1);
          var G__9251 = cljs.core.chunk_rest(seq__9229__$1);
          var G__9252 = c__4859__auto__;
          var G__9253 = cljs.core.count(c__4859__auto__);
          var G__9254 = 0;
          seq__9229 = G__9251;
          chunk__9230 = G__9252;
          count__9231 = G__9253;
          i__9232 = G__9254;
          continue;
        } else {
          var vec__9236 = cljs.core.first(seq__9229__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9236, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9236, 1, null);
          var G__9237_9255 = v;
          var G__9238_9256 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9237_9255, G__9238_9256) : f.call(null, G__9237_9255, G__9238_9256);
          var G__9257 = cljs.core.next(seq__9229__$1);
          var G__9258 = null;
          var G__9259 = 0;
          var G__9260 = 0;
          seq__9229 = G__9257;
          chunk__9230 = G__9258;
          count__9231 = G__9259;
          i__9232 = G__9260;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__9239 = init;
    var G__9240 = null;
    var G__9241 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9239, G__9240, G__9241) : f.call(null, G__9239, G__9240, G__9241);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9242 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9242) : cljs.core.deref.call(null, G__9242);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj9244 = {};
    return obj9244;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9261 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9262 = cljs.core.next(es);
          ret = G__9261;
          es = G__9262;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9263 = null;
  var G__9263__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9263__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9263 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9263__2.call(this, self__, k);
      case 3:
        return G__9263__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9263.cljs$core$IFn$_invoke$arity$2 = G__9263__2;
  G__9263.cljs$core$IFn$_invoke$arity$3 = G__9263__3;
  return G__9263;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args9226) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9226)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9264 = i + 2;
      var G__9265 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__9264;
      ret = G__9265;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9266 = i + 1;
      var G__9267 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__9266;
      out = G__9267;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__9268 = o;
      if (G__9268) {
        var bit__4753__auto__ = G__9268.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4753__auto__ || G__9268.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9268.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9268);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9268);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__9269 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9269) : cljs.core.key.call(null, G__9269);
      }(), function() {
        var G__9270 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9270) : cljs.core.val.call(null, G__9270);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9273 = cljs.core.next(es);
          var G__9274 = tcoll__$1.assoc_BANG_(function() {
            var G__9271 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9271) : cljs.core.key.call(null, G__9271);
          }(), function() {
            var G__9272 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9272) : cljs.core.val.call(null, G__9272);
          }());
          es = G__9273;
          tcoll__$1 = G__9274;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__9275 = ascending_QMARK_ ? t.left : t.right;
      var G__9276 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__9275;
      stack__$1 = G__9276;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9289 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9289) : cljs.core.deref.call(null, G__9289);
  } else {
    var init__$2 = function() {
      var G__9290 = init__$1;
      var G__9291 = node.key;
      var G__9292 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9290, G__9291, G__9292) : f.call(null, G__9290, G__9291, G__9292);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__9293 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9293) : cljs.core.deref.call(null, G__9293);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__9294 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9294) : cljs.core.deref.call(null, G__9294);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9296 = null;
  var G__9296__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9296__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9296 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9296__2.call(this, self__, k);
      case 3:
        return G__9296__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9296.cljs$core$IFn$_invoke$arity$2 = G__9296__2;
  G__9296.cljs$core$IFn$_invoke$arity$3 = G__9296__3;
  return G__9296;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args9295) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9295)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__9298 = null;
  var G__9298__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9298__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9298 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9298__2.call(this, self__, k);
      case 3:
        return G__9298__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9298.cljs$core$IFn$_invoke$arity$2 = G__9298__2;
  G__9298.cljs$core$IFn$_invoke$arity$3 = G__9298__3;
  return G__9298;
}();
cljs.core.RedNode.prototype.apply = function(self__, args9297) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9297)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__9311 = k;
      var G__9312 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9311, G__9312) : comp.call(null, G__9311, G__9312);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__9331 = k;
      var G__9332 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9331, G__9332) : comp.call(null, G__9331, G__9332);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__9343 = k;
    var G__9344 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9343, G__9344) : comp.call(null, G__9343, G__9344);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9346 = cljs.core.seq(coll);
  var chunk__9347 = null;
  var count__9348 = 0;
  var i__9349 = 0;
  while (true) {
    if (i__9349 < count__9348) {
      var vec__9350 = chunk__9347.cljs$core$IIndexed$_nth$arity$2(null, i__9349);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9350, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9350, 1, null);
      var G__9351_9363 = v;
      var G__9352_9364 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9351_9363, G__9352_9364) : f.call(null, G__9351_9363, G__9352_9364);
      var G__9365 = seq__9346;
      var G__9366 = chunk__9347;
      var G__9367 = count__9348;
      var G__9368 = i__9349 + 1;
      seq__9346 = G__9365;
      chunk__9347 = G__9366;
      count__9348 = G__9367;
      i__9349 = G__9368;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9346);
      if (temp__4126__auto__) {
        var seq__9346__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9346__$1)) {
          var c__4859__auto__ = cljs.core.chunk_first(seq__9346__$1);
          var G__9369 = cljs.core.chunk_rest(seq__9346__$1);
          var G__9370 = c__4859__auto__;
          var G__9371 = cljs.core.count(c__4859__auto__);
          var G__9372 = 0;
          seq__9346 = G__9369;
          chunk__9347 = G__9370;
          count__9348 = G__9371;
          i__9349 = G__9372;
          continue;
        } else {
          var vec__9353 = cljs.core.first(seq__9346__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9353, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9353, 1, null);
          var G__9354_9373 = v;
          var G__9355_9374 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9354_9373, G__9355_9374) : f.call(null, G__9354_9373, G__9355_9374);
          var G__9375 = cljs.core.next(seq__9346__$1);
          var G__9376 = null;
          var G__9377 = 0;
          var G__9378 = 0;
          seq__9346 = G__9375;
          chunk__9347 = G__9376;
          count__9348 = G__9377;
          i__9349 = G__9378;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9356 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9356) : cljs.core.keys.call(null, G__9356);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9357 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9357) : cljs.core.vals.call(null, G__9357);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__9358 = k;
        var G__9359 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9358, G__9359) : self__.comp.call(null, G__9358, G__9359);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__9379 = t.left;
          t = G__9379;
          continue;
        } else {
          var G__9380 = t.right;
          t = G__9380;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9381 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9382 = cljs.core.next(es);
          ret = G__9381;
          es = G__9382;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9383 = null;
  var G__9383__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9383__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9383 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9383__2.call(this, self__, k);
      case 3:
        return G__9383__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9383.cljs$core$IFn$_invoke$arity$2 = G__9383__2;
  G__9383.cljs$core$IFn$_invoke$arity$3 = G__9383__3;
  return G__9383;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args9345) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9345)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__9360 = k;
          var G__9361 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9360, G__9361) : self__.comp.call(null, G__9360, G__9361);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__9384 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9385 = t.left;
              stack = G__9384;
              t = G__9385;
              continue;
            } else {
              var G__9386 = stack;
              var G__9387 = t.right;
              stack = G__9386;
              t = G__9387;
              continue;
            }
          } else {
            if (c > 0) {
              var G__9388 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9389 = t.right;
              stack = G__9388;
              t = G__9389;
              continue;
            } else {
              var G__9390 = stack;
              var G__9391 = t.left;
              stack = G__9390;
              t = G__9391;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__9362 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9362) : cljs.core.key.call(null, G__9362);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.hash_map = function() {
  var cljs$core$hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__9392 = cljs.core.nnext(in$);
        var G__9393 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9392;
        out = G__9393;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var cljs$core$hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9394__i = 0, G__9394__a = new Array(arguments.length - 0);
      while (G__9394__i < G__9394__a.length) {
        G__9394__a[G__9394__i] = arguments[G__9394__i + 0];
        ++G__9394__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9394__a, 0);
    }
    return cljs$core$hash_map__delegate.call(this, keyvals);
  };
  cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
  cljs$core$hash_map.cljs$lang$applyTo = function(arglist__9395) {
    var keyvals = cljs.core.seq(arglist__9395);
    return cljs$core$hash_map__delegate(keyvals);
  };
  cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
  return cljs$core$hash_map;
}();
cljs.core.array_map = function() {
  var cljs$core$array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var cljs$core$array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9396__i = 0, G__9396__a = new Array(arguments.length - 0);
      while (G__9396__i < G__9396__a.length) {
        G__9396__a[G__9396__i] = arguments[G__9396__i + 0];
        ++G__9396__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9396__a, 0);
    }
    return cljs$core$array_map__delegate.call(this, keyvals);
  };
  cljs$core$array_map.cljs$lang$maxFixedArity = 0;
  cljs$core$array_map.cljs$lang$applyTo = function(arglist__9397) {
    var keyvals = cljs.core.seq(arglist__9397);
    return cljs$core$array_map__delegate(keyvals);
  };
  cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
  return cljs$core$array_map;
}();
cljs.core.obj_map = function() {
  var cljs$core$obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj9401 = {};
      return obj9401;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__9402 = cljs.core.nnext(kvs);
        kvs = G__9402;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var cljs$core$obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9403__i = 0, G__9403__a = new Array(arguments.length - 0);
      while (G__9403__i < G__9403__a.length) {
        G__9403__a[G__9403__i] = arguments[G__9403__i + 0];
        ++G__9403__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9403__a, 0);
    }
    return cljs$core$obj_map__delegate.call(this, keyvals);
  };
  cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
  cljs$core$obj_map.cljs$lang$applyTo = function(arglist__9404) {
    var keyvals = cljs.core.seq(arglist__9404);
    return cljs$core$obj_map__delegate(keyvals);
  };
  cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
  return cljs$core$obj_map;
}();
cljs.core.sorted_map = function() {
  var cljs$core$sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__9405 = cljs.core.nnext(in$);
        var G__9406 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9405;
        out = G__9406;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var cljs$core$sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9407__i = 0, G__9407__a = new Array(arguments.length - 0);
      while (G__9407__i < G__9407__a.length) {
        G__9407__a[G__9407__i] = arguments[G__9407__i + 0];
        ++G__9407__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9407__a, 0);
    }
    return cljs$core$sorted_map__delegate.call(this, keyvals);
  };
  cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
  cljs$core$sorted_map.cljs$lang$applyTo = function(arglist__9408) {
    var keyvals = cljs.core.seq(arglist__9408);
    return cljs$core$sorted_map__delegate(keyvals);
  };
  cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
  return cljs$core$sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var cljs$core$sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__9409 = cljs.core.nnext(in$);
        var G__9410 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9409;
        out = G__9410;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var cljs$core$sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__9411__i = 0, G__9411__a = new Array(arguments.length - 1);
      while (G__9411__i < G__9411__a.length) {
        G__9411__a[G__9411__i] = arguments[G__9411__i + 1];
        ++G__9411__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9411__a, 0);
    }
    return cljs$core$sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
  cljs$core$sorted_map_by.cljs$lang$applyTo = function(arglist__9412) {
    var comparator = cljs.core.first(arglist__9412);
    var keyvals = cljs.core.rest(arglist__9412);
    return cljs$core$sorted_map_by__delegate(comparator, keyvals);
  };
  cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
  return cljs$core$sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9413 = self__.mseq;
    if (G__9413) {
      var bit__4753__auto__ = G__9413.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4753__auto__ || G__9413.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9413.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9413);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9413);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9414 = self__.mseq;
    if (G__9414) {
      var bit__4753__auto__ = G__9414.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4753__auto__ || G__9414.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9414.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9414);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9414);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9415 = self__.mseq;
    if (G__9415) {
      var bit__4753__auto__ = G__9415.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4753__auto__ || G__9415.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9415.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9415);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9415);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9416 = self__.mseq;
    if (G__9416) {
      var bit__4753__auto__ = G__9416.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4753__auto__ || G__9416.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9416.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9416);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9416);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var cljs$core$merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__9417_SHARP_, p2__9418_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__4072__auto__ = p1__9417_SHARP_;
          if (cljs.core.truth_(or__4072__auto__)) {
            return or__4072__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__9418_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var cljs$core$merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__9419__i = 0, G__9419__a = new Array(arguments.length - 0);
      while (G__9419__i < G__9419__a.length) {
        G__9419__a[G__9419__i] = arguments[G__9419__i + 0];
        ++G__9419__i;
      }
      maps = new cljs.core.IndexedSeq(G__9419__a, 0);
    }
    return cljs$core$merge__delegate.call(this, maps);
  };
  cljs$core$merge.cljs$lang$maxFixedArity = 0;
  cljs$core$merge.cljs$lang$applyTo = function(arglist__9420) {
    var maps = cljs.core.seq(arglist__9420);
    return cljs$core$merge__delegate(maps);
  };
  cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
  return cljs$core$merge;
}();
cljs.core.merge_with = function() {
  var cljs$core$merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__9423 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__9424 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9423, G__9424) : f.call(null, G__9423, G__9424);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__4072__auto__ = m1;
            if (cljs.core.truth_(or__4072__auto__)) {
              return or__4072__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var cljs$core$merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__9425__i = 0, G__9425__a = new Array(arguments.length - 1);
      while (G__9425__i < G__9425__a.length) {
        G__9425__a[G__9425__i] = arguments[G__9425__i + 1];
        ++G__9425__i;
      }
      maps = new cljs.core.IndexedSeq(G__9425__a, 0);
    }
    return cljs$core$merge_with__delegate.call(this, f, maps);
  };
  cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
  cljs$core$merge_with.cljs$lang$applyTo = function(arglist__9426) {
    var f = cljs.core.first(arglist__9426);
    var maps = cljs.core.rest(arglist__9426);
    return cljs$core$merge_with__delegate(f, maps);
  };
  cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
  return cljs$core$merge_with;
}();
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__9427 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__9428 = cljs.core.next(keys);
      ret = G__9427;
      keys = G__9428;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9431 = cljs.core.seq(coll);
  var chunk__9432 = null;
  var count__9433 = 0;
  var i__9434 = 0;
  while (true) {
    if (i__9434 < count__9433) {
      var vec__9435 = chunk__9432.cljs$core$IIndexed$_nth$arity$2(null, i__9434);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9435, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9435, 1, null);
      var G__9436_9441 = v;
      var G__9437_9442 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9436_9441, G__9437_9442) : f.call(null, G__9436_9441, G__9437_9442);
      var G__9443 = seq__9431;
      var G__9444 = chunk__9432;
      var G__9445 = count__9433;
      var G__9446 = i__9434 + 1;
      seq__9431 = G__9443;
      chunk__9432 = G__9444;
      count__9433 = G__9445;
      i__9434 = G__9446;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9431);
      if (temp__4126__auto__) {
        var seq__9431__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9431__$1)) {
          var c__4859__auto__ = cljs.core.chunk_first(seq__9431__$1);
          var G__9447 = cljs.core.chunk_rest(seq__9431__$1);
          var G__9448 = c__4859__auto__;
          var G__9449 = cljs.core.count(c__4859__auto__);
          var G__9450 = 0;
          seq__9431 = G__9447;
          chunk__9432 = G__9448;
          count__9433 = G__9449;
          i__9434 = G__9450;
          continue;
        } else {
          var vec__9438 = cljs.core.first(seq__9431__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9438, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9438, 1, null);
          var G__9439_9451 = v;
          var G__9440_9452 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9439_9451, G__9440_9452) : f.call(null, G__9439_9451, G__9440_9452);
          var G__9453 = cljs.core.next(seq__9431__$1);
          var G__9454 = null;
          var G__9455 = 0;
          var G__9456 = 0;
          seq__9431 = G__9453;
          chunk__9432 = G__9454;
          count__9433 = G__9455;
          i__9434 = G__9456;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9429_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9429_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__9457 = null;
  var G__9457__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9457__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9457 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9457__2.call(this, self__, k);
      case 3:
        return G__9457__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9457.cljs$core$IFn$_invoke$arity$2 = G__9457__2;
  G__9457.cljs$core$IFn$_invoke$arity$3 = G__9457__3;
  return G__9457;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args9430) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9430)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9458 = i + 1;
        var G__9459 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__9458;
        out = G__9459;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__9460 = i + 1;
        var G__9461 = cljs.core._conj_BANG_(out, items[i]);
        i = G__9460;
        out = G__9461;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__9463 = null;
  var G__9463__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__9463__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__9463 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9463__2.call(this, self__, k);
      case 3:
        return G__9463__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9463.cljs$core$IFn$_invoke$arity$2 = G__9463__2;
  G__9463.cljs$core$IFn$_invoke$arity$3 = G__9463__3;
  return G__9463;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args9462) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9462)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9466 = cljs.core.seq(coll);
  var chunk__9467 = null;
  var count__9468 = 0;
  var i__9469 = 0;
  while (true) {
    if (i__9469 < count__9468) {
      var vec__9470 = chunk__9467.cljs$core$IIndexed$_nth$arity$2(null, i__9469);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9470, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9470, 1, null);
      var G__9471_9476 = v;
      var G__9472_9477 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9471_9476, G__9472_9477) : f.call(null, G__9471_9476, G__9472_9477);
      var G__9478 = seq__9466;
      var G__9479 = chunk__9467;
      var G__9480 = count__9468;
      var G__9481 = i__9469 + 1;
      seq__9466 = G__9478;
      chunk__9467 = G__9479;
      count__9468 = G__9480;
      i__9469 = G__9481;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9466);
      if (temp__4126__auto__) {
        var seq__9466__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9466__$1)) {
          var c__4859__auto__ = cljs.core.chunk_first(seq__9466__$1);
          var G__9482 = cljs.core.chunk_rest(seq__9466__$1);
          var G__9483 = c__4859__auto__;
          var G__9484 = cljs.core.count(c__4859__auto__);
          var G__9485 = 0;
          seq__9466 = G__9482;
          chunk__9467 = G__9483;
          count__9468 = G__9484;
          i__9469 = G__9485;
          continue;
        } else {
          var vec__9473 = cljs.core.first(seq__9466__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9473, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9473, 1, null);
          var G__9474_9486 = v;
          var G__9475_9487 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9474_9486, G__9475_9487) : f.call(null, G__9474_9486, G__9475_9487);
          var G__9488 = cljs.core.next(seq__9466__$1);
          var G__9489 = null;
          var G__9490 = 0;
          var G__9491 = 0;
          seq__9466 = G__9488;
          chunk__9467 = G__9489;
          count__9468 = G__9490;
          i__9469 = G__9491;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9464_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9464_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__9492 = null;
  var G__9492__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9492__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9492 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9492__2.call(this, self__, k);
      case 3:
        return G__9492__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9492.cljs$core$IFn$_invoke$arity$2 = G__9492__2;
  G__9492.cljs$core$IFn$_invoke$arity$3 = G__9492__3;
  return G__9492;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args9465) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9465)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4953__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4953__auto__.length) {
        var G__9493 = i + 1;
        var G__9494 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__9493;
        res = G__9494;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__9495 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__9496 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__9495;
          out = G__9496;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var cljs$core$hash_set = null;
  var cljs$core$hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var cljs$core$hash_set__1 = function() {
    var G__9497__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__9497 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__9498__i = 0, G__9498__a = new Array(arguments.length - 0);
        while (G__9498__i < G__9498__a.length) {
          G__9498__a[G__9498__i] = arguments[G__9498__i + 0];
          ++G__9498__i;
        }
        keys = new cljs.core.IndexedSeq(G__9498__a, 0);
      }
      return G__9497__delegate.call(this, keys);
    };
    G__9497.cljs$lang$maxFixedArity = 0;
    G__9497.cljs$lang$applyTo = function(arglist__9499) {
      var keys = cljs.core.seq(arglist__9499);
      return G__9497__delegate(keys);
    };
    G__9497.cljs$core$IFn$_invoke$arity$variadic = G__9497__delegate;
    return G__9497;
  }();
  cljs$core$hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$hash_set__0.call(this);
      default:
        var G__9500 = null;
        if (arguments.length > 0) {
          var G__9501__i = 0, G__9501__a = new Array(arguments.length - 0);
          while (G__9501__i < G__9501__a.length) {
            G__9501__a[G__9501__i] = arguments[G__9501__i + 0];
            ++G__9501__i;
          }
          G__9500 = new cljs.core.IndexedSeq(G__9501__a, 0);
        }
        return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9500);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
  cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
  cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
  cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$hash_set;
}();
cljs.core.sorted_set = function() {
  var cljs$core$sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var cljs$core$sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__9502__i = 0, G__9502__a = new Array(arguments.length - 0);
      while (G__9502__i < G__9502__a.length) {
        G__9502__a[G__9502__i] = arguments[G__9502__i + 0];
        ++G__9502__i;
      }
      keys = new cljs.core.IndexedSeq(G__9502__a, 0);
    }
    return cljs$core$sorted_set__delegate.call(this, keys);
  };
  cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
  cljs$core$sorted_set.cljs$lang$applyTo = function(arglist__9503) {
    var keys = cljs.core.seq(arglist__9503);
    return cljs$core$sorted_set__delegate(keys);
  };
  cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
  return cljs$core$sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var cljs$core$sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var cljs$core$sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__9504__i = 0, G__9504__a = new Array(arguments.length - 1);
      while (G__9504__i < G__9504__a.length) {
        G__9504__a[G__9504__i] = arguments[G__9504__i + 1];
        ++G__9504__i;
      }
      keys = new cljs.core.IndexedSeq(G__9504__a, 0);
    }
    return cljs$core$sorted_set_by__delegate.call(this, comparator, keys);
  };
  cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
  cljs$core$sorted_set_by.cljs$lang$applyTo = function(arglist__9505) {
    var comparator = cljs.core.first(arglist__9505);
    var keys = cljs.core.rest(arglist__9505);
    return cljs$core$sorted_set_by__delegate(comparator, keys);
  };
  cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
  return cljs$core$sorted_set_by;
}();
cljs.core.replace = function() {
  var cljs$core$replace = null;
  var cljs$core$replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__9506_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__9506_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__9506_SHARP_;
      }
    });
  };
  var cljs$core$replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9507_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__9507_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__9507_SHARP_;
        }
      }, coll);
    }
  };
  cljs$core$replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$replace__1.call(this, smap);
      case 2:
        return cljs$core$replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
  cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
  return cljs$core$replace;
}();
cljs.core.distinct = function() {
  var cljs$core$distinct = null;
  var cljs$core$distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__9528 = null;
          var G__9528__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9528__1 = function(result) {
            var G__9518 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9518) : rf.call(null, G__9518);
          };
          var G__9528__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__9519 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9519) : cljs.core.deref.call(null, G__9519);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__9520 = result;
              var G__9521 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9520, G__9521) : rf.call(null, G__9520, G__9521);
            }
          };
          G__9528 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9528__0.call(this);
              case 1:
                return G__9528__1.call(this, result);
              case 2:
                return G__9528__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9528.cljs$core$IFn$_invoke$arity$0 = G__9528__0;
          G__9528.cljs$core$IFn$_invoke$arity$1 = G__9528__1;
          G__9528.cljs$core$IFn$_invoke$arity$2 = G__9528__2;
          return G__9528;
        }();
      }(seen);
    };
  };
  var cljs$core$distinct__1 = function(coll) {
    var step = function cljs$core$distinct_$_step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__9526, seen__$1) {
          while (true) {
            var vec__9527 = p__9526;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9527, 0, null);
            var xs__$1 = vec__9527;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__9529 = cljs.core.rest(s);
                var G__9530 = seen__$1;
                p__9526 = G__9529;
                seen__$1 = G__9530;
                continue;
              } else {
                return cljs.core.cons(f, cljs$core$distinct_$_step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  cljs$core$distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return cljs$core$distinct__0.call(this);
      case 1:
        return cljs$core$distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
  cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
  return cljs$core$distinct;
}();
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__9531 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__9532 = cljs.core.next(s__$1);
      ret = G__9531;
      s__$1 = G__9532;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__9534 = x;
    if (G__9534) {
      var bit__4746__auto__ = G__9534.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4746__auto__ || G__9534.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__9535 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__9536 = cljs.core.next(ks);
      var G__9537 = cljs.core.next(vs);
      map = G__9535;
      ks = G__9536;
      vs = G__9537;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var cljs$core$max_key = null;
  var cljs$core$max_key__2 = function(k, x) {
    return x;
  };
  var cljs$core$max_key__3 = function(k, x, y) {
    if (function() {
      var G__9548 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9548) : k.call(null, G__9548);
    }() > function() {
      var G__9549 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9549) : k.call(null, G__9549);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var cljs$core$max_key__4 = function() {
    var G__9550__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9538_SHARP_, p2__9539_SHARP_) {
        return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k, p1__9538_SHARP_, p2__9539_SHARP_);
      }, cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9550 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9551__i = 0, G__9551__a = new Array(arguments.length - 3);
        while (G__9551__i < G__9551__a.length) {
          G__9551__a[G__9551__i] = arguments[G__9551__i + 3];
          ++G__9551__i;
        }
        more = new cljs.core.IndexedSeq(G__9551__a, 0);
      }
      return G__9550__delegate.call(this, k, x, y, more);
    };
    G__9550.cljs$lang$maxFixedArity = 3;
    G__9550.cljs$lang$applyTo = function(arglist__9552) {
      var k = cljs.core.first(arglist__9552);
      arglist__9552 = cljs.core.next(arglist__9552);
      var x = cljs.core.first(arglist__9552);
      arglist__9552 = cljs.core.next(arglist__9552);
      var y = cljs.core.first(arglist__9552);
      var more = cljs.core.rest(arglist__9552);
      return G__9550__delegate(k, x, y, more);
    };
    G__9550.cljs$core$IFn$_invoke$arity$variadic = G__9550__delegate;
    return G__9550;
  }();
  cljs$core$max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$max_key__2.call(this, k, x);
      case 3:
        return cljs$core$max_key__3.call(this, k, x, y);
      default:
        var G__9553 = null;
        if (arguments.length > 3) {
          var G__9554__i = 0, G__9554__a = new Array(arguments.length - 3);
          while (G__9554__i < G__9554__a.length) {
            G__9554__a[G__9554__i] = arguments[G__9554__i + 3];
            ++G__9554__i;
          }
          G__9553 = new cljs.core.IndexedSeq(G__9554__a, 0);
        }
        return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9553);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$max_key.cljs$lang$maxFixedArity = 3;
  cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$max_key;
}();
cljs.core.min_key = function() {
  var cljs$core$min_key = null;
  var cljs$core$min_key__2 = function(k, x) {
    return x;
  };
  var cljs$core$min_key__3 = function(k, x, y) {
    if (function() {
      var G__9565 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9565) : k.call(null, G__9565);
    }() < function() {
      var G__9566 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9566) : k.call(null, G__9566);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var cljs$core$min_key__4 = function() {
    var G__9567__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9555_SHARP_, p2__9556_SHARP_) {
        return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k, p1__9555_SHARP_, p2__9556_SHARP_);
      }, cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9567 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9568__i = 0, G__9568__a = new Array(arguments.length - 3);
        while (G__9568__i < G__9568__a.length) {
          G__9568__a[G__9568__i] = arguments[G__9568__i + 3];
          ++G__9568__i;
        }
        more = new cljs.core.IndexedSeq(G__9568__a, 0);
      }
      return G__9567__delegate.call(this, k, x, y, more);
    };
    G__9567.cljs$lang$maxFixedArity = 3;
    G__9567.cljs$lang$applyTo = function(arglist__9569) {
      var k = cljs.core.first(arglist__9569);
      arglist__9569 = cljs.core.next(arglist__9569);
      var x = cljs.core.first(arglist__9569);
      arglist__9569 = cljs.core.next(arglist__9569);
      var y = cljs.core.first(arglist__9569);
      var more = cljs.core.rest(arglist__9569);
      return G__9567__delegate(k, x, y, more);
    };
    G__9567.cljs$core$IFn$_invoke$arity$variadic = G__9567__delegate;
    return G__9567;
  }();
  cljs$core$min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$min_key__2.call(this, k, x);
      case 3:
        return cljs$core$min_key__3.call(this, k, x, y);
      default:
        var G__9570 = null;
        if (arguments.length > 3) {
          var G__9571__i = 0, G__9571__a = new Array(arguments.length - 3);
          while (G__9571__i < G__9571__a.length) {
            G__9571__a[G__9571__i] = arguments[G__9571__i + 3];
            ++G__9571__i;
          }
          G__9570 = new cljs.core.IndexedSeq(G__9571__a, 0);
        }
        return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9570);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$min_key.cljs$lang$maxFixedArity = 3;
  cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var cljs$core$partition_all = null;
  var cljs$core$partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__9588 = null;
          var G__9588__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9588__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9583 = result;
                var G__9584 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9583, G__9584) : rf.call(null, G__9583, G__9584);
              }());
            }();
            var G__9585 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9585) : rf.call(null, G__9585);
          };
          var G__9588__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__9586 = result;
              var G__9587 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9586, G__9587) : rf.call(null, G__9586, G__9587);
            } else {
              return result;
            }
          };
          G__9588 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9588__0.call(this);
              case 1:
                return G__9588__1.call(this, result);
              case 2:
                return G__9588__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9588.cljs$core$IFn$_invoke$arity$0 = G__9588__0;
          G__9588.cljs$core$IFn$_invoke$arity$1 = G__9588__1;
          G__9588.cljs$core$IFn$_invoke$arity$2 = G__9588__2;
          return G__9588;
        }();
      }(a);
    };
  };
  var cljs$core$partition_all__2 = function(n, coll) {
    return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var cljs$core$partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$partition_all__1.call(this, n);
      case 2:
        return cljs$core$partition_all__2.call(this, n, step);
      case 3:
        return cljs$core$partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
  return cljs$core$partition_all;
}();
cljs.core.take_while = function() {
  var cljs$core$take_while = null;
  var cljs$core$take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__9601 = null;
        var G__9601__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9601__1 = function(result) {
          var G__9596 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9596) : rf.call(null, G__9596);
        };
        var G__9601__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__9597 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9597) : pred.call(null, G__9597);
          }())) {
            var G__9598 = result;
            var G__9599 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9598, G__9599) : rf.call(null, G__9598, G__9599);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__9601 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9601__0.call(this);
            case 1:
              return G__9601__1.call(this, result);
            case 2:
              return G__9601__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9601.cljs$core$IFn$_invoke$arity$0 = G__9601__0;
        G__9601.cljs$core$IFn$_invoke$arity$1 = G__9601__1;
        G__9601.cljs$core$IFn$_invoke$arity$2 = G__9601__2;
        return G__9601;
      }();
    };
  };
  var cljs$core$take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__9600 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9600) : pred.call(null, G__9600);
        }())) {
          return cljs.core.cons(cljs.core.first(s), cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take_while__1.call(this, pred);
      case 2:
        return cljs$core$take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
  cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
  return cljs$core$take_while;
}();
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__9606 = function() {
      var G__9608 = cljs.core._entry_key(sc, e);
      var G__9609 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9608, G__9609) : comp.call(null, G__9608, G__9609);
    }();
    var G__9607 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9606, G__9607) : test.call(null, G__9606, G__9607);
  };
};
cljs.core.subseq = function() {
  var cljs$core$subseq = null;
  var cljs$core$subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9613 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9613, 0, null);
        var s = vec__9613;
        if (cljs.core.truth_(function() {
          var G__9614 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9614) : include.call(null, G__9614);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var cljs$core$subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9615 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9615, 0, null);
      var s = vec__9615;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  cljs$core$subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return cljs$core$subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return cljs$core$subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
  cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
  return cljs$core$subseq;
}();
cljs.core.rsubseq = function() {
  var cljs$core$rsubseq = null;
  var cljs$core$rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9619 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9619, 0, null);
        var s = vec__9619;
        if (cljs.core.truth_(function() {
          var G__9620 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9620) : include.call(null, G__9620);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var cljs$core$rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9621 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9621, 0, null);
      var s = vec__9621;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  cljs$core$rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return cljs$core$rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return cljs$core$rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
  cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
  return cljs$core$rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__9622 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9622) : Math.ceil.call(null, G__9622);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4493__auto__ = self__.__hash;
  if (!(h__4493__auto__ == null)) {
    return h__4493__auto__;
  } else {
    var h__4493__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4493__auto____$1;
    return h__4493__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__9623 = ret;
        var G__9624 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9623, G__9624) : f.call(null, G__9623, G__9624);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__9625 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9625) : cljs.core.deref.call(null, G__9625);
      } else {
        var G__9626 = i + self__.step;
        var G__9627 = ret__$1;
        i = G__9626;
        ret = G__9627;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.range = function() {
  var cljs$core$range = null;
  var cljs$core$range__0 = function() {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var cljs$core$range__1 = function(end) {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var cljs$core$range__2 = function(start, end) {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var cljs$core$range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  cljs$core$range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return cljs$core$range__0.call(this);
      case 1:
        return cljs$core$range__1.call(this, start);
      case 2:
        return cljs$core$range__2.call(this, start, end);
      case 3:
        return cljs$core$range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
  cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
  cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
  cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
  return cljs$core$range;
}();
cljs.core.take_nth = function() {
  var cljs$core$take_nth = null;
  var cljs$core$take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__9645 = null;
          var G__9645__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9645__1 = function(result) {
            var G__9642 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9642) : rf.call(null, G__9642);
          };
          var G__9645__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__9643 = result;
              var G__9644 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9643, G__9644) : rf.call(null, G__9643, G__9644);
            } else {
              return result;
            }
          };
          G__9645 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9645__0.call(this);
              case 1:
                return G__9645__1.call(this, result);
              case 2:
                return G__9645__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9645.cljs$core$IFn$_invoke$arity$0 = G__9645__0;
          G__9645.cljs$core$IFn$_invoke$arity$1 = G__9645__1;
          G__9645.cljs$core$IFn$_invoke$arity$2 = G__9645__2;
          return G__9645;
        }();
      }(ia);
    };
  };
  var cljs$core$take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take_nth__1.call(this, n);
      case 2:
        return cljs$core$take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
  cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
  return cljs$core$take_nth;
}();
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var cljs$core$partition_by = null;
  var cljs$core$partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__9667 = null;
          var G__9667__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9667__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9658 = result;
                var G__9659 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9658, G__9659) : rf.call(null, G__9658, G__9659);
              }());
            }();
            var G__9660 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9660) : rf.call(null, G__9660);
          };
          var G__9667__2 = function(result, input) {
            var pval = function() {
              var G__9661 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9661) : cljs.core.deref.call(null, G__9661);
            }();
            var val = function() {
              var G__9662 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9662) : f.call(null, G__9662);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__9663 = result;
                var G__9664 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9663, G__9664) : rf.call(null, G__9663, G__9664);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__9667 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9667__0.call(this);
              case 1:
                return G__9667__1.call(this, result);
              case 2:
                return G__9667__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9667.cljs$core$IFn$_invoke$arity$0 = G__9667__0;
          G__9667.cljs$core$IFn$_invoke$arity$1 = G__9667__1;
          G__9667.cljs$core$IFn$_invoke$arity$2 = G__9667__2;
          return G__9667;
        }();
      }(a, pa);
    };
  };
  var cljs$core$partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__9665 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9665) : f.call(null, G__9665);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__9646_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__9666 = p1__9646_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9666) : f.call(null, G__9666);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$partition_by__1.call(this, f);
      case 2:
        return cljs$core$partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
  cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
  return cljs$core$partition_by;
}();
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var cljs$core$reductions = null;
  var cljs$core$reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var cljs$core$reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__9676 = init;
          var G__9677 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9676, G__9677) : f.call(null, G__9676, G__9677);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  cljs$core$reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$reductions__2.call(this, f, init);
      case 3:
        return cljs$core$reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
  cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
  return cljs$core$reductions;
}();
cljs.core.juxt = function() {
  var cljs$core$juxt = null;
  var cljs$core$juxt__1 = function(f) {
    return function() {
      var G__9772 = null;
      var G__9772__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__9772__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9730 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9730) : f.call(null, G__9730);
        }()], null);
      };
      var G__9772__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9731 = x;
          var G__9732 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9731, G__9732) : f.call(null, G__9731, G__9732);
        }()], null);
      };
      var G__9772__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9733 = x;
          var G__9734 = y;
          var G__9735 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9733, G__9734, G__9735) : f.call(null, G__9733, G__9734, G__9735);
        }()], null);
      };
      var G__9772__4 = function() {
        var G__9773__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__9773 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9774__i = 0, G__9774__a = new Array(arguments.length - 3);
            while (G__9774__i < G__9774__a.length) {
              G__9774__a[G__9774__i] = arguments[G__9774__i + 3];
              ++G__9774__i;
            }
            args = new cljs.core.IndexedSeq(G__9774__a, 0);
          }
          return G__9773__delegate.call(this, x, y, z, args);
        };
        G__9773.cljs$lang$maxFixedArity = 3;
        G__9773.cljs$lang$applyTo = function(arglist__9775) {
          var x = cljs.core.first(arglist__9775);
          arglist__9775 = cljs.core.next(arglist__9775);
          var y = cljs.core.first(arglist__9775);
          arglist__9775 = cljs.core.next(arglist__9775);
          var z = cljs.core.first(arglist__9775);
          var args = cljs.core.rest(arglist__9775);
          return G__9773__delegate(x, y, z, args);
        };
        G__9773.cljs$core$IFn$_invoke$arity$variadic = G__9773__delegate;
        return G__9773;
      }();
      G__9772 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9772__0.call(this);
          case 1:
            return G__9772__1.call(this, x);
          case 2:
            return G__9772__2.call(this, x, y);
          case 3:
            return G__9772__3.call(this, x, y, z);
          default:
            var G__9776 = null;
            if (arguments.length > 3) {
              var G__9777__i = 0, G__9777__a = new Array(arguments.length - 3);
              while (G__9777__i < G__9777__a.length) {
                G__9777__a[G__9777__i] = arguments[G__9777__i + 3];
                ++G__9777__i;
              }
              G__9776 = new cljs.core.IndexedSeq(G__9777__a, 0);
            }
            return G__9772__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9776);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9772.cljs$lang$maxFixedArity = 3;
      G__9772.cljs$lang$applyTo = G__9772__4.cljs$lang$applyTo;
      G__9772.cljs$core$IFn$_invoke$arity$0 = G__9772__0;
      G__9772.cljs$core$IFn$_invoke$arity$1 = G__9772__1;
      G__9772.cljs$core$IFn$_invoke$arity$2 = G__9772__2;
      G__9772.cljs$core$IFn$_invoke$arity$3 = G__9772__3;
      G__9772.cljs$core$IFn$_invoke$arity$variadic = G__9772__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9772;
    }();
  };
  var cljs$core$juxt__2 = function(f, g) {
    return function() {
      var G__9778 = null;
      var G__9778__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__9778__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9736 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9736) : f.call(null, G__9736);
        }(), function() {
          var G__9737 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9737) : g.call(null, G__9737);
        }()], null);
      };
      var G__9778__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9738 = x;
          var G__9739 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9738, G__9739) : f.call(null, G__9738, G__9739);
        }(), function() {
          var G__9740 = x;
          var G__9741 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9740, G__9741) : g.call(null, G__9740, G__9741);
        }()], null);
      };
      var G__9778__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9742 = x;
          var G__9743 = y;
          var G__9744 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9742, G__9743, G__9744) : f.call(null, G__9742, G__9743, G__9744);
        }(), function() {
          var G__9745 = x;
          var G__9746 = y;
          var G__9747 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9745, G__9746, G__9747) : g.call(null, G__9745, G__9746, G__9747);
        }()], null);
      };
      var G__9778__4 = function() {
        var G__9779__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__9779 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9780__i = 0, G__9780__a = new Array(arguments.length - 3);
            while (G__9780__i < G__9780__a.length) {
              G__9780__a[G__9780__i] = arguments[G__9780__i + 3];
              ++G__9780__i;
            }
            args = new cljs.core.IndexedSeq(G__9780__a, 0);
          }
          return G__9779__delegate.call(this, x, y, z, args);
        };
        G__9779.cljs$lang$maxFixedArity = 3;
        G__9779.cljs$lang$applyTo = function(arglist__9781) {
          var x = cljs.core.first(arglist__9781);
          arglist__9781 = cljs.core.next(arglist__9781);
          var y = cljs.core.first(arglist__9781);
          arglist__9781 = cljs.core.next(arglist__9781);
          var z = cljs.core.first(arglist__9781);
          var args = cljs.core.rest(arglist__9781);
          return G__9779__delegate(x, y, z, args);
        };
        G__9779.cljs$core$IFn$_invoke$arity$variadic = G__9779__delegate;
        return G__9779;
      }();
      G__9778 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9778__0.call(this);
          case 1:
            return G__9778__1.call(this, x);
          case 2:
            return G__9778__2.call(this, x, y);
          case 3:
            return G__9778__3.call(this, x, y, z);
          default:
            var G__9782 = null;
            if (arguments.length > 3) {
              var G__9783__i = 0, G__9783__a = new Array(arguments.length - 3);
              while (G__9783__i < G__9783__a.length) {
                G__9783__a[G__9783__i] = arguments[G__9783__i + 3];
                ++G__9783__i;
              }
              G__9782 = new cljs.core.IndexedSeq(G__9783__a, 0);
            }
            return G__9778__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9782);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9778.cljs$lang$maxFixedArity = 3;
      G__9778.cljs$lang$applyTo = G__9778__4.cljs$lang$applyTo;
      G__9778.cljs$core$IFn$_invoke$arity$0 = G__9778__0;
      G__9778.cljs$core$IFn$_invoke$arity$1 = G__9778__1;
      G__9778.cljs$core$IFn$_invoke$arity$2 = G__9778__2;
      G__9778.cljs$core$IFn$_invoke$arity$3 = G__9778__3;
      G__9778.cljs$core$IFn$_invoke$arity$variadic = G__9778__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9778;
    }();
  };
  var cljs$core$juxt__3 = function(f, g, h) {
    return function() {
      var G__9784 = null;
      var G__9784__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__9784__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9748 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9748) : f.call(null, G__9748);
        }(), function() {
          var G__9749 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9749) : g.call(null, G__9749);
        }(), function() {
          var G__9750 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9750) : h.call(null, G__9750);
        }()], null);
      };
      var G__9784__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9751 = x;
          var G__9752 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9751, G__9752) : f.call(null, G__9751, G__9752);
        }(), function() {
          var G__9753 = x;
          var G__9754 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9753, G__9754) : g.call(null, G__9753, G__9754);
        }(), function() {
          var G__9755 = x;
          var G__9756 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9755, G__9756) : h.call(null, G__9755, G__9756);
        }()], null);
      };
      var G__9784__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9757 = x;
          var G__9758 = y;
          var G__9759 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9757, G__9758, G__9759) : f.call(null, G__9757, G__9758, G__9759);
        }(), function() {
          var G__9760 = x;
          var G__9761 = y;
          var G__9762 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9760, G__9761, G__9762) : g.call(null, G__9760, G__9761, G__9762);
        }(), function() {
          var G__9763 = x;
          var G__9764 = y;
          var G__9765 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9763, G__9764, G__9765) : h.call(null, G__9763, G__9764, G__9765);
        }()], null);
      };
      var G__9784__4 = function() {
        var G__9785__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__9785 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9786__i = 0, G__9786__a = new Array(arguments.length - 3);
            while (G__9786__i < G__9786__a.length) {
              G__9786__a[G__9786__i] = arguments[G__9786__i + 3];
              ++G__9786__i;
            }
            args = new cljs.core.IndexedSeq(G__9786__a, 0);
          }
          return G__9785__delegate.call(this, x, y, z, args);
        };
        G__9785.cljs$lang$maxFixedArity = 3;
        G__9785.cljs$lang$applyTo = function(arglist__9787) {
          var x = cljs.core.first(arglist__9787);
          arglist__9787 = cljs.core.next(arglist__9787);
          var y = cljs.core.first(arglist__9787);
          arglist__9787 = cljs.core.next(arglist__9787);
          var z = cljs.core.first(arglist__9787);
          var args = cljs.core.rest(arglist__9787);
          return G__9785__delegate(x, y, z, args);
        };
        G__9785.cljs$core$IFn$_invoke$arity$variadic = G__9785__delegate;
        return G__9785;
      }();
      G__9784 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9784__0.call(this);
          case 1:
            return G__9784__1.call(this, x);
          case 2:
            return G__9784__2.call(this, x, y);
          case 3:
            return G__9784__3.call(this, x, y, z);
          default:
            var G__9788 = null;
            if (arguments.length > 3) {
              var G__9789__i = 0, G__9789__a = new Array(arguments.length - 3);
              while (G__9789__i < G__9789__a.length) {
                G__9789__a[G__9789__i] = arguments[G__9789__i + 3];
                ++G__9789__i;
              }
              G__9788 = new cljs.core.IndexedSeq(G__9789__a, 0);
            }
            return G__9784__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9788);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9784.cljs$lang$maxFixedArity = 3;
      G__9784.cljs$lang$applyTo = G__9784__4.cljs$lang$applyTo;
      G__9784.cljs$core$IFn$_invoke$arity$0 = G__9784__0;
      G__9784.cljs$core$IFn$_invoke$arity$1 = G__9784__1;
      G__9784.cljs$core$IFn$_invoke$arity$2 = G__9784__2;
      G__9784.cljs$core$IFn$_invoke$arity$3 = G__9784__3;
      G__9784.cljs$core$IFn$_invoke$arity$variadic = G__9784__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9784;
    }();
  };
  var cljs$core$juxt__4 = function() {
    var G__9790__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__9791 = null;
          var G__9791__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9678_SHARP_, p2__9679_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9678_SHARP_, function() {
                  return p2__9679_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9679_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9679_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9791__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9680_SHARP_, p2__9681_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9680_SHARP_, function() {
                  var G__9766 = x;
                  return p2__9681_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9681_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9766) : p2__9681_SHARP_.call(null, G__9766);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9791__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9682_SHARP_, p2__9683_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9682_SHARP_, function() {
                  var G__9767 = x;
                  var G__9768 = y;
                  return p2__9683_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9683_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9767, G__9768) : p2__9683_SHARP_.call(null, G__9767, G__9768);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9791__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9684_SHARP_, p2__9685_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9684_SHARP_, function() {
                  var G__9769 = x;
                  var G__9770 = y;
                  var G__9771 = z;
                  return p2__9685_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9685_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9769, G__9770, G__9771) : p2__9685_SHARP_.call(null, G__9769, G__9770, G__9771);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9791__4 = function() {
            var G__9792__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__9686_SHARP_, p2__9687_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9686_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9687_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__9792 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__9793__i = 0, G__9793__a = new Array(arguments.length - 3);
                while (G__9793__i < G__9793__a.length) {
                  G__9793__a[G__9793__i] = arguments[G__9793__i + 3];
                  ++G__9793__i;
                }
                args = new cljs.core.IndexedSeq(G__9793__a, 0);
              }
              return G__9792__delegate.call(this, x, y, z, args);
            };
            G__9792.cljs$lang$maxFixedArity = 3;
            G__9792.cljs$lang$applyTo = function(arglist__9794) {
              var x = cljs.core.first(arglist__9794);
              arglist__9794 = cljs.core.next(arglist__9794);
              var y = cljs.core.first(arglist__9794);
              arglist__9794 = cljs.core.next(arglist__9794);
              var z = cljs.core.first(arglist__9794);
              var args = cljs.core.rest(arglist__9794);
              return G__9792__delegate(x, y, z, args);
            };
            G__9792.cljs$core$IFn$_invoke$arity$variadic = G__9792__delegate;
            return G__9792;
          }();
          G__9791 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__9791__0.call(this);
              case 1:
                return G__9791__1.call(this, x);
              case 2:
                return G__9791__2.call(this, x, y);
              case 3:
                return G__9791__3.call(this, x, y, z);
              default:
                var G__9795 = null;
                if (arguments.length > 3) {
                  var G__9796__i = 0, G__9796__a = new Array(arguments.length - 3);
                  while (G__9796__i < G__9796__a.length) {
                    G__9796__a[G__9796__i] = arguments[G__9796__i + 3];
                    ++G__9796__i;
                  }
                  G__9795 = new cljs.core.IndexedSeq(G__9796__a, 0);
                }
                return G__9791__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9795);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9791.cljs$lang$maxFixedArity = 3;
          G__9791.cljs$lang$applyTo = G__9791__4.cljs$lang$applyTo;
          G__9791.cljs$core$IFn$_invoke$arity$0 = G__9791__0;
          G__9791.cljs$core$IFn$_invoke$arity$1 = G__9791__1;
          G__9791.cljs$core$IFn$_invoke$arity$2 = G__9791__2;
          G__9791.cljs$core$IFn$_invoke$arity$3 = G__9791__3;
          G__9791.cljs$core$IFn$_invoke$arity$variadic = G__9791__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__9791;
        }();
      }(fs__$1);
    };
    var G__9790 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__9797__i = 0, G__9797__a = new Array(arguments.length - 3);
        while (G__9797__i < G__9797__a.length) {
          G__9797__a[G__9797__i] = arguments[G__9797__i + 3];
          ++G__9797__i;
        }
        fs = new cljs.core.IndexedSeq(G__9797__a, 0);
      }
      return G__9790__delegate.call(this, f, g, h, fs);
    };
    G__9790.cljs$lang$maxFixedArity = 3;
    G__9790.cljs$lang$applyTo = function(arglist__9798) {
      var f = cljs.core.first(arglist__9798);
      arglist__9798 = cljs.core.next(arglist__9798);
      var g = cljs.core.first(arglist__9798);
      arglist__9798 = cljs.core.next(arglist__9798);
      var h = cljs.core.first(arglist__9798);
      var fs = cljs.core.rest(arglist__9798);
      return G__9790__delegate(f, g, h, fs);
    };
    G__9790.cljs$core$IFn$_invoke$arity$variadic = G__9790__delegate;
    return G__9790;
  }();
  cljs$core$juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$juxt__1.call(this, f);
      case 2:
        return cljs$core$juxt__2.call(this, f, g);
      case 3:
        return cljs$core$juxt__3.call(this, f, g, h);
      default:
        var G__9799 = null;
        if (arguments.length > 3) {
          var G__9800__i = 0, G__9800__a = new Array(arguments.length - 3);
          while (G__9800__i < G__9800__a.length) {
            G__9800__a[G__9800__i] = arguments[G__9800__i + 3];
            ++G__9800__i;
          }
          G__9799 = new cljs.core.IndexedSeq(G__9800__a, 0);
        }
        return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__9799);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$juxt.cljs$lang$maxFixedArity = 3;
  cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$juxt;
}();
cljs.core.dorun = function() {
  var cljs$core$dorun = null;
  var cljs$core$dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__9801 = cljs.core.next(coll);
        coll = G__9801;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var cljs$core$dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__9802 = n - 1;
        var G__9803 = cljs.core.next(coll);
        n = G__9802;
        coll = G__9803;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  cljs$core$dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$dorun__1.call(this, n);
      case 2:
        return cljs$core$dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
  cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
  return cljs$core$dorun;
}();
cljs.core.doall = function() {
  var cljs$core$doall = null;
  var cljs$core$doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var cljs$core$doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  cljs$core$doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$doall__1.call(this, n);
      case 2:
        return cljs$core$doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
  cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
  return cljs$core$doall;
}();
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__9807 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9807, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9807, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9807, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_9815 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4072__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4072__auto__)) {
              return or__4072__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__9816_9822 = cljs.core.first(coll);
          var G__9817_9823 = writer;
          var G__9818_9824 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9816_9822, G__9817_9823, G__9818_9824) : print_one.call(null, G__9816_9822, G__9817_9823, G__9818_9824);
        } else {
        }
        var coll_9825__$1 = cljs.core.next(coll);
        var n_9826 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_9825__$1 && (n_9826 == null || !(n_9826 === 0))) {
            cljs.core._write(writer, sep);
            var G__9819_9827 = cljs.core.first(coll_9825__$1);
            var G__9820_9828 = writer;
            var G__9821_9829 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9819_9827, G__9820_9828, G__9821_9829) : print_one.call(null, G__9819_9827, G__9820_9828, G__9821_9829);
            var G__9830 = cljs.core.next(coll_9825__$1);
            var G__9831 = n_9826 - 1;
            coll_9825__$1 = G__9830;
            n_9826 = G__9831;
            continue;
          } else {
            if (cljs.core.seq(coll_9825__$1) && n_9826 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4072__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4072__auto__)) {
                  return or__4072__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_9815;
  }
};
cljs.core.write_all = function() {
  var cljs$core$write_all__delegate = function(writer, ss) {
    var seq__9836 = cljs.core.seq(ss);
    var chunk__9837 = null;
    var count__9838 = 0;
    var i__9839 = 0;
    while (true) {
      if (i__9839 < count__9838) {
        var s = chunk__9837.cljs$core$IIndexed$_nth$arity$2(null, i__9839);
        cljs.core._write(writer, s);
        var G__9840 = seq__9836;
        var G__9841 = chunk__9837;
        var G__9842 = count__9838;
        var G__9843 = i__9839 + 1;
        seq__9836 = G__9840;
        chunk__9837 = G__9841;
        count__9838 = G__9842;
        i__9839 = G__9843;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__9836);
        if (temp__4126__auto__) {
          var seq__9836__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__9836__$1)) {
            var c__4859__auto__ = cljs.core.chunk_first(seq__9836__$1);
            var G__9844 = cljs.core.chunk_rest(seq__9836__$1);
            var G__9845 = c__4859__auto__;
            var G__9846 = cljs.core.count(c__4859__auto__);
            var G__9847 = 0;
            seq__9836 = G__9844;
            chunk__9837 = G__9845;
            count__9838 = G__9846;
            i__9839 = G__9847;
            continue;
          } else {
            var s = cljs.core.first(seq__9836__$1);
            cljs.core._write(writer, s);
            var G__9848 = cljs.core.next(seq__9836__$1);
            var G__9849 = null;
            var G__9850 = 0;
            var G__9851 = 0;
            seq__9836 = G__9848;
            chunk__9837 = G__9849;
            count__9838 = G__9850;
            i__9839 = G__9851;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var cljs$core$write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__9852__i = 0, G__9852__a = new Array(arguments.length - 1);
      while (G__9852__i < G__9852__a.length) {
        G__9852__a[G__9852__i] = arguments[G__9852__i + 1];
        ++G__9852__i;
      }
      ss = new cljs.core.IndexedSeq(G__9852__a, 0);
    }
    return cljs$core$write_all__delegate.call(this, writer, ss);
  };
  cljs$core$write_all.cljs$lang$maxFixedArity = 1;
  cljs$core$write_all.cljs$lang$applyTo = function(arglist__9853) {
    var writer = cljs.core.first(arglist__9853);
    var ss = cljs.core.rest(arglist__9853);
    return cljs$core$write_all__delegate(writer, ss);
  };
  cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
  return cljs$core$write_all;
}();
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj9855 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj9855;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__9858 = '[\\\\"\b\f\n\r\t]';
    var G__9859 = "g";
    return RegExp(G__9858, G__9859);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4060__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4060__auto__)) {
          var and__4060__auto____$1 = function() {
            var G__9873 = obj;
            if (G__9873) {
              var bit__4753__auto__ = G__9873.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4753__auto__ || G__9873.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__9873.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__9873);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__9873);
            }
          }();
          if (and__4060__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4060__auto____$1;
          }
        } else {
          return and__4060__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__9874_9884 = cljs.core.meta(obj);
        var G__9875_9885 = writer;
        var G__9876_9886 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__9874_9884, G__9875_9885, G__9876_9886) : cljs.core.pr_writer.call(null, G__9874_9884, G__9875_9885, G__9876_9886);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__9877 = obj;
            if (G__9877) {
              var bit__4746__auto__ = G__9877.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4746__auto__ || G__9877.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__9878 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__9879 = cljs.core.pr_writer;
                var G__9880 = writer;
                var G__9881 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__9878, G__9879, G__9880, G__9881) : cljs.core.print_map.call(null, G__9878, G__9879, G__9880, G__9881);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__9882 = obj;
                    return goog.isString(G__9882);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__9887 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__9887;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__9883 = obj;
                            if (G__9883) {
                              var bit__4753__auto__ = G__9883.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4753__auto__ || G__9883.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__9883.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__9883);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__9883);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__9891 = obj;
    var G__9892 = writer;
    var G__9893 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__9891, G__9892, G__9893) : alt_impl.call(null, G__9891, G__9892, G__9893);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__9898 = cljs.core.seq(cljs.core.next(objs));
  var chunk__9899 = null;
  var count__9900 = 0;
  var i__9901 = 0;
  while (true) {
    if (i__9901 < count__9900) {
      var obj = chunk__9899.cljs$core$IIndexed$_nth$arity$2(null, i__9901);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__9902 = seq__9898;
      var G__9903 = chunk__9899;
      var G__9904 = count__9900;
      var G__9905 = i__9901 + 1;
      seq__9898 = G__9902;
      chunk__9899 = G__9903;
      count__9900 = G__9904;
      i__9901 = G__9905;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9898);
      if (temp__4126__auto__) {
        var seq__9898__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9898__$1)) {
          var c__4859__auto__ = cljs.core.chunk_first(seq__9898__$1);
          var G__9906 = cljs.core.chunk_rest(seq__9898__$1);
          var G__9907 = c__4859__auto__;
          var G__9908 = cljs.core.count(c__4859__auto__);
          var G__9909 = 0;
          seq__9898 = G__9906;
          chunk__9899 = G__9907;
          count__9900 = G__9908;
          i__9901 = G__9909;
          continue;
        } else {
          var obj = cljs.core.first(seq__9898__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__9910 = cljs.core.next(seq__9898__$1);
          var G__9911 = null;
          var G__9912 = 0;
          var G__9913 = 0;
          seq__9898 = G__9910;
          chunk__9899 = G__9911;
          count__9900 = G__9912;
          i__9901 = G__9913;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var cljs$core$pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9914__i = 0, G__9914__a = new Array(arguments.length - 0);
      while (G__9914__i < G__9914__a.length) {
        G__9914__a[G__9914__i] = arguments[G__9914__i + 0];
        ++G__9914__i;
      }
      objs = new cljs.core.IndexedSeq(G__9914__a, 0);
    }
    return cljs$core$pr_str__delegate.call(this, objs);
  };
  cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
  cljs$core$pr_str.cljs$lang$applyTo = function(arglist__9915) {
    var objs = cljs.core.seq(arglist__9915);
    return cljs$core$pr_str__delegate(objs);
  };
  cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
  return cljs$core$pr_str;
}();
cljs.core.prn_str = function() {
  var cljs$core$prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9916__i = 0, G__9916__a = new Array(arguments.length - 0);
      while (G__9916__i < G__9916__a.length) {
        G__9916__a[G__9916__i] = arguments[G__9916__i + 0];
        ++G__9916__i;
      }
      objs = new cljs.core.IndexedSeq(G__9916__a, 0);
    }
    return cljs$core$prn_str__delegate.call(this, objs);
  };
  cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
  cljs$core$prn_str.cljs$lang$applyTo = function(arglist__9917) {
    var objs = cljs.core.seq(arglist__9917);
    return cljs$core$prn_str__delegate(objs);
  };
  cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
  return cljs$core$prn_str;
}();
cljs.core.pr = function() {
  var cljs$core$pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9918__i = 0, G__9918__a = new Array(arguments.length - 0);
      while (G__9918__i < G__9918__a.length) {
        G__9918__a[G__9918__i] = arguments[G__9918__i + 0];
        ++G__9918__i;
      }
      objs = new cljs.core.IndexedSeq(G__9918__a, 0);
    }
    return cljs$core$pr__delegate.call(this, objs);
  };
  cljs$core$pr.cljs$lang$maxFixedArity = 0;
  cljs$core$pr.cljs$lang$applyTo = function(arglist__9919) {
    var objs = cljs.core.seq(arglist__9919);
    return cljs$core$pr__delegate(objs);
  };
  cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
  return cljs$core$pr;
}();
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9920__i = 0, G__9920__a = new Array(arguments.length - 0);
      while (G__9920__i < G__9920__a.length) {
        G__9920__a[G__9920__i] = arguments[G__9920__i + 0];
        ++G__9920__i;
      }
      objs = new cljs.core.IndexedSeq(G__9920__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__9921) {
    var objs = cljs.core.seq(arglist__9921);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function() {
  var cljs$core$print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9922__i = 0, G__9922__a = new Array(arguments.length - 0);
      while (G__9922__i < G__9922__a.length) {
        G__9922__a[G__9922__i] = arguments[G__9922__i + 0];
        ++G__9922__i;
      }
      objs = new cljs.core.IndexedSeq(G__9922__a, 0);
    }
    return cljs$core$print_str__delegate.call(this, objs);
  };
  cljs$core$print_str.cljs$lang$maxFixedArity = 0;
  cljs$core$print_str.cljs$lang$applyTo = function(arglist__9923) {
    var objs = cljs.core.seq(arglist__9923);
    return cljs$core$print_str__delegate(objs);
  };
  cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
  return cljs$core$print_str;
}();
cljs.core.println = function() {
  var cljs$core$println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var cljs$core$println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9924__i = 0, G__9924__a = new Array(arguments.length - 0);
      while (G__9924__i < G__9924__a.length) {
        G__9924__a[G__9924__i] = arguments[G__9924__i + 0];
        ++G__9924__i;
      }
      objs = new cljs.core.IndexedSeq(G__9924__a, 0);
    }
    return cljs$core$println__delegate.call(this, objs);
  };
  cljs$core$println.cljs$lang$maxFixedArity = 0;
  cljs$core$println.cljs$lang$applyTo = function(arglist__9925) {
    var objs = cljs.core.seq(arglist__9925);
    return cljs$core$println__delegate(objs);
  };
  cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
  return cljs$core$println;
}();
cljs.core.println_str = function() {
  var cljs$core$println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9926__i = 0, G__9926__a = new Array(arguments.length - 0);
      while (G__9926__i < G__9926__a.length) {
        G__9926__a[G__9926__i] = arguments[G__9926__i + 0];
        ++G__9926__i;
      }
      objs = new cljs.core.IndexedSeq(G__9926__a, 0);
    }
    return cljs$core$println_str__delegate.call(this, objs);
  };
  cljs$core$println_str.cljs$lang$maxFixedArity = 0;
  cljs$core$println_str.cljs$lang$applyTo = function(arglist__9927) {
    var objs = cljs.core.seq(arglist__9927);
    return cljs$core$println_str__delegate(objs);
  };
  cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
  return cljs$core$println_str;
}();
cljs.core.prn = function() {
  var cljs$core$prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var cljs$core$prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9928__i = 0, G__9928__a = new Array(arguments.length - 0);
      while (G__9928__i < G__9928__a.length) {
        G__9928__a[G__9928__i] = arguments[G__9928__i + 0];
        ++G__9928__i;
      }
      objs = new cljs.core.IndexedSeq(G__9928__a, 0);
    }
    return cljs$core$prn__delegate.call(this, objs);
  };
  cljs$core$prn.cljs$lang$maxFixedArity = 0;
  cljs$core$prn.cljs$lang$applyTo = function(arglist__9929) {
    var objs = cljs.core.seq(arglist__9929);
    return cljs$core$prn__delegate(objs);
  };
  cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
  return cljs$core$prn;
}();
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__9936_9942 = cljs.core.key(e);
    var G__9937_9943 = w;
    var G__9938_9944 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9936_9942, G__9937_9943, G__9938_9944) : print_one.call(null, G__9936_9942, G__9937_9943, G__9938_9944);
    cljs.core._write(w, " ");
    var G__9939 = cljs.core.val(e);
    var G__9940 = w;
    var G__9941 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9939, G__9940, G__9941) : print_one.call(null, G__9939, G__9940, G__9941);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var cljs$core$alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var cljs$core$alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__9945__i = 0, G__9945__a = new Array(arguments.length - 2);
      while (G__9945__i < G__9945__a.length) {
        G__9945__a[G__9945__i] = arguments[G__9945__i + 2];
        ++G__9945__i;
      }
      args = new cljs.core.IndexedSeq(G__9945__a, 0);
    }
    return cljs$core$alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$alter_meta_BANG_.cljs$lang$applyTo = function(arglist__9946) {
    var iref = cljs.core.first(arglist__9946);
    arglist__9946 = cljs.core.next(arglist__9946);
    var f = cljs.core.first(arglist__9946);
    var args = cljs.core.rest(arglist__9946);
    return cljs$core$alter_meta_BANG___delegate(iref, f, args);
  };
  cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
  return cljs$core$alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var cljs$core$gensym = null;
  var cljs$core$gensym__0 = function() {
    return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var cljs$core$gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__9949 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9949) : cljs.core.atom.call(null, G__9949);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  cljs$core$gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return cljs$core$gensym__0.call(this);
      case 1:
        return cljs$core$gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
  cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
  return cljs$core$gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__9951 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9951) : cljs.core.deref.call(null, G__9951);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__9952_SHARP_, p2__9953_SHARP_) {
    var ret = function() {
      var G__9956 = p1__9952_SHARP_;
      var G__9957 = p2__9953_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9956, G__9957) : rf.call(null, G__9956, G__9957);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__9960 = null;
      var G__9960__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9960__1 = function(result) {
        var G__9959 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9959) : rf.call(null, G__9959);
      };
      var G__9960__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__9960 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9960__0.call(this);
          case 1:
            return G__9960__1.call(this, result);
          case 2:
            return G__9960__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9960.cljs$core$IFn$_invoke$arity$0 = G__9960__0;
      G__9960.cljs$core$IFn$_invoke$arity$1 = G__9960__1;
      G__9960.cljs$core$IFn$_invoke$arity$2 = G__9960__2;
      return G__9960;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var cljs$core$dedupe = null;
  var cljs$core$dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__9969 = null;
          var G__9969__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9969__1 = function(result) {
            var G__9965 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9965) : rf.call(null, G__9965);
          };
          var G__9969__2 = function(result, input) {
            var prior = function() {
              var G__9966 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9966) : cljs.core.deref.call(null, G__9966);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__9967 = result;
              var G__9968 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9967, G__9968) : rf.call(null, G__9967, G__9968);
            }
          };
          G__9969 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9969__0.call(this);
              case 1:
                return G__9969__1.call(this, result);
              case 2:
                return G__9969__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9969.cljs$core$IFn$_invoke$arity$0 = G__9969__0;
          G__9969.cljs$core$IFn$_invoke$arity$1 = G__9969__1;
          G__9969.cljs$core$IFn$_invoke$arity$2 = G__9969__2;
          return G__9969;
        }();
      }(pa);
    };
  };
  var cljs$core$dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  cljs$core$dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return cljs$core$dedupe__0.call(this);
      case 1:
        return cljs$core$dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
  cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
  return cljs$core$dedupe;
}();
cljs.core.random_sample = function() {
  var cljs$core$random_sample = null;
  var cljs$core$random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var cljs$core$random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  cljs$core$random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$random_sample__1.call(this, prob);
      case 2:
        return cljs$core$random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
  cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
  return cljs$core$random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5050__auto__ = this;
  return cljs.core.es6_iterator(this__5050__auto__);
};
cljs.core.eduction = function cljs$core$eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9971_SHARP_, p2__9970_SHARP_) {
    var G__9973 = p2__9970_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__9973) : proc.call(null, G__9973);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj9975 = {};
  return obj9975;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4060__auto__ = x;
    if (and__4060__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4716__auto__ = x == null ? null : x;
    return function() {
      var or__4072__auto__ = cljs.core._clj__GT_js[function() {
        var G__9979 = x__4716__auto__;
        return goog.typeOf(G__9979);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4060__auto__ = x;
    if (and__4060__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4716__auto__ = x == null ? null : x;
    return function() {
      var or__4072__auto__ = cljs.core._key__GT_js[function() {
        var G__9983 = x__4716__auto__;
        return goog.typeOf(G__9983);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__9986 = k;
    if (G__9986) {
      var bit__4753__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4072__auto__ = bit__4753__auto__;
        if (cljs.core.truth_(or__4072__auto__)) {
          return or__4072__auto__;
        } else {
          return G__9986.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__9986.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__9986);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__9986);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__9987 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__9987) : cljs.core.clj__GT_js.call(null, G__9987);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10003 = x;
      if (G__10003) {
        var bit__4753__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4072__auto__ = bit__4753__auto__;
          if (cljs.core.truth_(or__4072__auto__)) {
            return or__4072__auto__;
          } else {
            return G__10003.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10003.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10003);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10003);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj10005 = {};
              return obj10005;
            }();
            var seq__10006_10016 = cljs.core.seq(x);
            var chunk__10007_10017 = null;
            var count__10008_10018 = 0;
            var i__10009_10019 = 0;
            while (true) {
              if (i__10009_10019 < count__10008_10018) {
                var vec__10010_10020 = chunk__10007_10017.cljs$core$IIndexed$_nth$arity$2(null, i__10009_10019);
                var k_10021 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10010_10020, 0, null);
                var v_10022 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10010_10020, 1, null);
                m[cljs.core.key__GT_js(k_10021)] = cljs$core$clj__GT_js(v_10022);
                var G__10023 = seq__10006_10016;
                var G__10024 = chunk__10007_10017;
                var G__10025 = count__10008_10018;
                var G__10026 = i__10009_10019 + 1;
                seq__10006_10016 = G__10023;
                chunk__10007_10017 = G__10024;
                count__10008_10018 = G__10025;
                i__10009_10019 = G__10026;
                continue;
              } else {
                var temp__4126__auto___10027 = cljs.core.seq(seq__10006_10016);
                if (temp__4126__auto___10027) {
                  var seq__10006_10028__$1 = temp__4126__auto___10027;
                  if (cljs.core.chunked_seq_QMARK_(seq__10006_10028__$1)) {
                    var c__4859__auto___10029 = cljs.core.chunk_first(seq__10006_10028__$1);
                    var G__10030 = cljs.core.chunk_rest(seq__10006_10028__$1);
                    var G__10031 = c__4859__auto___10029;
                    var G__10032 = cljs.core.count(c__4859__auto___10029);
                    var G__10033 = 0;
                    seq__10006_10016 = G__10030;
                    chunk__10007_10017 = G__10031;
                    count__10008_10018 = G__10032;
                    i__10009_10019 = G__10033;
                    continue;
                  } else {
                    var vec__10011_10034 = cljs.core.first(seq__10006_10028__$1);
                    var k_10035 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10011_10034, 0, null);
                    var v_10036 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10011_10034, 1, null);
                    m[cljs.core.key__GT_js(k_10035)] = cljs$core$clj__GT_js(v_10036);
                    var G__10037 = cljs.core.next(seq__10006_10028__$1);
                    var G__10038 = null;
                    var G__10039 = 0;
                    var G__10040 = 0;
                    seq__10006_10016 = G__10037;
                    chunk__10007_10017 = G__10038;
                    count__10008_10018 = G__10039;
                    i__10009_10019 = G__10040;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__10012_10041 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__10013_10042 = null;
              var count__10014_10043 = 0;
              var i__10015_10044 = 0;
              while (true) {
                if (i__10015_10044 < count__10014_10043) {
                  var x_10045__$1 = chunk__10013_10042.cljs$core$IIndexed$_nth$arity$2(null, i__10015_10044);
                  arr.push(x_10045__$1);
                  var G__10046 = seq__10012_10041;
                  var G__10047 = chunk__10013_10042;
                  var G__10048 = count__10014_10043;
                  var G__10049 = i__10015_10044 + 1;
                  seq__10012_10041 = G__10046;
                  chunk__10013_10042 = G__10047;
                  count__10014_10043 = G__10048;
                  i__10015_10044 = G__10049;
                  continue;
                } else {
                  var temp__4126__auto___10050 = cljs.core.seq(seq__10012_10041);
                  if (temp__4126__auto___10050) {
                    var seq__10012_10051__$1 = temp__4126__auto___10050;
                    if (cljs.core.chunked_seq_QMARK_(seq__10012_10051__$1)) {
                      var c__4859__auto___10052 = cljs.core.chunk_first(seq__10012_10051__$1);
                      var G__10053 = cljs.core.chunk_rest(seq__10012_10051__$1);
                      var G__10054 = c__4859__auto___10052;
                      var G__10055 = cljs.core.count(c__4859__auto___10052);
                      var G__10056 = 0;
                      seq__10012_10041 = G__10053;
                      chunk__10013_10042 = G__10054;
                      count__10014_10043 = G__10055;
                      i__10015_10044 = G__10056;
                      continue;
                    } else {
                      var x_10057__$1 = cljs.core.first(seq__10012_10051__$1);
                      arr.push(x_10057__$1);
                      var G__10058 = cljs.core.next(seq__10012_10051__$1);
                      var G__10059 = null;
                      var G__10060 = 0;
                      var G__10061 = 0;
                      seq__10012_10041 = G__10058;
                      chunk__10013_10042 = G__10059;
                      count__10014_10043 = G__10060;
                      i__10015_10044 = G__10061;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10063 = {};
  return obj10063;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4060__auto__ = x;
    if (and__4060__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4716__auto__ = x == null ? null : x;
    return function() {
      var or__4072__auto__ = cljs.core._js__GT_clj[function() {
        var G__10067 = x__4716__auto__;
        return goog.typeOf(G__10067);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var cljs$core$js__GT_clj = null;
  var cljs$core$js__GT_clj__1 = function(x) {
    return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var cljs$core$js__GT_clj__2 = function() {
    var G__10124__delegate = function(x, opts) {
      var map__10097 = opts;
      var map__10097__$1 = cljs.core.seq_QMARK_(map__10097) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10097) : map__10097;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10097__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__10097, map__10097__$1, keywordize_keys, keyfn) {
        return function cljs$core$js__GT_clj_$_thisfn(x__$1) {
          if (function() {
            var G__10113 = x__$1;
            if (G__10113) {
              var bit__4753__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__4072__auto__ = bit__4753__auto__;
                if (cljs.core.truth_(or__4072__auto__)) {
                  return or__4072__auto__;
                } else {
                  return G__10113.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__10113.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10113);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10113);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4828__auto__ = function(map__10097, map__10097__$1, keywordize_keys, keyfn) {
                        return function cljs$core$js__GT_clj_$_thisfn_$_iter__10114(s__10115) {
                          return new cljs.core.LazySeq(null, function(map__10097, map__10097__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__10115__$1 = s__10115;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__10115__$1);
                                if (temp__4126__auto__) {
                                  var s__10115__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__10115__$2)) {
                                    var c__4826__auto__ = cljs.core.chunk_first(s__10115__$2);
                                    var size__4827__auto__ = cljs.core.count(c__4826__auto__);
                                    var b__10117 = cljs.core.chunk_buffer(size__4827__auto__);
                                    if (function() {
                                      var i__10116 = 0;
                                      while (true) {
                                        if (i__10116 < size__4827__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4826__auto__, i__10116);
                                          cljs.core.chunk_append(b__10117, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__10122 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10122) : keyfn.call(null, G__10122);
                                          }(), cljs$core$js__GT_clj_$_thisfn(x__$1[k])], null));
                                          var G__10125 = i__10116 + 1;
                                          i__10116 = G__10125;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10117), cljs$core$js__GT_clj_$_thisfn_$_iter__10114(cljs.core.chunk_rest(s__10115__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10117), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__10115__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__10123 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10123) : keyfn.call(null, G__10123);
                                    }(), cljs$core$js__GT_clj_$_thisfn(x__$1[k])], null), cljs$core$js__GT_clj_$_thisfn_$_iter__10114(cljs.core.rest(s__10115__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__10097, map__10097__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__10097, map__10097__$1, keywordize_keys, keyfn);
                      return iter__4828__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__10097, map__10097__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__10124 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__10126__i = 0, G__10126__a = new Array(arguments.length - 1);
        while (G__10126__i < G__10126__a.length) {
          G__10126__a[G__10126__i] = arguments[G__10126__i + 1];
          ++G__10126__i;
        }
        opts = new cljs.core.IndexedSeq(G__10126__a, 0);
      }
      return G__10124__delegate.call(this, x, opts);
    };
    G__10124.cljs$lang$maxFixedArity = 1;
    G__10124.cljs$lang$applyTo = function(arglist__10127) {
      var x = cljs.core.first(arglist__10127);
      var opts = cljs.core.rest(arglist__10127);
      return G__10124__delegate(x, opts);
    };
    G__10124.cljs$core$IFn$_invoke$arity$variadic = G__10124__delegate;
    return G__10124;
  }();
  cljs$core$js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$js__GT_clj__1.call(this, x);
      default:
        var G__10128 = null;
        if (arguments.length > 1) {
          var G__10129__i = 0, G__10129__a = new Array(arguments.length - 1);
          while (G__10129__i < G__10129__a.length) {
            G__10129__a[G__10129__i] = arguments[G__10129__i + 1];
            ++G__10129__i;
          }
          G__10128 = new cljs.core.IndexedSeq(G__10129__a, 0);
        }
        return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10128);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
  cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
  cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
  cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$js__GT_clj;
}();
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__10132 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10132) : cljs.core.atom.call(null, G__10132);
  }();
  return function(mem) {
    return function() {
      var G__10134__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__10133 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10133) : cljs.core.deref.call(null, G__10133);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__10134 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10135__i = 0, G__10135__a = new Array(arguments.length - 0);
          while (G__10135__i < G__10135__a.length) {
            G__10135__a[G__10135__i] = arguments[G__10135__i + 0];
            ++G__10135__i;
          }
          args = new cljs.core.IndexedSeq(G__10135__a, 0);
        }
        return G__10134__delegate.call(this, args);
      };
      G__10134.cljs$lang$maxFixedArity = 0;
      G__10134.cljs$lang$applyTo = function(arglist__10136) {
        var args = cljs.core.seq(arglist__10136);
        return G__10134__delegate(args);
      };
      G__10134.cljs$core$IFn$_invoke$arity$variadic = G__10134__delegate;
      return G__10134;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var cljs$core$trampoline = null;
  var cljs$core$trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__10138 = ret;
        f = G__10138;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var cljs$core$trampoline__2 = function() {
    var G__10139__delegate = function(f, args) {
      return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__10139 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__10140__i = 0, G__10140__a = new Array(arguments.length - 1);
        while (G__10140__i < G__10140__a.length) {
          G__10140__a[G__10140__i] = arguments[G__10140__i + 1];
          ++G__10140__i;
        }
        args = new cljs.core.IndexedSeq(G__10140__a, 0);
      }
      return G__10139__delegate.call(this, f, args);
    };
    G__10139.cljs$lang$maxFixedArity = 1;
    G__10139.cljs$lang$applyTo = function(arglist__10141) {
      var f = cljs.core.first(arglist__10141);
      var args = cljs.core.rest(arglist__10141);
      return G__10139__delegate(f, args);
    };
    G__10139.cljs$core$IFn$_invoke$arity$variadic = G__10139__delegate;
    return G__10139;
  }();
  cljs$core$trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$trampoline__1.call(this, f);
      default:
        var G__10142 = null;
        if (arguments.length > 1) {
          var G__10143__i = 0, G__10143__a = new Array(arguments.length - 1);
          while (G__10143__i < G__10143__a.length) {
            G__10143__a[G__10143__i] = arguments[G__10143__i + 1];
            ++G__10143__i;
          }
          G__10142 = new cljs.core.IndexedSeq(G__10143__a, 0);
        }
        return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10142);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
  cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
  cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
  cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$trampoline;
}();
cljs.core.rand = function() {
  var cljs$core$rand = null;
  var cljs$core$rand__0 = function() {
    return cljs$core$rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var cljs$core$rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  cljs$core$rand = function(n) {
    switch(arguments.length) {
      case 0:
        return cljs$core$rand__0.call(this);
      case 1:
        return cljs$core$rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
  cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
  return cljs$core$rand;
}();
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__10146 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10146) : Math.floor.call(null, G__10146);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__10148 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10148) : f.call(null, G__10148);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__10150 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10150) : cljs.core.atom.call(null, G__10150);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var cljs$core$swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var cljs$core$swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__10151__i = 0, G__10151__a = new Array(arguments.length - 1);
      while (G__10151__i < G__10151__a.length) {
        G__10151__a[G__10151__i] = arguments[G__10151__i + 1];
        ++G__10151__i;
      }
      args = new cljs.core.IndexedSeq(G__10151__a, 0);
    }
    return cljs$core$swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10152) {
    var f = cljs.core.first(arglist__10152);
    var args = cljs.core.rest(arglist__10152);
    return cljs$core$swap_global_hierarchy_BANG___delegate(f, args);
  };
  cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
  return cljs$core$swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var cljs$core$isa_QMARK_ = null;
  var cljs$core$isa_QMARK___2 = function(child, parent) {
    return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10217 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10217) : cljs.core.deref.call(null, G__10217);
    }(), child, parent);
  };
  var cljs$core$isa_QMARK___3 = function(h, child, parent) {
    var or__4072__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__4072__auto__) {
      return or__4072__auto__;
    } else {
      var or__4072__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__4072__auto____$1) {
        return or__4072__auto____$1;
      } else {
        var and__4060__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__4060__auto__) {
          var and__4060__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__4060__auto____$1) {
            var and__4060__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__4060__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__10242 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__10240 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10240) : child.call(null, G__10240);
                  }(), function() {
                    var G__10241 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10241) : parent.call(null, G__10241);
                  }());
                  var G__10243 = i + 1;
                  ret = G__10242;
                  i = G__10243;
                  continue;
                }
                break;
              }
            } else {
              return and__4060__auto____$2;
            }
          } else {
            return and__4060__auto____$1;
          }
        } else {
          return and__4060__auto__;
        }
      }
    }
  };
  cljs$core$isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$isa_QMARK___2.call(this, h, child);
      case 3:
        return cljs$core$isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
  cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
  return cljs$core$isa_QMARK_;
}();
cljs.core.parents = function() {
  var cljs$core$parents = null;
  var cljs$core$parents__1 = function(tag) {
    return cljs$core$parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10247 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10247) : cljs.core.deref.call(null, G__10247);
    }(), tag);
  };
  var cljs$core$parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$parents__1.call(this, h);
      case 2:
        return cljs$core$parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
  cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
  return cljs$core$parents;
}();
cljs.core.ancestors = function() {
  var cljs$core$ancestors = null;
  var cljs$core$ancestors__1 = function(tag) {
    return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10251 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10251) : cljs.core.deref.call(null, G__10251);
    }(), tag);
  };
  var cljs$core$ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$ancestors__1.call(this, h);
      case 2:
        return cljs$core$ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
  cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
  return cljs$core$ancestors;
}();
cljs.core.descendants = function() {
  var cljs$core$descendants = null;
  var cljs$core$descendants__1 = function(tag) {
    return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10255 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10255) : cljs.core.deref.call(null, G__10255);
    }(), tag);
  };
  var cljs$core$descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$descendants__1.call(this, h);
      case 2:
        return cljs$core$descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
  cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
  return cljs$core$descendants;
}();
cljs.core.derive = function() {
  var cljs$core$derive = null;
  var cljs$core$derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var cljs$core$derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__10264 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10264) : targets.call(null, G__10264);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__10265 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10265) : sources.call(null, G__10265);
        }()));
      };
    }(tp, td, ta);
    var or__4072__auto__ = cljs.core.contains_QMARK_(function() {
      var G__10269 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10269) : tp.call(null, G__10269);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__10270 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10270) : ta.call(null, G__10270);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__10271 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10271) : ta.call(null, G__10271);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__4072__auto__)) {
      return or__4072__auto__;
    } else {
      return h;
    }
  };
  cljs$core$derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$derive__2.call(this, h, tag);
      case 3:
        return cljs$core$derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
  cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
  return cljs$core$derive;
}();
cljs.core.underive = function() {
  var cljs$core$underive = null;
  var cljs$core$underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var cljs$core$underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__10278 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10278) : parentMap.call(null, G__10278);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10279 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10279) : parentMap.call(null, G__10279);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__10272_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__10272_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10272_SHARP_), cljs.core.second(p1__10272_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__10280 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10280) : parentMap.call(null, G__10280);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__10273_SHARP_, p2__10274_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__10273_SHARP_, p2__10274_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  cljs$core$underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$underive__2.call(this, h, tag);
      case 3:
        return cljs$core$underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
  cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
  return cljs$core$underive;
}();
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__10283 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10283) : cljs.core.deref.call(null, G__10283);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__10284 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10284) : cljs.core.deref.call(null, G__10284);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__10300 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10300) : cljs.core.deref.call(null, G__10300);
  }().call(null, x);
  var or__4072__auto__ = cljs.core.truth_(function() {
    var and__4060__auto__ = xprefs;
    if (cljs.core.truth_(and__4060__auto__)) {
      var G__10302 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10302) : xprefs.call(null, G__10302);
    } else {
      return and__4060__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4072__auto__)) {
    return or__4072__auto__;
  } else {
    var or__4072__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__10303 = cljs.core.rest(ps);
          ps = G__10303;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4072__auto____$1)) {
      return or__4072__auto____$1;
    } else {
      var or__4072__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__10304 = cljs.core.rest(ps);
            ps = G__10304;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4072__auto____$2)) {
        return or__4072__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4072__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4072__auto__)) {
    return or__4072__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__10318) {
    var vec__10319 = p__10318;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10319, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10319, 1, null);
    var e = vec__10319;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10320 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10320) : cljs.core.deref.call(null, G__10320);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4072__auto__ = be == null;
        if (or__4072__auto__) {
          return or__4072__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__10321 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10321) : cljs.core.deref.call(null, G__10321);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10322 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10322) : cljs.core.deref.call(null, G__10322);
    }(), function() {
      var G__10323 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10323) : cljs.core.deref.call(null, G__10323);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10325 = {};
  return obj10325;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4060__auto__ = mf;
    if (and__4060__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4716__auto__ = mf == null ? null : mf;
    return function() {
      var or__4072__auto__ = cljs.core._reset[function() {
        var G__10329 = x__4716__auto__;
        return goog.typeOf(G__10329);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._reset["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4060__auto__ = mf;
    if (and__4060__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4716__auto__ = mf == null ? null : mf;
    return function() {
      var or__4072__auto__ = cljs.core._add_method[function() {
        var G__10333 = x__4716__auto__;
        return goog.typeOf(G__10333);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._add_method["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4060__auto__ = mf;
    if (and__4060__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4716__auto__ = mf == null ? null : mf;
    return function() {
      var or__4072__auto__ = cljs.core._remove_method[function() {
        var G__10337 = x__4716__auto__;
        return goog.typeOf(G__10337);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._remove_method["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4060__auto__ = mf;
    if (and__4060__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4716__auto__ = mf == null ? null : mf;
    return function() {
      var or__4072__auto__ = cljs.core._prefer_method[function() {
        var G__10341 = x__4716__auto__;
        return goog.typeOf(G__10341);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4060__auto__ = mf;
    if (and__4060__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4716__auto__ = mf == null ? null : mf;
    return function() {
      var or__4072__auto__ = cljs.core._get_method[function() {
        var G__10345 = x__4716__auto__;
        return goog.typeOf(G__10345);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._get_method["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4060__auto__ = mf;
    if (and__4060__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4716__auto__ = mf == null ? null : mf;
    return function() {
      var or__4072__auto__ = cljs.core._methods[function() {
        var G__10349 = x__4716__auto__;
        return goog.typeOf(G__10349);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._methods["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4060__auto__ = mf;
    if (and__4060__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4060__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4716__auto__ = mf == null ? null : mf;
    return function() {
      var or__4072__auto__ = cljs.core._prefers[function() {
        var G__10353 = x__4716__auto__;
        return goog.typeOf(G__10353);
      }()];
      if (or__4072__auto__) {
        return or__4072__auto__;
      } else {
        var or__4072__auto____$1 = cljs.core._prefers["_"];
        if (or__4072__auto____$1) {
          return or__4072__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__10355 = this$__$1;
  return goog.getUid(G__10355);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10356 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10356) : cljs.core.deref.call(null, G__10356);
  }(), function() {
    var G__10357 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10357) : cljs.core.deref.call(null, G__10357);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__10358 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10358) : cljs.core.deref.call(null, G__10358);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__10359 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10359) : cljs.core.deref.call(null, G__10359);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10360 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10360) : cljs.core.deref.call(null, G__10360);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10361 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10361) : cljs.core.deref.call(null, G__10361);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11202 = null;
  var G__11202__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11202__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10362 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10362) : self__.dispatch_fn.call(null, G__10362);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10363 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10363) : target_fn.call(null, G__10363);
  };
  var G__11202__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10364 = a;
      var G__10365 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10364, G__10365) : self__.dispatch_fn.call(null, G__10364, G__10365);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10366 = a;
    var G__10367 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10366, G__10367) : target_fn.call(null, G__10366, G__10367);
  };
  var G__11202__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10368 = a;
      var G__10369 = b;
      var G__10370 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10368, G__10369, G__10370) : self__.dispatch_fn.call(null, G__10368, G__10369, G__10370);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10371 = a;
    var G__10372 = b;
    var G__10373 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10371, G__10372, G__10373) : target_fn.call(null, G__10371, G__10372, G__10373);
  };
  var G__11202__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10374 = a;
      var G__10375 = b;
      var G__10376 = c;
      var G__10377 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10374, G__10375, G__10376, G__10377) : self__.dispatch_fn.call(null, G__10374, G__10375, G__10376, G__10377);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10378 = a;
    var G__10379 = b;
    var G__10380 = c;
    var G__10381 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10378, G__10379, G__10380, G__10381) : target_fn.call(null, G__10378, G__10379, G__10380, G__10381);
  };
  var G__11202__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10382 = a;
      var G__10383 = b;
      var G__10384 = c;
      var G__10385 = d;
      var G__10386 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10382, G__10383, G__10384, G__10385, G__10386) : self__.dispatch_fn.call(null, G__10382, G__10383, G__10384, G__10385, G__10386);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10387 = a;
    var G__10388 = b;
    var G__10389 = c;
    var G__10390 = d;
    var G__10391 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10387, G__10388, G__10389, G__10390, G__10391) : target_fn.call(null, G__10387, G__10388, G__10389, G__10390, G__10391);
  };
  var G__11202__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10392 = a;
      var G__10393 = b;
      var G__10394 = c;
      var G__10395 = d;
      var G__10396 = e;
      var G__10397 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10392, G__10393, G__10394, G__10395, G__10396, G__10397) : self__.dispatch_fn.call(null, G__10392, G__10393, G__10394, G__10395, G__10396, G__10397);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10398 = a;
    var G__10399 = b;
    var G__10400 = c;
    var G__10401 = d;
    var G__10402 = e;
    var G__10403 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10398, G__10399, G__10400, G__10401, G__10402, G__10403) : target_fn.call(null, G__10398, G__10399, G__10400, G__10401, G__10402, G__10403);
  };
  var G__11202__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10404 = a;
      var G__10405 = b;
      var G__10406 = c;
      var G__10407 = d;
      var G__10408 = e;
      var G__10409 = f;
      var G__10410 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10404, G__10405, G__10406, G__10407, G__10408, G__10409, G__10410) : self__.dispatch_fn.call(null, G__10404, G__10405, G__10406, G__10407, G__10408, G__10409, G__10410);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10411 = a;
    var G__10412 = b;
    var G__10413 = c;
    var G__10414 = d;
    var G__10415 = e;
    var G__10416 = f;
    var G__10417 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10411, G__10412, G__10413, G__10414, G__10415, G__10416, G__10417) : target_fn.call(null, G__10411, G__10412, G__10413, G__10414, G__10415, G__10416, G__10417);
  };
  var G__11202__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10418 = a;
      var G__10419 = b;
      var G__10420 = c;
      var G__10421 = d;
      var G__10422 = e;
      var G__10423 = f;
      var G__10424 = g;
      var G__10425 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10418, G__10419, G__10420, G__10421, G__10422, G__10423, G__10424, G__10425) : self__.dispatch_fn.call(null, G__10418, G__10419, G__10420, G__10421, G__10422, G__10423, G__10424, G__10425);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10426 = a;
    var G__10427 = b;
    var G__10428 = c;
    var G__10429 = d;
    var G__10430 = e;
    var G__10431 = f;
    var G__10432 = g;
    var G__10433 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10426, G__10427, G__10428, G__10429, G__10430, G__10431, G__10432, G__10433) : target_fn.call(null, G__10426, G__10427, G__10428, G__10429, G__10430, G__10431, G__10432, G__10433);
  };
  var G__11202__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10434 = a;
      var G__10435 = b;
      var G__10436 = c;
      var G__10437 = d;
      var G__10438 = e;
      var G__10439 = f;
      var G__10440 = g;
      var G__10441 = h;
      var G__10442 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10434, G__10435, G__10436, G__10437, G__10438, G__10439, G__10440, G__10441, G__10442) : self__.dispatch_fn.call(null, G__10434, G__10435, G__10436, G__10437, G__10438, G__10439, G__10440, G__10441, G__10442);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10443 = a;
    var G__10444 = b;
    var G__10445 = c;
    var G__10446 = d;
    var G__10447 = e;
    var G__10448 = f;
    var G__10449 = g;
    var G__10450 = h;
    var G__10451 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10443, G__10444, G__10445, G__10446, G__10447, G__10448, G__10449, G__10450, G__10451) : target_fn.call(null, G__10443, G__10444, G__10445, G__10446, G__10447, G__10448, G__10449, G__10450, G__10451);
  };
  var G__11202__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10452 = a;
      var G__10453 = b;
      var G__10454 = c;
      var G__10455 = d;
      var G__10456 = e;
      var G__10457 = f;
      var G__10458 = g;
      var G__10459 = h;
      var G__10460 = i;
      var G__10461 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10452, G__10453, G__10454, G__10455, G__10456, G__10457, G__10458, G__10459, G__10460, G__10461) : self__.dispatch_fn.call(null, G__10452, G__10453, G__10454, G__10455, G__10456, G__10457, G__10458, G__10459, G__10460, G__10461);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10462 = a;
    var G__10463 = b;
    var G__10464 = c;
    var G__10465 = d;
    var G__10466 = e;
    var G__10467 = f;
    var G__10468 = g;
    var G__10469 = h;
    var G__10470 = i;
    var G__10471 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10462, G__10463, G__10464, G__10465, G__10466, G__10467, G__10468, G__10469, G__10470, G__10471) : target_fn.call(null, G__10462, G__10463, G__10464, G__10465, G__10466, G__10467, G__10468, G__10469, G__10470, G__10471);
  };
  var G__11202__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10472 = a;
      var G__10473 = b;
      var G__10474 = c;
      var G__10475 = d;
      var G__10476 = e;
      var G__10477 = f;
      var G__10478 = g;
      var G__10479 = h;
      var G__10480 = i;
      var G__10481 = j;
      var G__10482 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10472, G__10473, G__10474, G__10475, G__10476, G__10477, G__10478, G__10479, G__10480, G__10481, G__10482) : self__.dispatch_fn.call(null, G__10472, G__10473, G__10474, G__10475, G__10476, G__10477, G__10478, G__10479, G__10480, G__10481, G__10482);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10483 = a;
    var G__10484 = b;
    var G__10485 = c;
    var G__10486 = d;
    var G__10487 = e;
    var G__10488 = f;
    var G__10489 = g;
    var G__10490 = h;
    var G__10491 = i;
    var G__10492 = j;
    var G__10493 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10483, G__10484, G__10485, G__10486, G__10487, G__10488, G__10489, G__10490, G__10491, G__10492, G__10493) : target_fn.call(null, G__10483, G__10484, G__10485, G__10486, G__10487, G__10488, G__10489, G__10490, G__10491, G__10492, G__10493);
  };
  var G__11202__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10494 = a;
      var G__10495 = b;
      var G__10496 = c;
      var G__10497 = d;
      var G__10498 = e;
      var G__10499 = f;
      var G__10500 = g;
      var G__10501 = h;
      var G__10502 = i;
      var G__10503 = j;
      var G__10504 = k;
      var G__10505 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10494, G__10495, G__10496, G__10497, G__10498, G__10499, G__10500, G__10501, G__10502, G__10503, G__10504, G__10505) : self__.dispatch_fn.call(null, G__10494, G__10495, G__10496, G__10497, G__10498, G__10499, G__10500, G__10501, G__10502, G__10503, G__10504, G__10505);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10506 = a;
    var G__10507 = b;
    var G__10508 = c;
    var G__10509 = d;
    var G__10510 = e;
    var G__10511 = f;
    var G__10512 = g;
    var G__10513 = h;
    var G__10514 = i;
    var G__10515 = j;
    var G__10516 = k;
    var G__10517 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10506, G__10507, G__10508, G__10509, G__10510, G__10511, G__10512, G__10513, G__10514, G__10515, G__10516, G__10517) : target_fn.call(null, G__10506, G__10507, G__10508, G__10509, G__10510, G__10511, G__10512, G__10513, G__10514, G__10515, G__10516, G__10517);
  };
  var G__11202__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10518 = a;
      var G__10519 = b;
      var G__10520 = c;
      var G__10521 = d;
      var G__10522 = e;
      var G__10523 = f;
      var G__10524 = g;
      var G__10525 = h;
      var G__10526 = i;
      var G__10527 = j;
      var G__10528 = k;
      var G__10529 = l;
      var G__10530 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10518, G__10519, G__10520, G__10521, G__10522, G__10523, G__10524, G__10525, G__10526, G__10527, G__10528, G__10529, G__10530) : self__.dispatch_fn.call(null, G__10518, G__10519, G__10520, G__10521, G__10522, G__10523, G__10524, G__10525, G__10526, G__10527, G__10528, G__10529, G__10530);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10531 = a;
    var G__10532 = b;
    var G__10533 = c;
    var G__10534 = d;
    var G__10535 = e;
    var G__10536 = f;
    var G__10537 = g;
    var G__10538 = h;
    var G__10539 = i;
    var G__10540 = j;
    var G__10541 = k;
    var G__10542 = l;
    var G__10543 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10531, G__10532, G__10533, G__10534, G__10535, G__10536, G__10537, G__10538, G__10539, G__10540, G__10541, G__10542, G__10543) : target_fn.call(null, G__10531, G__10532, G__10533, G__10534, G__10535, G__10536, G__10537, G__10538, G__10539, G__10540, G__10541, G__10542, G__10543);
  };
  var G__11202__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10544 = a;
      var G__10545 = b;
      var G__10546 = c;
      var G__10547 = d;
      var G__10548 = e;
      var G__10549 = f;
      var G__10550 = g;
      var G__10551 = h;
      var G__10552 = i;
      var G__10553 = j;
      var G__10554 = k;
      var G__10555 = l;
      var G__10556 = m;
      var G__10557 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10544, G__10545, G__10546, G__10547, G__10548, G__10549, G__10550, G__10551, G__10552, G__10553, G__10554, G__10555, G__10556, G__10557) : self__.dispatch_fn.call(null, G__10544, G__10545, G__10546, G__10547, G__10548, G__10549, G__10550, G__10551, G__10552, G__10553, G__10554, G__10555, G__10556, G__10557);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10558 = a;
    var G__10559 = b;
    var G__10560 = c;
    var G__10561 = d;
    var G__10562 = e;
    var G__10563 = f;
    var G__10564 = g;
    var G__10565 = h;
    var G__10566 = i;
    var G__10567 = j;
    var G__10568 = k;
    var G__10569 = l;
    var G__10570 = m;
    var G__10571 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10558, G__10559, G__10560, G__10561, G__10562, G__10563, G__10564, G__10565, G__10566, G__10567, G__10568, G__10569, G__10570, G__10571) : target_fn.call(null, G__10558, G__10559, G__10560, G__10561, G__10562, G__10563, G__10564, G__10565, G__10566, G__10567, G__10568, G__10569, G__10570, G__10571);
  };
  var G__11202__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10572 = a;
      var G__10573 = b;
      var G__10574 = c;
      var G__10575 = d;
      var G__10576 = e;
      var G__10577 = f;
      var G__10578 = g;
      var G__10579 = h;
      var G__10580 = i;
      var G__10581 = j;
      var G__10582 = k;
      var G__10583 = l;
      var G__10584 = m;
      var G__10585 = n;
      var G__10586 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10572, G__10573, G__10574, G__10575, G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582, G__10583, G__10584, G__10585, G__10586) : self__.dispatch_fn.call(null, G__10572, G__10573, G__10574, G__10575, G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582, G__10583, G__10584, G__10585, G__10586);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10587 = a;
    var G__10588 = b;
    var G__10589 = c;
    var G__10590 = d;
    var G__10591 = e;
    var G__10592 = f;
    var G__10593 = g;
    var G__10594 = h;
    var G__10595 = i;
    var G__10596 = j;
    var G__10597 = k;
    var G__10598 = l;
    var G__10599 = m;
    var G__10600 = n;
    var G__10601 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10587, G__10588, G__10589, G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596, G__10597, G__10598, G__10599, G__10600, G__10601) : target_fn.call(null, G__10587, G__10588, G__10589, G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596, G__10597, G__10598, G__10599, G__10600, G__10601);
  };
  var G__11202__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10602 = a;
      var G__10603 = b;
      var G__10604 = c;
      var G__10605 = d;
      var G__10606 = e;
      var G__10607 = f;
      var G__10608 = g;
      var G__10609 = h;
      var G__10610 = i;
      var G__10611 = j;
      var G__10612 = k;
      var G__10613 = l;
      var G__10614 = m;
      var G__10615 = n;
      var G__10616 = o;
      var G__10617 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10602, G__10603, G__10604, G__10605, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614, G__10615, G__10616, G__10617) : self__.dispatch_fn.call(null, G__10602, G__10603, G__10604, G__10605, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614, G__10615, G__10616, G__10617);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10618 = a;
    var G__10619 = b;
    var G__10620 = c;
    var G__10621 = d;
    var G__10622 = e;
    var G__10623 = f;
    var G__10624 = g;
    var G__10625 = h;
    var G__10626 = i;
    var G__10627 = j;
    var G__10628 = k;
    var G__10629 = l;
    var G__10630 = m;
    var G__10631 = n;
    var G__10632 = o;
    var G__10633 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, G__10624, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633) : target_fn.call(null, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, G__10624, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633);
  };
  var G__11202__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10634 = a;
      var G__10635 = b;
      var G__10636 = c;
      var G__10637 = d;
      var G__10638 = e;
      var G__10639 = f;
      var G__10640 = g;
      var G__10641 = h;
      var G__10642 = i;
      var G__10643 = j;
      var G__10644 = k;
      var G__10645 = l;
      var G__10646 = m;
      var G__10647 = n;
      var G__10648 = o;
      var G__10649 = p;
      var G__10650 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10634, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640, G__10641, G__10642, G__10643, G__10644, G__10645, G__10646, G__10647, G__10648, G__10649, G__10650) : self__.dispatch_fn.call(null, G__10634, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640, G__10641, G__10642, G__10643, G__10644, G__10645, G__10646, G__10647, G__10648, G__10649, G__10650);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10651 = a;
    var G__10652 = b;
    var G__10653 = c;
    var G__10654 = d;
    var G__10655 = e;
    var G__10656 = f;
    var G__10657 = g;
    var G__10658 = h;
    var G__10659 = i;
    var G__10660 = j;
    var G__10661 = k;
    var G__10662 = l;
    var G__10663 = m;
    var G__10664 = n;
    var G__10665 = o;
    var G__10666 = p;
    var G__10667 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10651, G__10652, G__10653, G__10654, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661, G__10662, G__10663, G__10664, G__10665, G__10666, G__10667) : target_fn.call(null, G__10651, G__10652, G__10653, G__10654, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661, G__10662, G__10663, G__10664, G__10665, G__10666, G__10667);
  };
  var G__11202__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10668 = a;
      var G__10669 = b;
      var G__10670 = c;
      var G__10671 = d;
      var G__10672 = e;
      var G__10673 = f;
      var G__10674 = g;
      var G__10675 = h;
      var G__10676 = i;
      var G__10677 = j;
      var G__10678 = k;
      var G__10679 = l;
      var G__10680 = m;
      var G__10681 = n;
      var G__10682 = o;
      var G__10683 = p;
      var G__10684 = q;
      var G__10685 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10668, G__10669, G__10670, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684, G__10685) : self__.dispatch_fn.call(null, G__10668, G__10669, G__10670, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684, G__10685);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10686 = a;
    var G__10687 = b;
    var G__10688 = c;
    var G__10689 = d;
    var G__10690 = e;
    var G__10691 = f;
    var G__10692 = g;
    var G__10693 = h;
    var G__10694 = i;
    var G__10695 = j;
    var G__10696 = k;
    var G__10697 = l;
    var G__10698 = m;
    var G__10699 = n;
    var G__10700 = o;
    var G__10701 = p;
    var G__10702 = q;
    var G__10703 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10686, G__10687, G__10688, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699, G__10700, G__10701, G__10702, G__10703) : target_fn.call(null, G__10686, G__10687, G__10688, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699, G__10700, G__10701, G__10702, G__10703);
  };
  var G__11202__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10704 = a;
      var G__10705 = b;
      var G__10706 = c;
      var G__10707 = d;
      var G__10708 = e;
      var G__10709 = f;
      var G__10710 = g;
      var G__10711 = h;
      var G__10712 = i;
      var G__10713 = j;
      var G__10714 = k;
      var G__10715 = l;
      var G__10716 = m;
      var G__10717 = n;
      var G__10718 = o;
      var G__10719 = p;
      var G__10720 = q;
      var G__10721 = r;
      var G__10722 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722) : self__.dispatch_fn.call(null, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, 
      G__10721, G__10722);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10723 = a;
    var G__10724 = b;
    var G__10725 = c;
    var G__10726 = d;
    var G__10727 = e;
    var G__10728 = f;
    var G__10729 = g;
    var G__10730 = h;
    var G__10731 = i;
    var G__10732 = j;
    var G__10733 = k;
    var G__10734 = l;
    var G__10735 = m;
    var G__10736 = n;
    var G__10737 = o;
    var G__10738 = p;
    var G__10739 = q;
    var G__10740 = r;
    var G__10741 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741) : target_fn.call(null, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741);
  };
  var G__11202__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10742 = a;
      var G__10743 = b;
      var G__10744 = c;
      var G__10745 = d;
      var G__10746 = e;
      var G__10747 = f;
      var G__10748 = g;
      var G__10749 = h;
      var G__10750 = i;
      var G__10751 = j;
      var G__10752 = k;
      var G__10753 = l;
      var G__10754 = m;
      var G__10755 = n;
      var G__10756 = o;
      var G__10757 = p;
      var G__10758 = q;
      var G__10759 = r;
      var G__10760 = s;
      var G__10761 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761) : self__.dispatch_fn.call(null, G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, 
      G__10758, G__10759, G__10760, G__10761);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10762 = a;
    var G__10763 = b;
    var G__10764 = c;
    var G__10765 = d;
    var G__10766 = e;
    var G__10767 = f;
    var G__10768 = g;
    var G__10769 = h;
    var G__10770 = i;
    var G__10771 = j;
    var G__10772 = k;
    var G__10773 = l;
    var G__10774 = m;
    var G__10775 = n;
    var G__10776 = o;
    var G__10777 = p;
    var G__10778 = q;
    var G__10779 = r;
    var G__10780 = s;
    var G__10781 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781) : target_fn.call(null, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, 
    G__10781);
  };
  var G__11202__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11202 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11202__1.call(this, self__);
      case 2:
        return G__11202__2.call(this, self__, a);
      case 3:
        return G__11202__3.call(this, self__, a, b);
      case 4:
        return G__11202__4.call(this, self__, a, b, c);
      case 5:
        return G__11202__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11202__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11202__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11202__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11202__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11202__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11202__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11202__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11202__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11202__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11202__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11202__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11202__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11202__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11202__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11202__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11202__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11202__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11202.cljs$core$IFn$_invoke$arity$1 = G__11202__1;
  G__11202.cljs$core$IFn$_invoke$arity$2 = G__11202__2;
  G__11202.cljs$core$IFn$_invoke$arity$3 = G__11202__3;
  G__11202.cljs$core$IFn$_invoke$arity$4 = G__11202__4;
  G__11202.cljs$core$IFn$_invoke$arity$5 = G__11202__5;
  G__11202.cljs$core$IFn$_invoke$arity$6 = G__11202__6;
  G__11202.cljs$core$IFn$_invoke$arity$7 = G__11202__7;
  G__11202.cljs$core$IFn$_invoke$arity$8 = G__11202__8;
  G__11202.cljs$core$IFn$_invoke$arity$9 = G__11202__9;
  G__11202.cljs$core$IFn$_invoke$arity$10 = G__11202__10;
  G__11202.cljs$core$IFn$_invoke$arity$11 = G__11202__11;
  G__11202.cljs$core$IFn$_invoke$arity$12 = G__11202__12;
  G__11202.cljs$core$IFn$_invoke$arity$13 = G__11202__13;
  G__11202.cljs$core$IFn$_invoke$arity$14 = G__11202__14;
  G__11202.cljs$core$IFn$_invoke$arity$15 = G__11202__15;
  G__11202.cljs$core$IFn$_invoke$arity$16 = G__11202__16;
  G__11202.cljs$core$IFn$_invoke$arity$17 = G__11202__17;
  G__11202.cljs$core$IFn$_invoke$arity$18 = G__11202__18;
  G__11202.cljs$core$IFn$_invoke$arity$19 = G__11202__19;
  G__11202.cljs$core$IFn$_invoke$arity$20 = G__11202__20;
  G__11202.cljs$core$IFn$_invoke$arity$21 = G__11202__21;
  G__11202.cljs$core$IFn$_invoke$arity$22 = G__11202__22;
  return G__11202;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args10354) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10354)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10782 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10782) : self__.dispatch_fn.call(null, G__10782);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10783 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10783) : target_fn.call(null, G__10783);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10784 = a;
    var G__10785 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10784, G__10785) : self__.dispatch_fn.call(null, G__10784, G__10785);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10786 = a;
  var G__10787 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10786, G__10787) : target_fn.call(null, G__10786, G__10787);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10788 = a;
    var G__10789 = b;
    var G__10790 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10788, G__10789, G__10790) : self__.dispatch_fn.call(null, G__10788, G__10789, G__10790);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10791 = a;
  var G__10792 = b;
  var G__10793 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10791, G__10792, G__10793) : target_fn.call(null, G__10791, G__10792, G__10793);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10794 = a;
    var G__10795 = b;
    var G__10796 = c;
    var G__10797 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10794, G__10795, G__10796, G__10797) : self__.dispatch_fn.call(null, G__10794, G__10795, G__10796, G__10797);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10798 = a;
  var G__10799 = b;
  var G__10800 = c;
  var G__10801 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10798, G__10799, G__10800, G__10801) : target_fn.call(null, G__10798, G__10799, G__10800, G__10801);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10802 = a;
    var G__10803 = b;
    var G__10804 = c;
    var G__10805 = d;
    var G__10806 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10802, G__10803, G__10804, G__10805, G__10806) : self__.dispatch_fn.call(null, G__10802, G__10803, G__10804, G__10805, G__10806);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10807 = a;
  var G__10808 = b;
  var G__10809 = c;
  var G__10810 = d;
  var G__10811 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10807, G__10808, G__10809, G__10810, G__10811) : target_fn.call(null, G__10807, G__10808, G__10809, G__10810, G__10811);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10812 = a;
    var G__10813 = b;
    var G__10814 = c;
    var G__10815 = d;
    var G__10816 = e;
    var G__10817 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10812, G__10813, G__10814, G__10815, G__10816, G__10817) : self__.dispatch_fn.call(null, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10818 = a;
  var G__10819 = b;
  var G__10820 = c;
  var G__10821 = d;
  var G__10822 = e;
  var G__10823 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10818, G__10819, G__10820, G__10821, G__10822, G__10823) : target_fn.call(null, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10824 = a;
    var G__10825 = b;
    var G__10826 = c;
    var G__10827 = d;
    var G__10828 = e;
    var G__10829 = f;
    var G__10830 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830) : self__.dispatch_fn.call(null, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10831 = a;
  var G__10832 = b;
  var G__10833 = c;
  var G__10834 = d;
  var G__10835 = e;
  var G__10836 = f;
  var G__10837 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837) : target_fn.call(null, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10838 = a;
    var G__10839 = b;
    var G__10840 = c;
    var G__10841 = d;
    var G__10842 = e;
    var G__10843 = f;
    var G__10844 = g;
    var G__10845 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845) : self__.dispatch_fn.call(null, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10846 = a;
  var G__10847 = b;
  var G__10848 = c;
  var G__10849 = d;
  var G__10850 = e;
  var G__10851 = f;
  var G__10852 = g;
  var G__10853 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853) : target_fn.call(null, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10854 = a;
    var G__10855 = b;
    var G__10856 = c;
    var G__10857 = d;
    var G__10858 = e;
    var G__10859 = f;
    var G__10860 = g;
    var G__10861 = h;
    var G__10862 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862) : self__.dispatch_fn.call(null, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10863 = a;
  var G__10864 = b;
  var G__10865 = c;
  var G__10866 = d;
  var G__10867 = e;
  var G__10868 = f;
  var G__10869 = g;
  var G__10870 = h;
  var G__10871 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871) : target_fn.call(null, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10872 = a;
    var G__10873 = b;
    var G__10874 = c;
    var G__10875 = d;
    var G__10876 = e;
    var G__10877 = f;
    var G__10878 = g;
    var G__10879 = h;
    var G__10880 = i;
    var G__10881 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881) : self__.dispatch_fn.call(null, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10882 = a;
  var G__10883 = b;
  var G__10884 = c;
  var G__10885 = d;
  var G__10886 = e;
  var G__10887 = f;
  var G__10888 = g;
  var G__10889 = h;
  var G__10890 = i;
  var G__10891 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891) : target_fn.call(null, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10892 = a;
    var G__10893 = b;
    var G__10894 = c;
    var G__10895 = d;
    var G__10896 = e;
    var G__10897 = f;
    var G__10898 = g;
    var G__10899 = h;
    var G__10900 = i;
    var G__10901 = j;
    var G__10902 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902) : self__.dispatch_fn.call(null, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10903 = a;
  var G__10904 = b;
  var G__10905 = c;
  var G__10906 = d;
  var G__10907 = e;
  var G__10908 = f;
  var G__10909 = g;
  var G__10910 = h;
  var G__10911 = i;
  var G__10912 = j;
  var G__10913 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913) : target_fn.call(null, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10914 = a;
    var G__10915 = b;
    var G__10916 = c;
    var G__10917 = d;
    var G__10918 = e;
    var G__10919 = f;
    var G__10920 = g;
    var G__10921 = h;
    var G__10922 = i;
    var G__10923 = j;
    var G__10924 = k;
    var G__10925 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925) : self__.dispatch_fn.call(null, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10926 = a;
  var G__10927 = b;
  var G__10928 = c;
  var G__10929 = d;
  var G__10930 = e;
  var G__10931 = f;
  var G__10932 = g;
  var G__10933 = h;
  var G__10934 = i;
  var G__10935 = j;
  var G__10936 = k;
  var G__10937 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10926, G__10927, G__10928, G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937) : target_fn.call(null, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10938 = a;
    var G__10939 = b;
    var G__10940 = c;
    var G__10941 = d;
    var G__10942 = e;
    var G__10943 = f;
    var G__10944 = g;
    var G__10945 = h;
    var G__10946 = i;
    var G__10947 = j;
    var G__10948 = k;
    var G__10949 = l;
    var G__10950 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950) : self__.dispatch_fn.call(null, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10951 = a;
  var G__10952 = b;
  var G__10953 = c;
  var G__10954 = d;
  var G__10955 = e;
  var G__10956 = f;
  var G__10957 = g;
  var G__10958 = h;
  var G__10959 = i;
  var G__10960 = j;
  var G__10961 = k;
  var G__10962 = l;
  var G__10963 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, G__10960, G__10961, G__10962, G__10963) : target_fn.call(null, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, G__10960, G__10961, G__10962, G__10963);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10964 = a;
    var G__10965 = b;
    var G__10966 = c;
    var G__10967 = d;
    var G__10968 = e;
    var G__10969 = f;
    var G__10970 = g;
    var G__10971 = h;
    var G__10972 = i;
    var G__10973 = j;
    var G__10974 = k;
    var G__10975 = l;
    var G__10976 = m;
    var G__10977 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10964, G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977) : self__.dispatch_fn.call(null, G__10964, G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10978 = a;
  var G__10979 = b;
  var G__10980 = c;
  var G__10981 = d;
  var G__10982 = e;
  var G__10983 = f;
  var G__10984 = g;
  var G__10985 = h;
  var G__10986 = i;
  var G__10987 = j;
  var G__10988 = k;
  var G__10989 = l;
  var G__10990 = m;
  var G__10991 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10978, G__10979, G__10980, G__10981, G__10982, G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989, G__10990, G__10991) : target_fn.call(null, G__10978, G__10979, G__10980, G__10981, G__10982, G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989, G__10990, G__10991);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10992 = a;
    var G__10993 = b;
    var G__10994 = c;
    var G__10995 = d;
    var G__10996 = e;
    var G__10997 = f;
    var G__10998 = g;
    var G__10999 = h;
    var G__11000 = i;
    var G__11001 = j;
    var G__11002 = k;
    var G__11003 = l;
    var G__11004 = m;
    var G__11005 = n;
    var G__11006 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002, G__11003, G__11004, G__11005, G__11006) : self__.dispatch_fn.call(null, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002, G__11003, G__11004, G__11005, G__11006);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11007 = a;
  var G__11008 = b;
  var G__11009 = c;
  var G__11010 = d;
  var G__11011 = e;
  var G__11012 = f;
  var G__11013 = g;
  var G__11014 = h;
  var G__11015 = i;
  var G__11016 = j;
  var G__11017 = k;
  var G__11018 = l;
  var G__11019 = m;
  var G__11020 = n;
  var G__11021 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, G__11021) : target_fn.call(null, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, G__11021);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11022 = a;
    var G__11023 = b;
    var G__11024 = c;
    var G__11025 = d;
    var G__11026 = e;
    var G__11027 = f;
    var G__11028 = g;
    var G__11029 = h;
    var G__11030 = i;
    var G__11031 = j;
    var G__11032 = k;
    var G__11033 = l;
    var G__11034 = m;
    var G__11035 = n;
    var G__11036 = o;
    var G__11037 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11022, G__11023, G__11024, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, G__11037) : self__.dispatch_fn.call(null, G__11022, G__11023, G__11024, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, G__11037);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11038 = a;
  var G__11039 = b;
  var G__11040 = c;
  var G__11041 = d;
  var G__11042 = e;
  var G__11043 = f;
  var G__11044 = g;
  var G__11045 = h;
  var G__11046 = i;
  var G__11047 = j;
  var G__11048 = k;
  var G__11049 = l;
  var G__11050 = m;
  var G__11051 = n;
  var G__11052 = o;
  var G__11053 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11038, G__11039, G__11040, G__11041, G__11042, G__11043, G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050, G__11051, G__11052, G__11053) : target_fn.call(null, G__11038, G__11039, G__11040, G__11041, G__11042, G__11043, G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050, G__11051, G__11052, G__11053);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11054 = a;
    var G__11055 = b;
    var G__11056 = c;
    var G__11057 = d;
    var G__11058 = e;
    var G__11059 = f;
    var G__11060 = g;
    var G__11061 = h;
    var G__11062 = i;
    var G__11063 = j;
    var G__11064 = k;
    var G__11065 = l;
    var G__11066 = m;
    var G__11067 = n;
    var G__11068 = o;
    var G__11069 = p;
    var G__11070 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11054, G__11055, G__11056, G__11057, G__11058, G__11059, G__11060, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070) : self__.dispatch_fn.call(null, G__11054, G__11055, G__11056, G__11057, G__11058, G__11059, G__11060, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11071 = a;
  var G__11072 = b;
  var G__11073 = c;
  var G__11074 = d;
  var G__11075 = e;
  var G__11076 = f;
  var G__11077 = g;
  var G__11078 = h;
  var G__11079 = i;
  var G__11080 = j;
  var G__11081 = k;
  var G__11082 = l;
  var G__11083 = m;
  var G__11084 = n;
  var G__11085 = o;
  var G__11086 = p;
  var G__11087 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11071, G__11072, G__11073, G__11074, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085, G__11086, G__11087) : target_fn.call(null, G__11071, G__11072, G__11073, G__11074, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085, G__11086, G__11087);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11088 = a;
    var G__11089 = b;
    var G__11090 = c;
    var G__11091 = d;
    var G__11092 = e;
    var G__11093 = f;
    var G__11094 = g;
    var G__11095 = h;
    var G__11096 = i;
    var G__11097 = j;
    var G__11098 = k;
    var G__11099 = l;
    var G__11100 = m;
    var G__11101 = n;
    var G__11102 = o;
    var G__11103 = p;
    var G__11104 = q;
    var G__11105 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11088, G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105) : self__.dispatch_fn.call(null, G__11088, G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11106 = a;
  var G__11107 = b;
  var G__11108 = c;
  var G__11109 = d;
  var G__11110 = e;
  var G__11111 = f;
  var G__11112 = g;
  var G__11113 = h;
  var G__11114 = i;
  var G__11115 = j;
  var G__11116 = k;
  var G__11117 = l;
  var G__11118 = m;
  var G__11119 = n;
  var G__11120 = o;
  var G__11121 = p;
  var G__11122 = q;
  var G__11123 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11106, G__11107, G__11108, G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123) : target_fn.call(null, G__11106, G__11107, G__11108, G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11124 = a;
    var G__11125 = b;
    var G__11126 = c;
    var G__11127 = d;
    var G__11128 = e;
    var G__11129 = f;
    var G__11130 = g;
    var G__11131 = h;
    var G__11132 = i;
    var G__11133 = j;
    var G__11134 = k;
    var G__11135 = l;
    var G__11136 = m;
    var G__11137 = n;
    var G__11138 = o;
    var G__11139 = p;
    var G__11140 = q;
    var G__11141 = r;
    var G__11142 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11124, G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142) : self__.dispatch_fn.call(null, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139, G__11140, 
    G__11141, G__11142);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11143 = a;
  var G__11144 = b;
  var G__11145 = c;
  var G__11146 = d;
  var G__11147 = e;
  var G__11148 = f;
  var G__11149 = g;
  var G__11150 = h;
  var G__11151 = i;
  var G__11152 = j;
  var G__11153 = k;
  var G__11154 = l;
  var G__11155 = m;
  var G__11156 = n;
  var G__11157 = o;
  var G__11158 = p;
  var G__11159 = q;
  var G__11160 = r;
  var G__11161 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161) : target_fn.call(null, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11162 = a;
    var G__11163 = b;
    var G__11164 = c;
    var G__11165 = d;
    var G__11166 = e;
    var G__11167 = f;
    var G__11168 = g;
    var G__11169 = h;
    var G__11170 = i;
    var G__11171 = j;
    var G__11172 = k;
    var G__11173 = l;
    var G__11174 = m;
    var G__11175 = n;
    var G__11176 = o;
    var G__11177 = p;
    var G__11178 = q;
    var G__11179 = r;
    var G__11180 = s;
    var G__11181 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181) : self__.dispatch_fn.call(null, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, 
    G__11178, G__11179, G__11180, G__11181);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11182 = a;
  var G__11183 = b;
  var G__11184 = c;
  var G__11185 = d;
  var G__11186 = e;
  var G__11187 = f;
  var G__11188 = g;
  var G__11189 = h;
  var G__11190 = i;
  var G__11191 = j;
  var G__11192 = k;
  var G__11193 = l;
  var G__11194 = m;
  var G__11195 = n;
  var G__11196 = o;
  var G__11197 = p;
  var G__11198 = q;
  var G__11199 = r;
  var G__11200 = s;
  var G__11201 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11182, G__11183, G__11184, G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, G__11201) : target_fn.call(null, G__11182, G__11183, G__11184, G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, 
  G__11201);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11203 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__11203);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4659__auto__, writer__4660__auto__, opt__4661__auto__) {
  return cljs.core._write(writer__4660__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function() {
  var cljs$core$ex_info = null;
  var cljs$core$ex_info__2 = function(msg, data) {
    return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var cljs$core$ex_info__3 = function(msg, data, cause) {
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  cljs$core$ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return cljs$core$ex_info__2.call(this, msg, data);
      case 3:
        return cljs$core$ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
  cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
  return cljs$core$ex_info;
}();
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__11211 = x;
      var G__11212 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11211, G__11212) : pred.call(null, G__11211, G__11212);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__11213 = y;
        var G__11214 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11213, G__11214) : pred.call(null, G__11213, G__11214);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("src_cljs.hello.cljs");
goog.require("cljs.core");
cljs.core.enable_console_print_BANG_.call(null);
cljs.core.println.call(null, "Hello world!");
